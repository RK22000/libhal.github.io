<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhal_1_1input__pin" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>hal::input_pin</compoundname>
    <derivedcompoundref refid="classhal_1_1lpc40_1_1input__pin" prot="public" virt="non-virtual">hal::lpc40::input_pin</derivedcompoundref>
    <derivedcompoundref refid="structhal_1_1mock_1_1input__pin" prot="public" virt="non-virtual">hal::mock::input_pin</derivedcompoundref>
    <derivedcompoundref refid="classhal_1_1soft_1_1inert__input__pin" prot="public" virt="non-virtual">hal::soft::inert_input_pin</derivedcompoundref>
    <derivedcompoundref refid="classhal_1_1soft_1_1input__pin__inverter" prot="public" virt="non-virtual">hal::soft::input_pin_inverter</derivedcompoundref>
    <includes refid="libhal_2input__pin_8hpp" local="no">input_pin.hpp</includes>
    <innerclass refid="structhal_1_1input__pin_1_1level__t" prot="public">hal::input_pin::level_t</innerclass>
    <innerclass refid="structhal_1_1input__pin_1_1settings" prot="public">hal::input_pin::settings</innerclass>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhal_1_1input__pin_1ac61d7c871be05f7459ecad05c1729188" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>status</type>
        <definition>status hal::input_pin::configure</definition>
        <argsstring>(const settings &amp;p_settings)</argsstring>
        <name>configure</name>
        <param>
          <type>const <ref refid="structhal_1_1input__pin_1_1settings" kindref="compound">settings</ref> &amp;</type>
          <declname>p_settings</declname>
        </param>
        <briefdescription>
<para>Configure the input pin to match the settings supplied. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_settings</parametername>
</parameternamelist>
<parameterdescription>
<para>- settings to apply to input pin </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status - success or failure </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::errc::invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>if the settings could not be achieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/input_pin.hpp" line="51" column="11" bodyfile="libraries/include/libhal/input_pin.hpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1input__pin_1a757d49cf83e37348236fcac52d2a39d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>result&lt; <ref refid="structhal_1_1input__pin_1_1level__t" kindref="compound">level_t</ref> &gt;</type>
        <definition>result&lt;level_t&gt; hal::input_pin::level</definition>
        <argsstring>()</argsstring>
        <name>level</name>
        <briefdescription>
<para>Read the state of the input pin. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>result&lt;bool&gt; - true indicates HIGH voltage level and false indicates LOW voltage level </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/input_pin.hpp" line="62" column="11" bodyfile="libraries/include/libhal/input_pin.hpp" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1input__pin_1a3880caa73ba24653823e2d8930173103" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual hal::input_pin::~input_pin</definition>
        <argsstring>()=default</argsstring>
        <name>~input_pin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/input_pin.hpp" line="67" column="11"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhal_1_1input__pin_1aec92d467a73ecdce76cd219601126d22" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>status</type>
        <definition>virtual status hal::input_pin::driver_configure</definition>
        <argsstring>(const settings &amp;p_settings)=0</argsstring>
        <name>driver_configure</name>
        <reimplementedby refid="classhal_1_1lpc40_1_1input__pin_1a969e8dbba8b575981d07ed831c5b89f1">driver_configure</reimplementedby>
        <reimplementedby refid="structhal_1_1mock_1_1input__pin_1a02e5474894bd45e76fcb0adc00503f74">driver_configure</reimplementedby>
        <reimplementedby refid="classhal_1_1soft_1_1input__pin__inverter_1a60064d07db13765ae6b7b936fb9f771c">driver_configure</reimplementedby>
        <param>
          <type>const <ref refid="structhal_1_1input__pin_1_1settings" kindref="compound">settings</ref> &amp;</type>
          <declname>p_settings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/input_pin.hpp" line="70" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1input__pin_1a8a50240d3fc6510aa541e2b4ce1148a9" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>result&lt; <ref refid="structhal_1_1input__pin_1_1level__t" kindref="compound">level_t</ref> &gt;</type>
        <definition>virtual result&lt;level_t&gt; hal::input_pin::driver_level</definition>
        <argsstring>()=0</argsstring>
        <name>driver_level</name>
        <reimplementedby refid="classhal_1_1soft_1_1inert__input__pin_1ab6a61390a12d570ef8a27eddeea1e210">driver_level</reimplementedby>
        <reimplementedby refid="classhal_1_1lpc40_1_1input__pin_1aa1c83117e41358b90e3e313100c8f010">driver_level</reimplementedby>
        <reimplementedby refid="structhal_1_1mock_1_1input__pin_1a9b5a25a13f49b301efc5133b031f66e4">driver_level</reimplementedby>
        <reimplementedby refid="classhal_1_1soft_1_1input__pin__inverter_1a07c86c789f3c83fdc571d1b1bbc60594">driver_level</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/input_pin.hpp" line="71" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Digital input pin hardware abstraction interface. </para>
    </briefdescription>
    <detaileddescription>
<para>Use this to read a pin and determine if the voltage on it is HIGH or LOW. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>hal::lpc40::input_pin</label>
        <link refid="classhal_1_1lpc40_1_1input__pin"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>hal::soft::inert_input_pin</label>
        <link refid="classhal_1_1soft_1_1inert__input__pin"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>hal::input_pin</label>
        <link refid="classhal_1_1input__pin"/>
      </node>
      <node id="3">
        <label>hal::mock::input_pin</label>
        <link refid="structhal_1_1mock_1_1input__pin"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>hal::soft::input_pin_inverter</label>
        <link refid="classhal_1_1soft_1_1input__pin__inverter"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="libraries/include/libhal/input_pin.hpp" line="27" column="1" bodyfile="libraries/include/libhal/input_pin.hpp" bodystart="28" bodyend="72"/>
    <listofallmembers>
      <member refid="classhal_1_1input__pin_1ac61d7c871be05f7459ecad05c1729188" prot="public" virt="non-virtual"><scope>hal::input_pin</scope><name>configure</name></member>
      <member refid="classhal_1_1input__pin_1aec92d467a73ecdce76cd219601126d22" prot="private" virt="pure-virtual"><scope>hal::input_pin</scope><name>driver_configure</name></member>
      <member refid="classhal_1_1input__pin_1a8a50240d3fc6510aa541e2b4ce1148a9" prot="private" virt="pure-virtual"><scope>hal::input_pin</scope><name>driver_level</name></member>
      <member refid="classhal_1_1input__pin_1a757d49cf83e37348236fcac52d2a39d9" prot="public" virt="non-virtual"><scope>hal::input_pin</scope><name>level</name></member>
      <member refid="classhal_1_1input__pin_1a3880caa73ba24653823e2d8930173103" prot="public" virt="virtual"><scope>hal::input_pin</scope><name>~input_pin</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
