<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="interrupt_8hpp" kind="file" language="C++">
    <compoundname>interrupt.hpp</compoundname>
    <includes local="no">array</includes>
    <includes local="no">span</includes>
    <includes local="no">utility</includes>
    <includes refid="error_8hpp" local="no">libhal/error.hpp</includes>
    <incdepgraph>
      <node id="6">
        <label>system_error</label>
      </node>
      <node id="1">
        <label>libraries/include/libhal-armcortex/interrupt.hpp</label>
        <link refid="interrupt_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>boost/leaf/detail/all.hpp</label>
      </node>
      <node id="4">
        <label>utility</label>
      </node>
      <node id="2">
        <label>array</label>
      </node>
      <node id="5">
        <label>libhal/error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>span</label>
      </node>
    </incdepgraph>
    <innerclass refid="classhal_1_1cortex__m_1_1interrupt" prot="public">hal::cortex_m::interrupt</innerclass>
    <innerclass refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number" prot="public">hal::cortex_m::interrupt::exception_number</innerclass>
    <innernamespace refid="namespacehal">hal</innernamespace>
    <innernamespace refid="namespacehal_1_1cortex__m">hal::cortex_m</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2023<sp/>Google<sp/>LLC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;array&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;span&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libhal/error.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehal_1_1cortex__m" kindref="compound">hal::cortex_m</ref><sp/>{</highlight></codeline>
<codeline lineno="25" refid="namespacehal_1_1cortex__m_1a16233c06cbfec74ed1d91019cf84cabc" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehal_1_1cortex__m_1a16233c06cbfec74ed1d91019cf84cabc" kindref="member">interrupt_pointer</ref><sp/>=<sp/>void<sp/>(*)();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="namespacehal_1_1cortex__m_1aefded35edd3780ed20f0b25a0c3edf9c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespacehal_1_1cortex__m_1aefded35edd3780ed20f0b25a0c3edf9c" kindref="member">irq</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>top_of_stack<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="namespacehal_1_1cortex__m_1a3ecce6a4dee9538d3c8b4d3d1a14fc1b" kindref="member">reset</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="namespacehal_1_1cortex__m_1aefded35edd3780ed20f0b25a0c3edf9cabcc0f53fbd0c273d18435941509f4eda" kindref="member">nmi</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>hard_fault<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>memory_management_fault<sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>bus_fault<sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>usage_fault<sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>reserve7<sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>reserve8<sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>reserve9<sp/>=<sp/>9,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>reserve10<sp/>=<sp/>10,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="namespacehal_1_1cortex__m_1aefded35edd3780ed20f0b25a0c3edf9ca123c590a966149e0ec0d515a346e6ad6" kindref="member">sv_call</ref><sp/>=<sp/>11,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>reserve12<sp/>=<sp/>12,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>reserve13<sp/>=<sp/>13,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>pend_sv<sp/>=<sp/>14,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>systick<sp/>=<sp/>15,</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="classhal_1_1cortex__m_1_1interrupt" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhal_1_1cortex__m_1_1interrupt" kindref="compound">interrupt</ref></highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61" refid="classhal_1_1cortex__m_1_1interrupt_1a1a83927d27902c18f5e45dfb0d957dfb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1a1a83927d27902c18f5e45dfb0d957dfb" kindref="member">core_interrupts</ref><sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number" kindref="compound">exception_number</ref></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78" refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number_1a5133b258b38fe723f6a40aaaad41f641" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number_1a5133b258b38fe723f6a40aaaad41f641" kindref="member">exception_number</ref>(std::uint16_t<sp/>p_id)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_id(p_id)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number_1a5133b258b38fe723f6a40aaaad41f641" kindref="member">exception_number</ref>(<ref refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number" kindref="compound">exception_number</ref>&amp;<sp/>p_id)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number" kindref="compound">exception_number</ref>&amp;<sp/>operator=(<ref refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number" kindref="compound">exception_number</ref>&amp;<sp/>p_id)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number_1a2d19aa1cf7edb91bdc7a8d16b2a5b2d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>uint32_t<sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number_1a2d19aa1cf7edb91bdc7a8d16b2a5b2d4" kindref="member">index_position</ref><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number_1acb93f52a6f6e478f76accd06fb20a6f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/>uint32_t<sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number_1acb93f52a6f6e478f76accd06fb20a6f9" kindref="member">enable_mask_code</ref><sp/>=<sp/>0x1F;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number_1a2c1a386b8b6c56233e42c1a25c2bec8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>constexpr<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number_1a2c1a386b8b6c56233e42c1a25c2bec8b" kindref="member">default_enabled</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="107"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_id<sp/>&lt;<sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1a1a83927d27902c18f5e45dfb0d957dfb" kindref="member">core_interrupts</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>constexpr<sp/>std::uint32_t<sp/>to_irq_number()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="112"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">std::uint32_t</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(m_id<sp/>-<sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1a1a83927d27902c18f5e45dfb0d957dfb" kindref="member">core_interrupts</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number_1afc52160c2f7590fc4794a570927704f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>constexpr<sp/>std::uint32_t<sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number_1afc52160c2f7590fc4794a570927704f3" kindref="member">register_index</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="124"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>to_irq_number()<sp/>&gt;&gt;<sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number_1a2d19aa1cf7edb91bdc7a8d16b2a5b2d4" kindref="member">index_position</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number_1ab578110f924967ae33f22cbde05074c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>constexpr<sp/>std::uint32_t<sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number_1ab578110f924967ae33f22cbde05074c9" kindref="member">enable_mask</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="135"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1U<sp/>&lt;&lt;<sp/>(to_irq_number()<sp/>&amp;<sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number_1acb93f52a6f6e478f76accd06fb20a6f9" kindref="member">enable_mask_code</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number_1a7c479095d277bf828a04e8be88f3a5d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number_1a7c479095d277bf828a04e8be88f3a5d9" kindref="member">vector_index</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="145"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_id;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number_1a1426aeeb60a194921dc9f1450e7f581d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number_1a1426aeeb60a194921dc9f1450e7f581d" kindref="member">is_valid</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="157"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_id<sp/>&lt;<sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1a9009384257f7bda0802c476b9fce78f4" kindref="member">get_vector_table</ref>().size();</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number_1a0ac09662e4a28fad8d7b7a97ad3a1d0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/>constexpr<sp/>std::uint16_t<sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number_1a0ac09662e4a28fad8d7b7a97ad3a1d0f" kindref="member">get_event_number</ref>()</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_id;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>std::uint16_t<sp/>m_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="classhal_1_1cortex__m_1_1interrupt_1ab9f7c5585a2b28e04cf5aae53a07c961" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1ab9f7c5585a2b28e04cf5aae53a07c961" kindref="member">nop</ref>();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>VectorCount&gt;</highlight></codeline>
<codeline lineno="201" refid="classhal_1_1cortex__m_1_1interrupt_1a2bb148e9f62ee19f5de67fb10efa1492" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1a2bb148e9f62ee19f5de67fb10efa1492" kindref="member">initialize</ref>()</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Statically<sp/>allocate<sp/>a<sp/>buffer<sp/>of<sp/>vectors<sp/>to<sp/>be<sp/>used<sp/>as<sp/>the<sp/>new<sp/>IVT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>constexpr<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>total_vector_count<sp/>=<sp/>VectorCount<sp/>+<sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1a1a83927d27902c18f5e45dfb0d957dfb" kindref="member">core_interrupts</ref>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">alignas</highlight><highlight class="normal">(512)<sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::array&lt;interrupt_pointer,<sp/>total_vector_count&gt;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector_buffer{};</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>setup(vector_buffer);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>VectorCount&gt;</highlight></codeline>
<codeline lineno="220" refid="classhal_1_1cortex__m_1_1interrupt_1ad8162f55a4b3291d6b4d166bddcc9b3f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1ad8162f55a4b3291d6b4d166bddcc9b3f" kindref="member">reinitialize</ref>()</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>reset();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>initialize&lt;VectorCount&gt;();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="231" refid="classhal_1_1cortex__m_1_1interrupt_1a9009384257f7bda0802c476b9fce78f4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::span&lt;interrupt_pointer&gt;<sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1a9009384257f7bda0802c476b9fce78f4" kindref="member">get_vector_table</ref>();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>disable_interrupts();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>enable_interrupts();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="classhal_1_1cortex__m_1_1interrupt_1a045c9af5b95f2af7d38f40e9b37126fe" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1a045c9af5b95f2af7d38f40e9b37126fe" kindref="member">interrupt</ref>(<ref refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number" kindref="compound">exception_number</ref><sp/>p_id);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="classhal_1_1cortex__m_1_1interrupt_1a2ef9a13db819236f2c5325fd872daa6f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1a2ef9a13db819236f2c5325fd872daa6f" kindref="member">enable</ref>(<ref refid="namespacehal_1_1cortex__m_1a16233c06cbfec74ed1d91019cf84cabc" kindref="member">interrupt_pointer</ref><sp/>p_handler);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="classhal_1_1cortex__m_1_1interrupt_1ac07a42c480932acb60897e7fc832eb2d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1ac07a42c480932acb60897e7fc832eb2d" kindref="member">disable</ref>();</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="classhal_1_1cortex__m_1_1interrupt_1ac0fbc2f57be172ebb45b1cb3b088b0b4" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1ac0fbc2f57be172ebb45b1cb3b088b0b4" kindref="member">verify_vector_enabled</ref>(<ref refid="namespacehal_1_1cortex__m_1a16233c06cbfec74ed1d91019cf84cabc" kindref="member">interrupt_pointer</ref><sp/>p_handler);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset();</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setup(std::span&lt;interrupt_pointer&gt;<sp/>p_vector_table);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><ref refid="classhal_1_1cortex__m_1_1interrupt_1_1exception__number" kindref="compound">exception_number</ref><sp/>m_id;</highlight></codeline>
<codeline lineno="276"><highlight class="normal">};</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hal::cortex_m</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="libraries/include/libhal-armcortex/interrupt.hpp"/>
  </compounddef>
</doxygen>
