<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacehal_1_1bit" kind="namespace" language="C++">
    <compoundname>hal::bit</compoundname>
    <innerclass refid="structhal_1_1bit_1_1mask" prot="public">hal::bit::mask</innerclass>
    <innerclass refid="structhal_1_1bit_1_1byte__mask" prot="public">hal::bit::byte_mask</innerclass>
    <innerclass refid="structhal_1_1bit_1_1nibble__mask" prot="public">hal::bit::nibble_mask</innerclass>
    <innerclass refid="classhal_1_1bit_1_1value" prot="public">hal::bit::value</innerclass>
    <innerclass refid="classhal_1_1bit_1_1modify" prot="public">hal::bit::modify</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="bit_8hpp_1a4ad15fff18d726190fe4da6963493851" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>ByteIndex</declname>
            <defname>ByteIndex</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="structhal_1_1bit_1_1mask" kindref="compound">hal::bit::mask</ref></type>
        <definition>constexpr hal::bit::mask hal::bit::byte_m</definition>
        <argsstring></argsstring>
        <name>byte_m</name>
        <initializer>= <ref refid="structhal_1_1bit_1_1byte__mask" kindref="compound">byte_mask</ref>&lt;ByteIndex&gt;::<ref refid="classhal_1_1bit_1_1value" kindref="compound">value</ref></initializer>
        <briefdescription>
<para>Shorthand for using <ref refid="structhal_1_1bit_1_1byte__mask_1a87e9369a6f5617179e0b8223e5e645fa" kindref="member">hal::bit::byte_mask&lt;N&gt;::value</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ByteIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>- the byte position to make a mask for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="195" column="26" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bit_8hpp_1ac1c51cdb82daaeb05bfc00cae34e1465" prot="public" static="no" constexpr="yes" mutable="no">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>NibbleIndex</declname>
            <defname>NibbleIndex</defname>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="structhal_1_1bit_1_1mask" kindref="compound">hal::bit::mask</ref></type>
        <definition>constexpr hal::bit::mask hal::bit::nibble_m</definition>
        <argsstring></argsstring>
        <name>nibble_m</name>
        <initializer>= <ref refid="structhal_1_1bit_1_1nibble__mask" kindref="compound">nibble_mask</ref>&lt;NibbleIndex&gt;::<ref refid="classhal_1_1bit_1_1value" kindref="compound">value</ref></initializer>
        <briefdescription>
<para>Shorthand for using hal::bit::nibble_mask&lt;N&gt;::value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NibbleIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>- the nibble position to make a mask for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="214" column="26" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="214" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="bit_8hpp_1aeadcdfd29dd4df48384d04d36b8d0a8e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>mask</type>
            <declname>field</declname>
            <defname>field</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto hal::bit::extract</definition>
        <argsstring>(std::unsigned_integral auto p_value)</argsstring>
        <name>extract</name>
        <param>
          <type>std::unsigned_integral auto</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="217" column="16" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="217" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="bit_8hpp_1a152591c7c88e7b373ef698aa3ed5ba5f" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hal::bit::extract</definition>
        <argsstring>(mask p_field, std::unsigned_integral auto p_value)</argsstring>
        <name>extract</name>
        <param>
          <type><ref refid="structhal_1_1bit_1_1mask" kindref="compound">mask</ref></type>
          <declname>p_field</declname>
        </param>
        <param>
          <type>std::unsigned_integral auto</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="228" column="16" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="228" bodyend="237"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/include/libhal-util/bit.hpp" line="22" column="1"/>
  </compounddef>
</doxygen>
