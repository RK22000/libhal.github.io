<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structhal_1_1mock_1_1steady__clock" kind="struct" language="C++" prot="public">
    <compoundname>hal::mock::steady_clock</compoundname>
    <basecompoundref refid="classhal_1_1steady__clock" prot="public" virt="non-virtual">hal::steady_clock</basecompoundref>
    <includes refid="libhal-mock_2steady__clock_8hpp" local="no">steady_clock.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structhal_1_1mock_1_1steady__clock_1a36590dd429c6079d57183153e80b0cca" prot="private" static="no" mutable="no">
        <type><ref refid="structhal_1_1steady__clock_1_1frequency__t" kindref="compound">frequency_t</ref></type>
        <definition>frequency_t hal::mock::steady_clock::m_frequency</definition>
        <argsstring></argsstring>
        <name>m_frequency</name>
        <initializer>{ .operating_frequency = 1.0_Hz }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-mock/steady_clock.hpp" line="66" column="15" bodyfile="libraries/include/libhal-mock/steady_clock.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhal_1_1mock_1_1steady__clock_1a29c0210dd8300f9979f66b2e2d22636e" prot="private" static="no" mutable="no">
        <type>std::queue&lt; <ref refid="structhal_1_1steady__clock_1_1uptime__t" kindref="compound">uptime_t</ref> &gt;</type>
        <definition>std::queue&lt;uptime_t&gt; hal::mock::steady_clock::m_uptime_values</definition>
        <argsstring></argsstring>
        <name>m_uptime_values</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-mock/steady_clock.hpp" line="67" column="14" bodyfile="libraries/include/libhal-mock/steady_clock.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhal_1_1mock_1_1steady__clock_1aff2b98b84487bb78ce5cbcd00c1c39ae" prot="private" static="no" mutable="no">
        <type><ref refid="structhal_1_1steady__clock_1_1uptime__t" kindref="compound">uptime_t</ref></type>
        <definition>uptime_t hal::mock::steady_clock::m_last_uptime</definition>
        <argsstring></argsstring>
        <name>m_last_uptime</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-mock/steady_clock.hpp" line="68" column="12" bodyfile="libraries/include/libhal-mock/steady_clock.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structhal_1_1mock_1_1steady__clock_1a3aac1d2383dc3eaa30914d168c7e570b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hal::mock::steady_clock::set_frequency</definition>
        <argsstring>(frequency_t p_frequency)</argsstring>
        <name>set_frequency</name>
        <param>
          <type><ref refid="structhal_1_1steady__clock_1_1frequency__t" kindref="compound">frequency_t</ref></type>
          <declname>p_frequency</declname>
        </param>
        <briefdescription>
<para>Set the frequency to be returned from <ref refid="classhal_1_1steady__clock_1a2bb1983d9fa94b9fe5bdb8159de03220" kindref="member">frequency()</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_frequency</parametername>
</parameternamelist>
<parameterdescription>
<para>- Frequency to return </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-mock/steady_clock.hpp" line="34" column="8" bodyfile="libraries/include/libhal-mock/steady_clock.hpp" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="structhal_1_1mock_1_1steady__clock_1aa0aa57772e28273fbb0591a7ab819bab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hal::mock::steady_clock::set_uptimes</definition>
        <argsstring>(std::queue&lt; uptime_t &gt; &amp;p_uptime_values)</argsstring>
        <name>set_uptimes</name>
        <param>
          <type>std::queue&lt; <ref refid="structhal_1_1steady__clock_1_1uptime__t" kindref="compound">uptime_t</ref> &gt; &amp;</type>
          <declname>p_uptime_values</declname>
        </param>
        <briefdescription>
<para>Queues the uptimes to be returned from uptimes() </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_uptime_values</parametername>
</parameternamelist>
<parameterdescription>
<para>- Queue of uptimes </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-mock/steady_clock.hpp" line="44" column="8" bodyfile="libraries/include/libhal-mock/steady_clock.hpp" bodystart="44" bodyend="47"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structhal_1_1mock_1_1steady__clock_1a8c94bd8e838f40f023d012f1b9da15c6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="structhal_1_1steady__clock_1_1frequency__t" kindref="compound">frequency_t</ref></type>
        <definition>frequency_t hal::mock::steady_clock::driver_frequency</definition>
        <argsstring>()</argsstring>
        <name>driver_frequency</name>
        <reimplements refid="classhal_1_1steady__clock_1af69e8bc7e978529720cb18149241ba85">driver_frequency</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-mock/steady_clock.hpp" line="50" column="15" bodyfile="libraries/include/libhal-mock/steady_clock.hpp" bodystart="50" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="structhal_1_1mock_1_1steady__clock_1a01cb962481b947abfd9aa1b1a96fb7b6" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="structhal_1_1steady__clock_1_1uptime__t" kindref="compound">uptime_t</ref></type>
        <definition>uptime_t hal::mock::steady_clock::driver_uptime</definition>
        <argsstring>()</argsstring>
        <name>driver_uptime</name>
        <reimplements refid="classhal_1_1steady__clock_1aa15e00cbbe00e98015aa86dbe016f812">driver_uptime</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-mock/steady_clock.hpp" line="55" column="12" bodyfile="libraries/include/libhal-mock/steady_clock.hpp" bodystart="55" bodyend="64"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>mock <ref refid="structhal_1_1mock_1_1steady__clock" kindref="compound">steady_clock</ref> implementation for use in unit tests and simulations. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>hal::mock::steady_clock</label>
        <link refid="structhal_1_1mock_1_1steady__clock"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hal::steady_clock</label>
        <link refid="classhal_1_1steady__clock"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>hal::mock::steady_clock</label>
        <link refid="structhal_1_1mock_1_1steady__clock"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hal::steady_clock</label>
        <link refid="classhal_1_1steady__clock"/>
      </node>
    </collaborationgraph>
    <location file="libraries/include/libhal-mock/steady_clock.hpp" line="27" column="1" bodyfile="libraries/include/libhal-mock/steady_clock.hpp" bodystart="28" bodyend="69"/>
    <listofallmembers>
      <member refid="structhal_1_1mock_1_1steady__clock_1a8c94bd8e838f40f023d012f1b9da15c6" prot="private" virt="virtual"><scope>hal::mock::steady_clock</scope><name>driver_frequency</name></member>
      <member refid="structhal_1_1mock_1_1steady__clock_1a01cb962481b947abfd9aa1b1a96fb7b6" prot="private" virt="virtual"><scope>hal::mock::steady_clock</scope><name>driver_uptime</name></member>
      <member refid="classhal_1_1steady__clock_1a2bb1983d9fa94b9fe5bdb8159de03220" prot="public" virt="non-virtual"><scope>hal::mock::steady_clock</scope><name>frequency</name></member>
      <member refid="structhal_1_1mock_1_1steady__clock_1a36590dd429c6079d57183153e80b0cca" prot="private" virt="non-virtual"><scope>hal::mock::steady_clock</scope><name>m_frequency</name></member>
      <member refid="structhal_1_1mock_1_1steady__clock_1aff2b98b84487bb78ce5cbcd00c1c39ae" prot="private" virt="non-virtual"><scope>hal::mock::steady_clock</scope><name>m_last_uptime</name></member>
      <member refid="structhal_1_1mock_1_1steady__clock_1a29c0210dd8300f9979f66b2e2d22636e" prot="private" virt="non-virtual"><scope>hal::mock::steady_clock</scope><name>m_uptime_values</name></member>
      <member refid="structhal_1_1mock_1_1steady__clock_1a3aac1d2383dc3eaa30914d168c7e570b" prot="public" virt="non-virtual"><scope>hal::mock::steady_clock</scope><name>set_frequency</name></member>
      <member refid="structhal_1_1mock_1_1steady__clock_1aa0aa57772e28273fbb0591a7ab819bab" prot="public" virt="non-virtual"><scope>hal::mock::steady_clock</scope><name>set_uptimes</name></member>
      <member refid="classhal_1_1steady__clock_1ae36599416bdd64434e56b2ff6a2c2262" prot="public" virt="non-virtual"><scope>hal::mock::steady_clock</scope><name>uptime</name></member>
      <member refid="classhal_1_1steady__clock_1a8c1bf5a5f874b6971cd84e213afe6818" prot="public" virt="virtual"><scope>hal::mock::steady_clock</scope><name>~steady_clock</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
