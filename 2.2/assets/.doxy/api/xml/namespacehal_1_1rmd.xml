<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacehal_1_1rmd" kind="namespace" language="C++">
    <compoundname>hal::rmd</compoundname>
    <innerclass refid="classhal_1_1rmd_1_1drc" prot="public">hal::rmd::drc</innerclass>
    <innerclass refid="classhal_1_1rmd_1_1drc__rotation__sensor" prot="public">hal::rmd::drc_rotation_sensor</innerclass>
    <innerclass refid="classhal_1_1rmd_1_1drc__temperature__sensor" prot="public">hal::rmd::drc_temperature_sensor</innerclass>
    <innerclass refid="classhal_1_1rmd_1_1drc__motor" prot="public">hal::rmd::drc_motor</innerclass>
    <innerclass refid="classhal_1_1rmd_1_1drc__servo" prot="public">hal::rmd::drc_servo</innerclass>
    <innerclass refid="classhal_1_1rmd_1_1drc__angular__velocity__sensor" prot="public">hal::rmd::drc_angular_velocity_sensor</innerclass>
    <innerclass refid="classhal_1_1rmd_1_1mc__x" prot="public">hal::rmd::mc_x</innerclass>
    <innerclass refid="classhal_1_1rmd_1_1mc__x__motor" prot="public">hal::rmd::mc_x_motor</innerclass>
    <innerclass refid="classhal_1_1rmd_1_1mc__x__rotation" prot="public">hal::rmd::mc_x_rotation</innerclass>
    <innerclass refid="classhal_1_1rmd_1_1mc__x__servo" prot="public">hal::rmd::mc_x_servo</innerclass>
    <innerclass refid="classhal_1_1rmd_1_1mc__x__temperature" prot="public">hal::rmd::mc_x_temperature</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="drc_8hpp_1a97801e9b419660fd40d257df1e598e2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result&lt; <ref refid="classhal_1_1rmd_1_1drc__rotation__sensor" kindref="compound">drc_rotation_sensor</ref> &gt;</type>
        <definition>result&lt;drc_rotation_sensor&gt; hal::rmd::make_rotation_sensor</definition>
        <argsstring>(drc &amp;p_drc)</argsstring>
        <name>make_rotation_sensor</name>
        <param>
          <type><ref refid="classhal_1_1rmd_1_1drc" kindref="compound">drc</ref> &amp;</type>
          <declname>p_drc</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classhal_1_1rotation__sensor" kindref="compound">hal::rotation_sensor</ref> driver using the drc driver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_drc</parametername>
</parameternamelist>
<parameterdescription>
<para>- reference to a drc driver. This object&apos;s lifetime must exceed the lifetime of the returned object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classhal_1_1rmd_1_1drc__rotation__sensor" kindref="compound">drc_rotation_sensor</ref> - motor implementation based on the drc driver </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/drc.hpp" line="269" column="8" declfile="libraries/include/libhal-rmd/drc.hpp" declline="269" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="drc_8hpp_1aaad14f21819d15fbb8c4cdc64ebe019f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result&lt; <ref refid="classhal_1_1rmd_1_1drc__temperature__sensor" kindref="compound">drc_temperature_sensor</ref> &gt;</type>
        <definition>result&lt;drc_temperature_sensor&gt; hal::rmd::make_temperature_sensor</definition>
        <argsstring>(drc &amp;p_drc)</argsstring>
        <name>make_temperature_sensor</name>
        <param>
          <type><ref refid="classhal_1_1rmd_1_1drc" kindref="compound">drc</ref> &amp;</type>
          <declname>p_drc</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classhal_1_1temperature__sensor" kindref="compound">hal::temperature_sensor</ref> driver using the drc driver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_drc</parametername>
</parameternamelist>
<parameterdescription>
<para>- reference to a drc driver. This object&apos;s lifetime must exceed the lifetime of the returned object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result&lt;drc_temperature_sensor&gt; - temperature sensor implementation based on the drc driver. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/drc.hpp" line="291" column="8" declfile="libraries/include/libhal-rmd/drc.hpp" declline="291" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="drc_8hpp_1ab10bba4bffa7c48a341e3d3ae4875460" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result&lt; <ref refid="classhal_1_1rmd_1_1drc__motor" kindref="compound">drc_motor</ref> &gt;</type>
        <definition>result&lt;drc_motor&gt; hal::rmd::make_motor</definition>
        <argsstring>(drc &amp;p_drc, hal::rpm p_max_speed)</argsstring>
        <name>make_motor</name>
        <param>
          <type><ref refid="classhal_1_1rmd_1_1drc" kindref="compound">drc</ref> &amp;</type>
          <declname>p_drc</declname>
        </param>
        <param>
          <type><ref refid="namespacehal_1a115c0adadc69503586eff94ce028cd87" kindref="member">hal::rpm</ref></type>
          <declname>p_max_speed</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classhal_1_1motor" kindref="compound">hal::motor</ref> implementation from the drc driver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_drc</parametername>
</parameternamelist>
<parameterdescription>
<para>- reference to a drc driver. This object&apos;s lifetime must NOT exceed the lifetime of the return drc motor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_max_speed</parametername>
</parameternamelist>
<parameterdescription>
<para>- maximum speed of the motor represented by +1.0 and -1.0 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classhal_1_1rmd_1_1drc__motor" kindref="compound">drc_motor</ref> - motor implementation based on the drc driver </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/drc.hpp" line="319" column="8" declfile="libraries/include/libhal-rmd/drc.hpp" declline="319" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="drc_8hpp_1a32a333ed4e75f76d853dcf0109a9bf60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result&lt; <ref refid="classhal_1_1rmd_1_1drc__servo" kindref="compound">drc_servo</ref> &gt;</type>
        <definition>result&lt;drc_servo&gt; hal::rmd::make_servo</definition>
        <argsstring>(drc &amp;p_drc, hal::rpm p_max_speed)</argsstring>
        <name>make_servo</name>
        <param>
          <type><ref refid="classhal_1_1rmd_1_1drc" kindref="compound">drc</ref> &amp;</type>
          <declname>p_drc</declname>
        </param>
        <param>
          <type><ref refid="namespacehal_1a115c0adadc69503586eff94ce028cd87" kindref="member">hal::rpm</ref></type>
          <declname>p_max_speed</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classhal_1_1servo" kindref="compound">hal::servo</ref> driver using the drc driver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_drc</parametername>
</parameternamelist>
<parameterdescription>
<para>- reference to a drc driver. This object&apos;s lifetime must exceed the lifetime of the returned object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_max_speed</parametername>
</parameternamelist>
<parameterdescription>
<para>- maximum speed of the servo when moving to an angle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result&lt;drc_servo&gt; - servo implementation based on the drc driver </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/drc.hpp" line="343" column="8" declfile="libraries/include/libhal-rmd/drc.hpp" declline="343" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="drc_8hpp_1a199777a0b745571031fab0fe81e4d004" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result&lt; <ref refid="classhal_1_1rmd_1_1drc__angular__velocity__sensor" kindref="compound">drc_angular_velocity_sensor</ref> &gt;</type>
        <definition>result&lt;drc_angular_velocity_sensor&gt; hal::rmd::make_angular_velocity_sensor</definition>
        <argsstring>(drc &amp;p_drc)</argsstring>
        <name>make_angular_velocity_sensor</name>
        <param>
          <type><ref refid="classhal_1_1rmd_1_1drc" kindref="compound">drc</ref> &amp;</type>
          <declname>p_drc</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classhal_1_1angular__velocity__sensor" kindref="compound">hal::angular_velocity_sensor</ref> driver using the drc driver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_drc</parametername>
</parameternamelist>
<parameterdescription>
<para>- reference to a drc driver. This object&apos;s lifetime must exceed the lifetime of the returned object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result&lt;angular_velocity_sensor&gt; - <ref refid="classhal_1_1angular__velocity__sensor" kindref="compound">angular_velocity_sensor</ref> implementation based on the drc driver </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/drc.hpp" line="367" column="8" declfile="libraries/include/libhal-rmd/drc.hpp" declline="367" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="mc__x_8hpp_1ac5048f3daaa5744339deb12afa808878" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result&lt; <ref refid="classhal_1_1rmd_1_1mc__x__motor" kindref="compound">mc_x_motor</ref> &gt;</type>
        <definition>result&lt;mc_x_motor&gt; hal::rmd::make_motor</definition>
        <argsstring>(mc_x &amp;p_mc_x, hal::rpm p_max_speed)</argsstring>
        <name>make_motor</name>
        <param>
          <type><ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref> &amp;</type>
          <declname>p_mc_x</declname>
        </param>
        <param>
          <type><ref refid="namespacehal_1a115c0adadc69503586eff94ce028cd87" kindref="member">hal::rpm</ref></type>
          <declname>p_max_speed</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classhal_1_1motor" kindref="compound">hal::motor</ref> driver using the MC-X driver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_mc_x</parametername>
</parameternamelist>
<parameterdescription>
<para>- reference to a MC-X driver. This object&apos;s lifetime must exceed the lifetime of the returned object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_max_speed</parametername>
</parameternamelist>
<parameterdescription>
<para>- maximum speed of the motor represented by +1.0 and -1.0 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result&lt;mc_x_motor&gt; - motor implementation using the MC-X driver </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="234" column="8" declfile="libraries/include/libhal-rmd/mc_x.hpp" declline="234" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="mc__x_8hpp_1a3b42269a7068d9e37489dc023a04dbdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result&lt; <ref refid="classhal_1_1rmd_1_1mc__x__rotation" kindref="compound">mc_x_rotation</ref> &gt;</type>
        <definition>result&lt;mc_x_rotation&gt; hal::rmd::make_rotation_sensor</definition>
        <argsstring>(mc_x &amp;p_mc_x)</argsstring>
        <name>make_rotation_sensor</name>
        <param>
          <type><ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref> &amp;</type>
          <declname>p_mc_x</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classhal_1_1rotation__sensor" kindref="compound">hal::rotation_sensor</ref> driver using the MC-X driver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_mc_x</parametername>
</parameternamelist>
<parameterdescription>
<para>- reference to a MC-X driver. This object&apos;s lifetime must exceed the lifetime of the returned object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result&lt;mc_x_rotation&gt; - rotation sensor implementation based on the MC-X driver </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="257" column="8" declfile="libraries/include/libhal-rmd/mc_x.hpp" declline="257" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="mc__x_8hpp_1a4bcfcc4026744a7ee645ec44304f2827" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result&lt; <ref refid="classhal_1_1rmd_1_1mc__x__servo" kindref="compound">mc_x_servo</ref> &gt;</type>
        <definition>result&lt;mc_x_servo&gt; hal::rmd::make_servo</definition>
        <argsstring>(mc_x &amp;p_mc_x, hal::rpm p_max_speed)</argsstring>
        <name>make_servo</name>
        <param>
          <type><ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref> &amp;</type>
          <declname>p_mc_x</declname>
        </param>
        <param>
          <type><ref refid="namespacehal_1a115c0adadc69503586eff94ce028cd87" kindref="member">hal::rpm</ref></type>
          <declname>p_max_speed</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classhal_1_1rotation__sensor" kindref="compound">hal::rotation_sensor</ref> driver using the MC-X driver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_mc_x</parametername>
</parameternamelist>
<parameterdescription>
<para>- reference to a MC-X driver. This object&apos;s lifetime must exceed the lifetime of the returned object. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_max_speed</parametername>
</parameternamelist>
<parameterdescription>
<para>- maximum speed of the motor when moving to an angle </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result&lt;mc_x_rotation&gt; - rotation sensor implementation based on the MC-X driver </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="283" column="8" declfile="libraries/include/libhal-rmd/mc_x.hpp" declline="283" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="mc__x_8hpp_1afe09a3079896641f0aa9eba1fcc48a41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result&lt; <ref refid="classhal_1_1rmd_1_1mc__x__temperature" kindref="compound">mc_x_temperature</ref> &gt;</type>
        <definition>result&lt;mc_x_temperature&gt; hal::rmd::make_temperature_sensor</definition>
        <argsstring>(mc_x &amp;p_mc_x)</argsstring>
        <name>make_temperature_sensor</name>
        <param>
          <type><ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref> &amp;</type>
          <declname>p_mc_x</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classhal_1_1temperature__sensor" kindref="compound">hal::temperature_sensor</ref> driver using the MC-X driver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_mc_x</parametername>
</parameternamelist>
<parameterdescription>
<para>- reference to a MC-X driver. This object&apos;s lifetime must exceed the lifetime of the returned object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result&lt;mc_x_temperature&gt; - temperature sensor implementation based on the MC-X driver </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="306" column="8" declfile="libraries/include/libhal-rmd/mc_x.hpp" declline="306" declcolumn="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/include/libhal-rmd/drc.hpp" line="29" column="1"/>
  </compounddef>
</doxygen>
