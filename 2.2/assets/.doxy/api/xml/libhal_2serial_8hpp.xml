<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="libhal_2serial_8hpp" kind="file" language="C++">
    <compoundname>serial.hpp</compoundname>
    <includes local="no">cstddef</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">optional</includes>
    <includes local="no">span</includes>
    <includes refid="error_8hpp" local="yes">error.hpp</includes>
    <includes refid="libhal_2units_8hpp" local="yes">units.hpp</includes>
    <includedby refid="at_8hpp" local="no">libraries/include/libhal-esp8266/at.hpp</includedby>
    <includedby refid="uart_8hpp" local="no">libraries/include/libhal-lpc40/uart.hpp</includedby>
    <includedby refid="micromod_8hpp" local="no">libraries/include/libhal-micromod/micromod.hpp</includedby>
    <includedby refid="libhal-util_2serial_8hpp" local="no">libraries/include/libhal-util/serial.hpp</includedby>
    <includedby refid="serial__coroutines_8hpp" local="no">libraries/include/libhal-util/serial_coroutines.hpp</includedby>
    <incdepgraph>
      <node id="7">
        <label>system_error</label>
      </node>
      <node id="3">
        <label>cstdint</label>
      </node>
      <node id="8">
        <label>boost/leaf/detail/all.hpp</label>
      </node>
      <node id="9">
        <label>units.hpp</label>
        <link refid="libhal_2units_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>optional</label>
      </node>
      <node id="6">
        <label>error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cstddef</label>
      </node>
      <node id="10">
        <label>chrono</label>
      </node>
      <node id="1">
        <label>libraries/include/libhal/serial.hpp</label>
        <link refid="libhal_2serial_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>span</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>libraries/include/libhal-lpc40/uart.hpp</label>
        <link refid="uart_8hpp_source"/>
      </node>
      <node id="2">
        <label>libraries/include/libhal-esp8266/at.hpp</label>
        <link refid="at_8hpp_source"/>
      </node>
      <node id="5">
        <label>libraries/include/libhal-util/serial.hpp</label>
        <link refid="libhal-util_2serial_8hpp_source"/>
      </node>
      <node id="4">
        <label>libraries/include/libhal-micromod/micromod.hpp</label>
        <link refid="micromod_8hpp_source"/>
      </node>
      <node id="6">
        <label>libraries/include/libhal-util/serial_coroutines.hpp</label>
        <link refid="serial__coroutines_8hpp_source"/>
      </node>
      <node id="1">
        <label>libraries/include/libhal/serial.hpp</label>
        <link refid="libhal_2serial_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classhal_1_1serial" prot="public">hal::serial</innerclass>
    <innerclass refid="structhal_1_1serial_1_1settings" prot="public">hal::serial::settings</innerclass>
    <innerclass refid="structhal_1_1serial_1_1read__t" prot="public">hal::serial::read_t</innerclass>
    <innerclass refid="structhal_1_1serial_1_1write__t" prot="public">hal::serial::write_t</innerclass>
    <innerclass refid="structhal_1_1serial_1_1flush__t" prot="public">hal::serial::flush_t</innerclass>
    <innernamespace refid="namespacehal">hal</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2023<sp/>Google<sp/>LLC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;optional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;span&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;error.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;units.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehal" kindref="compound">hal</ref><sp/>{</highlight></codeline>
<codeline lineno="51" refid="classhal_1_1serial" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhal_1_1serial" kindref="compound">serial</ref></highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58" refid="structhal_1_1serial_1_1settings" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhal_1_1serial_1_1settings" kindref="compound">settings</ref></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="64" refid="structhal_1_1serial_1_1settings_1a27192674670505b197411273de941c03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="structhal_1_1serial_1_1settings_1a27192674670505b197411273de941c03" kindref="member">stop_bits</ref><sp/>:<sp/>uint8_t</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>one<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>two,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="structhal_1_1serial_1_1settings_1aee797087091653ae671994c28528e1b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="structhal_1_1serial_1_1settings_1aee797087091653ae671994c28528e1b1" kindref="member">parity</ref><sp/>:<sp/>uint8_t</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhal_1_1serial_1_1settings_1aee797087091653ae671994c28528e1b1a334c4a4c42fdb79d7ebc3e73b517e6f8" kindref="member">none</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhal_1_1serial_1_1settings_1aee797087091653ae671994c28528e1b1aa2b6f2a6066ed8700d83335fc50a2b8e" kindref="member">odd</ref>,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhal_1_1serial_1_1settings_1aee797087091653ae671994c28528e1b1acc935c5faf4c8f7a0468d7552a9b8138" kindref="member">even</ref>,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhal_1_1serial_1_1settings_1aee797087091653ae671994c28528e1b1ab84b8cf8e4af79a2a4bee99694be7f33" kindref="member">forced1</ref>,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhal_1_1serial_1_1settings_1aee797087091653ae671994c28528e1b1a60f2dab25d32fc2bce590dc511a72dae" kindref="member">forced0</ref>,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="structhal_1_1serial_1_1settings_1a172e43575366b280b3c613623daccab7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref><sp/><ref refid="structhal_1_1serial_1_1settings_1a172e43575366b280b3c613623daccab7" kindref="member">baud_rate</ref><sp/>=<sp/>115200.0f;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="structhal_1_1serial_1_1settings_1ab1962693d243656902829372fdaddd93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhal_1_1serial_1_1settings_1a27192674670505b197411273de941c03" kindref="member">stop_bits</ref><sp/><ref refid="structhal_1_1serial_1_1settings_1ab1962693d243656902829372fdaddd93" kindref="member">stop</ref><sp/>=<sp/>stop_bits::one;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="structhal_1_1serial_1_1settings_1a3258bc17846d6170f9f6603fe3de3006" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhal_1_1serial_1_1settings_1aee797087091653ae671994c28528e1b1" kindref="member">parity</ref><sp/><ref refid="structhal_1_1serial_1_1settings_1aee797087091653ae671994c28528e1b1" kindref="member">parity</ref><sp/>=<sp/><ref refid="structhal_1_1serial_1_1settings_1aee797087091653ae671994c28528e1b1a334c4a4c42fdb79d7ebc3e73b517e6f8" kindref="member">parity::none</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="127" refid="structhal_1_1serial_1_1read__t" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhal_1_1serial_1_1read__t" kindref="compound">read_t</ref></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="135" refid="structhal_1_1serial_1_1read__t_1a130b9bc9bc353ea5a083e6e52d6bd4dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::span&lt;hal::byte&gt;<sp/><ref refid="structhal_1_1serial_1_1read__t_1a130b9bc9bc353ea5a083e6e52d6bd4dd" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="structhal_1_1serial_1_1read__t_1a9a65d6dc025b66913775eb8ef4874eaf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structhal_1_1serial_1_1read__t_1a9a65d6dc025b66913775eb8ef4874eaf" kindref="member">available</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="structhal_1_1serial_1_1read__t_1a771e05da8e08a309dd66c983e93ded60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structhal_1_1serial_1_1read__t_1a771e05da8e08a309dd66c983e93ded60" kindref="member">capacity</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="structhal_1_1serial_1_1write__t" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhal_1_1serial_1_1write__t" kindref="compound">write_t</ref></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="165" refid="structhal_1_1serial_1_1write__t_1a41bc5b60fbbcce4d473acac9f079fbce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::span&lt;const<sp/>hal::byte&gt;<sp/><ref refid="structhal_1_1serial_1_1write__t_1a41bc5b60fbbcce4d473acac9f079fbce" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="structhal_1_1serial_1_1flush__t" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhal_1_1serial_1_1flush__t" kindref="compound">flush_t</ref></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>{};</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="classhal_1_1serial_1a3110feb98b0a00cc0d085b0ad5cf686f" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>status<sp/><ref refid="classhal_1_1serial_1a3110feb98b0a00cc0d085b0ad5cf686f" kindref="member">configure</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structhal_1_1serial_1_1settings" kindref="compound">settings</ref>&amp;<sp/>p_settings)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>driver_configure(p_settings);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="classhal_1_1serial_1a9a7a63f71b908b9c3cd061c52df55df8" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>result&lt;write_t&gt;<sp/><ref refid="classhal_1_1serial_1a9a7a63f71b908b9c3cd061c52df55df8" kindref="member">write</ref>(std::span&lt;const<sp/>hal::byte&gt;<sp/>p_data)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>driver_write(p_data);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="classhal_1_1serial_1a69eaa352ef24788b38d36648a5c3f99f" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>result&lt;read_t&gt;<sp/><ref refid="classhal_1_1serial_1a69eaa352ef24788b38d36648a5c3f99f" kindref="member">read</ref>(std::span&lt;hal::byte&gt;<sp/>p_data)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>driver_read(p_data);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="248" refid="classhal_1_1serial_1a830bae7d2f8b360f8744213a5a88b166" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>result&lt;flush_t&gt;<sp/><ref refid="classhal_1_1serial_1a830bae7d2f8b360f8744213a5a88b166" kindref="member">flush</ref>()</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>driver_flush();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classhal_1_1serial" kindref="compound">serial</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>status<sp/>driver_configure(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>settings&amp;<sp/>p_settings)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>result&lt;write_t&gt;<sp/>driver_write(std::span&lt;const<sp/>hal::byte&gt;<sp/>p_data)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>result&lt;read_t&gt;<sp/>driver_read(std::span&lt;hal::byte&gt;<sp/>p_data)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>result&lt;flush_t&gt;<sp/>driver_flush()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">};</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hal</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="libraries/include/libhal/serial.hpp"/>
  </compounddef>
</doxygen>
