<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhal_1_1inert__serial" kind="class" language="C++" prot="public">
    <compoundname>hal::inert_serial</compoundname>
    <basecompoundref refid="classhal_1_1serial" prot="public" virt="non-virtual">hal::serial</basecompoundref>
    <includes refid="inert__serial_8hpp" local="no">inert_serial.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhal_1_1inert__serial_1a87af98bf4f9057436b2fc4bcfb3c19cc" prot="private" static="no" mutable="no">
        <type><ref refid="structhal_1_1serial_1_1write__t" kindref="compound">write_t</ref></type>
        <definition>write_t hal::inert_serial::m_write_data</definition>
        <argsstring></argsstring>
        <name>m_write_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-soft/incomplete_drivers/inert_serial.hpp" line="67" column="11" bodyfile="libraries/include/libhal-soft/incomplete_drivers/inert_serial.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1inert__serial_1a83a3395aa7170fb43a7c0078bf354026" prot="private" static="no" mutable="no">
        <type><ref refid="structhal_1_1serial_1_1read__t" kindref="compound">read_t</ref></type>
        <definition>read_t hal::inert_serial::m_read_data</definition>
        <argsstring></argsstring>
        <name>m_read_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-soft/incomplete_drivers/inert_serial.hpp" line="68" column="10" bodyfile="libraries/include/libhal-soft/incomplete_drivers/inert_serial.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classhal_1_1inert__serial_1a2e144372bdb90115db3119d1caae7a4c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>result&lt; <ref refid="classhal_1_1inert__serial" kindref="compound">inert_serial</ref> &gt;</type>
        <definition>static result&lt;inert_serial&gt; hal::inert_serial::create</definition>
        <argsstring>(write_t p_write_data, read_t p_read_data)</argsstring>
        <name>create</name>
        <param>
          <type><ref refid="structhal_1_1serial_1_1write__t" kindref="compound">write_t</ref></type>
          <declname>p_write_data</declname>
        </param>
        <param>
          <type><ref refid="structhal_1_1serial_1_1read__t" kindref="compound">read_t</ref></type>
          <declname>p_read_data</declname>
        </param>
        <briefdescription>
<para>Factory function to create <ref refid="classhal_1_1inert__serial" kindref="compound">inert_serial</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_write_data</parametername>
</parameternamelist>
<parameterdescription>
<para>- write_t object to return when <ref refid="classhal_1_1serial_1a9a7a63f71b908b9c3cd061c52df55df8" kindref="member">write()</ref> is called </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_read_data</parametername>
</parameternamelist>
<parameterdescription>
<para>- read_t object to return when <ref refid="classhal_1_1serial_1a69eaa352ef24788b38d36648a5c3f99f" kindref="member">read()</ref> is called </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result&lt;inert_serial&gt; - Constructed <ref refid="classhal_1_1inert__serial" kindref="compound">inert_serial</ref> object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-soft/incomplete_drivers/inert_serial.hpp" line="34" column="17" bodyfile="libraries/include/libhal-soft/incomplete_drivers/inert_serial.hpp" bodystart="34" bodyend="37"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhal_1_1inert__serial_1afa53ee3cc4c12acd42498fe69cff08a5" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hal::inert_serial::inert_serial</definition>
        <argsstring>(write_t p_write_data, read_t p_read_data)</argsstring>
        <name>inert_serial</name>
        <param>
          <type><ref refid="structhal_1_1serial_1_1write__t" kindref="compound">write_t</ref></type>
          <declname>p_write_data</declname>
        </param>
        <param>
          <type><ref refid="structhal_1_1serial_1_1read__t" kindref="compound">read_t</ref></type>
          <declname>p_read_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-soft/incomplete_drivers/inert_serial.hpp" line="40" column="13" bodyfile="libraries/include/libhal-soft/incomplete_drivers/inert_serial.hpp" bodystart="40" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1inert__serial_1a145b8dfe4f09b853b3bfdec418a27538" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>status</type>
        <definition>status hal::inert_serial::driver_configure</definition>
        <argsstring>([[maybe_unused]] const settings &amp;p_settings)</argsstring>
        <name>driver_configure</name>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] const <ref refid="structhal_1_1serial_1_1settings" kindref="compound">settings</ref> &amp;</type>
          <declname>p_settings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-soft/incomplete_drivers/inert_serial.hpp" line="46" column="10" bodyfile="libraries/include/libhal-soft/incomplete_drivers/inert_serial.hpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1inert__serial_1ac266c5afe34495cf37b0326e9b73b4ff" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>result&lt; <ref refid="structhal_1_1serial_1_1write__t" kindref="compound">write_t</ref> &gt;</type>
        <definition>result&lt;write_t&gt; hal::inert_serial::driver_write</definition>
        <argsstring>([[maybe_unused]] std::span&lt; const hal::byte &gt; p_data)</argsstring>
        <name>driver_write</name>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] std::span&lt; const <ref refid="namespacehal_1aa21f8ca97410869aabb284a575b2021d" kindref="member">hal::byte</ref> &gt;</type>
          <declname>p_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-soft/incomplete_drivers/inert_serial.hpp" line="51" column="10" bodyfile="libraries/include/libhal-soft/incomplete_drivers/inert_serial.hpp" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1inert__serial_1af598de57cd85e2d8fafaf7c425a4c798" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>result&lt; <ref refid="structhal_1_1serial_1_1read__t" kindref="compound">read_t</ref> &gt;</type>
        <definition>result&lt;read_t&gt; hal::inert_serial::driver_read</definition>
        <argsstring>([[maybe_unused]] std::span&lt; hal::byte &gt; p_data)</argsstring>
        <name>driver_read</name>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] std::span&lt; <ref refid="namespacehal_1aa21f8ca97410869aabb284a575b2021d" kindref="member">hal::byte</ref> &gt;</type>
          <declname>p_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-soft/incomplete_drivers/inert_serial.hpp" line="57" column="10" bodyfile="libraries/include/libhal-soft/incomplete_drivers/inert_serial.hpp" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1inert__serial_1a4781347c1b5e4a2da0b64b56732fabc7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>result&lt; <ref refid="structhal_1_1serial_1_1flush__t" kindref="compound">flush_t</ref> &gt;</type>
        <definition>result&lt;flush_t&gt; hal::inert_serial::driver_flush</definition>
        <argsstring>()</argsstring>
        <name>driver_flush</name>
        <reimplements refid="classhal_1_1serial_1a7f45c777d8f42c05246ad33e9b00251a">driver_flush</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-soft/incomplete_drivers/inert_serial.hpp" line="62" column="10" bodyfile="libraries/include/libhal-soft/incomplete_drivers/inert_serial.hpp" bodystart="62" bodyend="65"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Inert implementation of serial communication protocol hardware. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>hal::inert_serial</label>
        <link refid="classhal_1_1inert__serial"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hal::serial</label>
        <link refid="classhal_1_1serial"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>hal::inert_serial</label>
        <link refid="classhal_1_1inert__serial"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hal::serial</label>
        <link refid="classhal_1_1serial"/>
      </node>
    </collaborationgraph>
    <location file="libraries/include/libhal-soft/incomplete_drivers/inert_serial.hpp" line="24" column="1" bodyfile="libraries/include/libhal-soft/incomplete_drivers/inert_serial.hpp" bodystart="25" bodyend="69"/>
    <listofallmembers>
      <member refid="classhal_1_1serial_1a3110feb98b0a00cc0d085b0ad5cf686f" prot="public" virt="non-virtual"><scope>hal::inert_serial</scope><name>configure</name></member>
      <member refid="classhal_1_1inert__serial_1a2e144372bdb90115db3119d1caae7a4c" prot="public" virt="non-virtual"><scope>hal::inert_serial</scope><name>create</name></member>
      <member refid="classhal_1_1inert__serial_1a145b8dfe4f09b853b3bfdec418a27538" prot="private" virt="non-virtual"><scope>hal::inert_serial</scope><name>driver_configure</name></member>
      <member refid="classhal_1_1inert__serial_1a4781347c1b5e4a2da0b64b56732fabc7" prot="private" virt="virtual"><scope>hal::inert_serial</scope><name>driver_flush</name></member>
      <member refid="classhal_1_1inert__serial_1af598de57cd85e2d8fafaf7c425a4c798" prot="private" virt="non-virtual"><scope>hal::inert_serial</scope><name>driver_read</name></member>
      <member refid="classhal_1_1inert__serial_1ac266c5afe34495cf37b0326e9b73b4ff" prot="private" virt="non-virtual"><scope>hal::inert_serial</scope><name>driver_write</name></member>
      <member refid="classhal_1_1serial_1a830bae7d2f8b360f8744213a5a88b166" prot="public" virt="non-virtual"><scope>hal::inert_serial</scope><name>flush</name></member>
      <member refid="classhal_1_1inert__serial_1afa53ee3cc4c12acd42498fe69cff08a5" prot="private" virt="non-virtual"><scope>hal::inert_serial</scope><name>inert_serial</name></member>
      <member refid="classhal_1_1inert__serial_1a83a3395aa7170fb43a7c0078bf354026" prot="private" virt="non-virtual"><scope>hal::inert_serial</scope><name>m_read_data</name></member>
      <member refid="classhal_1_1inert__serial_1a87af98bf4f9057436b2fc4bcfb3c19cc" prot="private" virt="non-virtual"><scope>hal::inert_serial</scope><name>m_write_data</name></member>
      <member refid="classhal_1_1serial_1a69eaa352ef24788b38d36648a5c3f99f" prot="public" virt="non-virtual"><scope>hal::inert_serial</scope><name>read</name></member>
      <member refid="classhal_1_1serial_1a9a7a63f71b908b9c3cd061c52df55df8" prot="public" virt="non-virtual"><scope>hal::inert_serial</scope><name>write</name></member>
      <member refid="classhal_1_1serial_1ada7d8f7769ca8616f01a0d314bd09a52" prot="public" virt="virtual"><scope>hal::inert_serial</scope><name>~serial</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
