<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhal_1_1stream_1_1fill" kind="class" language="C++" prot="public">
    <compoundname>hal::stream::fill</compoundname>
    <includes refid="streams_8hpp" local="no">streams.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhal_1_1stream_1_1fill_1a477bc9bab1d1a1a41c8f193506931bac" prot="private" static="no" mutable="no">
        <type>std::span&lt; <ref refid="namespacehal_1aa21f8ca97410869aabb284a575b2021d" kindref="member">hal::byte</ref> &gt;</type>
        <definition>std::span&lt;hal::byte&gt; hal::stream::fill::m_buffer</definition>
        <argsstring></argsstring>
        <name>m_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/streams.hpp" line="83" column="13" bodyfile="libraries/include/libhal-util/streams.hpp" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1stream_1_1fill_1aed27d9b35b1b4fe3b7dd43a5d0b2c1ab" prot="private" static="no" mutable="no">
        <type>const size_t *</type>
        <definition>const size_t* hal::stream::fill::m_fill_amount</definition>
        <argsstring></argsstring>
        <name>m_fill_amount</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/streams.hpp" line="84" column="16" bodyfile="libraries/include/libhal-util/streams.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhal_1_1stream_1_1fill_1a8070cad5227b3e07f43704f8b5190a6a" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>hal::stream::fill::fill</definition>
        <argsstring>(std::span&lt; hal::byte &gt; p_buffer)</argsstring>
        <name>fill</name>
        <param>
          <type>std::span&lt; <ref refid="namespacehal_1aa21f8ca97410869aabb284a575b2021d" kindref="member">hal::byte</ref> &gt;</type>
          <declname>p_buffer</declname>
        </param>
        <briefdescription>
<para>Construct a new fill object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>- buffer to read data into </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/streams.hpp" line="65" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1stream_1_1fill_1af87d50a7adac5470971dd40c80df09bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hal::stream::fill::fill</definition>
        <argsstring>(std::span&lt; hal::byte &gt; p_buffer, const size_t &amp;p_fill_amount)</argsstring>
        <name>fill</name>
        <param>
          <type>std::span&lt; <ref refid="namespacehal_1aa21f8ca97410869aabb284a575b2021d" kindref="member">hal::byte</ref> &gt;</type>
          <declname>p_buffer</declname>
        </param>
        <param>
          <type>const size_t &amp;</type>
          <declname>p_fill_amount</declname>
        </param>
        <briefdescription>
<para>Construct a new fill object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>- buffer to read data into </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_fill_amount</parametername>
</parameternamelist>
<parameterdescription>
<para>- reference to a size value to limit the fill amount by. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/streams.hpp" line="74" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1stream_1_1fill_1a2c4b7f61381f008042d1d2234cdb9c35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacehal_1aadfba20b87ce09f21cc88f7c49e1bd60" kindref="member">work_state</ref></type>
        <definition>work_state hal::stream::fill::state</definition>
        <argsstring>()</argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/streams.hpp" line="80" column="14"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classhal_1_1stream_1_1fill_1a6361d0963800d4c693b4ec07bc82673e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::span&lt; const <ref refid="namespacehal_1aa21f8ca97410869aabb284a575b2021d" kindref="member">hal::byte</ref> &gt;</type>
        <definition>std::span&lt;const hal::byte&gt; operator|</definition>
        <argsstring>(const std::span&lt; const hal::byte &gt; &amp;p_input_data, fill &amp;p_self)</argsstring>
        <name>operator|</name>
        <param>
          <type>const std::span&lt; const <ref refid="namespacehal_1aa21f8ca97410869aabb284a575b2021d" kindref="member">hal::byte</ref> &gt; &amp;</type>
          <declname>p_input_data</declname>
        </param>
        <param>
          <type><ref refid="classhal_1_1stream_1_1fill" kindref="compound">fill</ref> &amp;</type>
          <declname>p_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/streams.hpp" line="76" column="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Non-blocking callable for reading serial data into a buffer. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/include/libhal-util/streams.hpp" line="57" column="1" bodyfile="libraries/include/libhal-util/streams.hpp" bodystart="58" bodyend="85"/>
    <listofallmembers>
      <member refid="classhal_1_1stream_1_1fill_1a8070cad5227b3e07f43704f8b5190a6a" prot="public" virt="non-virtual"><scope>hal::stream::fill</scope><name>fill</name></member>
      <member refid="classhal_1_1stream_1_1fill_1af87d50a7adac5470971dd40c80df09bd" prot="public" virt="non-virtual"><scope>hal::stream::fill</scope><name>fill</name></member>
      <member refid="classhal_1_1stream_1_1fill_1a477bc9bab1d1a1a41c8f193506931bac" prot="private" virt="non-virtual"><scope>hal::stream::fill</scope><name>m_buffer</name></member>
      <member refid="classhal_1_1stream_1_1fill_1aed27d9b35b1b4fe3b7dd43a5d0b2c1ab" prot="private" virt="non-virtual"><scope>hal::stream::fill</scope><name>m_fill_amount</name></member>
      <member refid="classhal_1_1stream_1_1fill_1a6361d0963800d4c693b4ec07bc82673e" prot="public" virt="non-virtual"><scope>hal::stream::fill</scope><name>operator|</name></member>
      <member refid="classhal_1_1stream_1_1fill_1a2c4b7f61381f008042d1d2234cdb9c35" prot="public" virt="non-virtual"><scope>hal::stream::fill</scope><name>state</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
