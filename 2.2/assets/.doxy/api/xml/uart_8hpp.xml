<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="uart_8hpp" kind="file" language="C++">
    <compoundname>uart.hpp</compoundname>
    <includes refid="libhal_2serial_8hpp" local="no">libhal/serial.hpp</includes>
    <includes local="no">nonstd/ring_span.hpp</includes>
    <includes refid="libhal-lpc40_2constants_8hpp" local="yes">constants.hpp</includes>
    <includes refid="libhal-lpc40_2pin_8hpp" local="yes">pin.hpp</includes>
    <incdepgraph>
      <node id="1">
        <label>libraries/include/libhal-lpc40/uart.hpp</label>
        <link refid="uart_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>system_error</label>
      </node>
      <node id="4">
        <label>cstdint</label>
      </node>
      <node id="10">
        <label>units.hpp</label>
        <link refid="libhal_2units_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>constants.hpp</label>
        <link refid="libhal-lpc40_2constants_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>optional</label>
      </node>
      <node id="8">
        <label>boost/leaf.hpp</label>
      </node>
      <node id="7">
        <label>error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>cstddef</label>
      </node>
      <node id="14">
        <label>pin.hpp</label>
        <link refid="libhal-lpc40_2pin_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>chrono</label>
      </node>
      <node id="2">
        <label>libhal/serial.hpp</label>
        <link refid="libhal_2serial_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>span</label>
      </node>
      <node id="12">
        <label>nonstd/ring_span.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classhal_1_1lpc40_1_1uart" prot="public">hal::lpc40::uart</innerclass>
    <innerclass refid="structhal_1_1lpc40_1_1uart_1_1port" prot="public">hal::lpc40::uart::port</innerclass>
    <innernamespace refid="namespacehal">hal</innernamespace>
    <innernamespace refid="namespacehal_1_1lpc40">hal::lpc40</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2023<sp/>Google<sp/>LLC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libhal/serial.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;nonstd/ring_span.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;constants.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pin.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehal_1_1lpc40" kindref="compound">hal::lpc40</ref><sp/>{</highlight></codeline>
<codeline lineno="32" refid="classhal_1_1lpc40_1_1uart" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhal_1_1lpc40_1_1uart" kindref="compound">uart</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1serial" kindref="compound">hal::serial</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37" refid="structhal_1_1lpc40_1_1uart_1_1port" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhal_1_1lpc40_1_1uart_1_1port" kindref="compound">port</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="40" refid="structhal_1_1lpc40_1_1uart_1_1port_1ac5b0b05a89dbb47a955fa081947b364e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehal_1_1lpc40_1aeb4111a0b3eb28bf70f583582a7a0b13" kindref="member">peripheral</ref><sp/><ref refid="structhal_1_1lpc40_1_1uart_1_1port_1ac5b0b05a89dbb47a955fa081947b364e" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="42" refid="structhal_1_1lpc40_1_1uart_1_1port_1ab561861ee4d7de348c4b212b2a50b933" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehal_1_1lpc40_1a2dc86549d22c8b4b4d9c55e81d261768" kindref="member">irq</ref><sp/><ref refid="structhal_1_1lpc40_1_1uart_1_1port_1ab561861ee4d7de348c4b212b2a50b933" kindref="member">irq_number</ref>;</highlight></codeline>
<codeline lineno="44" refid="structhal_1_1lpc40_1_1uart_1_1port_1a15cc3f0eb80136d4967f2a792527e9b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhal_1_1lpc40_1_1pin" kindref="compound">pin</ref><sp/><ref refid="structhal_1_1lpc40_1_1uart_1_1port_1a15cc3f0eb80136d4967f2a792527e9b1" kindref="member">tx</ref>;</highlight></codeline>
<codeline lineno="46" refid="structhal_1_1lpc40_1_1uart_1_1port_1a83adde358c571243ad46b46adfb82a76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhal_1_1lpc40_1_1pin" kindref="compound">pin</ref><sp/><ref refid="structhal_1_1lpc40_1_1uart_1_1port_1a83adde358c571243ad46b46adfb82a76" kindref="member">rx</ref>;</highlight></codeline>
<codeline lineno="48" refid="structhal_1_1lpc40_1_1uart_1_1port_1a047258e37548191e295cae2553c719a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::uint8_t<sp/><ref refid="structhal_1_1lpc40_1_1uart_1_1port_1a047258e37548191e295cae2553c719a5" kindref="member">tx_function</ref>;</highlight></codeline>
<codeline lineno="50" refid="structhal_1_1lpc40_1_1uart_1_1port_1ab3a565c061f68c5f0e03696d547f19ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::uint8_t<sp/><ref refid="structhal_1_1lpc40_1_1uart_1_1port_1ab3a565c061f68c5f0e03696d547f19ff" kindref="member">rx_function</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classhal_1_1lpc40_1_1uart_1a66b027b8c615f2239e0c67c173e4c744" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>result&lt;uart&gt;<sp/><ref refid="classhal_1_1lpc40_1_1uart_1a66b027b8c615f2239e0c67c173e4c744" kindref="member">get</ref>(std::uint8_t<sp/>p_port_number,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::span&lt;hal::byte&gt;<sp/>p_receive_buffer,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structhal_1_1serial_1_1settings" kindref="compound">serial::settings</ref><sp/>p_settings<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>result&lt;uart&gt;<sp/>construct_custom(</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhal_1_1lpc40_1_1uart_1_1port" kindref="compound">uart::port</ref><sp/>p_port,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>std::span&lt;hal::byte&gt;<sp/>p_receive_working_buffer,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structhal_1_1serial_1_1settings" kindref="compound">serial::settings</ref><sp/>p_settings<sp/>=<sp/>{});</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>uart(uart&amp;<sp/>p_other)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>uart&amp;<sp/>operator=(uart&amp;<sp/>p_other)<sp/>=<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>uart(uart&amp;&amp;<sp/>p_other)<sp/>noexcept;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>uart&amp;<sp/>operator=(uart&amp;&amp;<sp/>p_other)<sp/>noexcept;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/>uart(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>port&amp;<sp/>p_port,<sp/>std::span&lt;hal::byte&gt;<sp/>p_receive_buffer);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>status<sp/>driver_configure(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>settings&amp;<sp/>p_settings)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>result&lt;write_t&gt;<sp/>driver_write(std::span&lt;const<sp/>hal::byte&gt;<sp/>p_data)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>result&lt;read_t&gt;<sp/>driver_read(std::span&lt;hal::byte&gt;<sp/>p_data)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>result&lt;flush_t&gt;<sp/>driver_flush()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setup_receive_interrupt();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>interrupt_handler();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>port<sp/>m_port;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>nonstd::ring_span&lt;hal::byte&gt;<sp/>m_receive_buffer;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hal::lpc40</highlight></codeline>
    </programlisting>
    <location file="libraries/include/libhal-lpc40/uart.hpp"/>
  </compounddef>
</doxygen>
