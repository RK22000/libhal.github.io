<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespacehal_1_1literals" kind="namespace" language="C++">
    <compoundname>hal::literals</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacehal_1_1literals_1aceca4270cae1809a6b23ce76a624ade3" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref></type>
        <definition>consteval hertz hal::literals::operator&quot;&quot;_Hz</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_Hz</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="95" column="18" bodyfile="libraries/include/libhal/units.hpp" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1aed3144626ef6bc9e19db3ad2d0534397" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref></type>
        <definition>consteval hertz hal::literals::operator&quot;&quot;_kHz</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_kHz</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="100" column="18" bodyfile="libraries/include/libhal/units.hpp" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1a7178cd75f02ab7eb03af65817c504536" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref></type>
        <definition>consteval hertz hal::literals::operator&quot;&quot;_MHz</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_MHz</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="105" column="18" bodyfile="libraries/include/libhal/units.hpp" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1a7550f371c95afa4aae24c2cda9142eea" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref></type>
        <definition>consteval hertz hal::literals::operator&quot;&quot;_GHz</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_GHz</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="110" column="18" bodyfile="libraries/include/libhal/units.hpp" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1a06582cce5597d61768bd68bcd355fe05" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1abc3d1451352ebbab2ab26f3dcbc51ed9" kindref="member">g_force</ref></type>
        <definition>consteval g_force hal::literals::operator&quot;&quot;_g</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_g</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="119" column="20" bodyfile="libraries/include/libhal/units.hpp" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1a0430e58f673c8f7c13f2ab3aa6dce648" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1aa830f99bf69a06fcc452d82f0deb3fa3" kindref="member">ampere</ref></type>
        <definition>consteval ampere hal::literals::operator&quot;&quot;_kA</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_kA</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="128" column="19" bodyfile="libraries/include/libhal/units.hpp" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1a58e4fbe44f8fb3f551dbc90f37706cb3" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1aa830f99bf69a06fcc452d82f0deb3fa3" kindref="member">ampere</ref></type>
        <definition>consteval ampere hal::literals::operator&quot;&quot;_A</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_A</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="133" column="19" bodyfile="libraries/include/libhal/units.hpp" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1a47ec6698c788f5d7f70e1ea344ba264b" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1aa830f99bf69a06fcc452d82f0deb3fa3" kindref="member">ampere</ref></type>
        <definition>consteval ampere hal::literals::operator&quot;&quot;_mA</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_mA</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="138" column="19" bodyfile="libraries/include/libhal/units.hpp" bodystart="138" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1a958a273d00fb91031ecdb09759f4e665" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1aa830f99bf69a06fcc452d82f0deb3fa3" kindref="member">ampere</ref></type>
        <definition>consteval ampere hal::literals::operator&quot;&quot;_uA</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_uA</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="143" column="19" bodyfile="libraries/include/libhal/units.hpp" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1aaf79831586d38b1eedcd4f60cc249570" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1a3c19435046e74281a514965c8ff93b0d" kindref="member">volts</ref></type>
        <definition>consteval volts hal::literals::operator&quot;&quot;_kV</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_kV</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="152" column="18" bodyfile="libraries/include/libhal/units.hpp" bodystart="152" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1ab36845eff5eced80d4fd26e22791d7ea" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1a3c19435046e74281a514965c8ff93b0d" kindref="member">volts</ref></type>
        <definition>consteval volts hal::literals::operator&quot;&quot;_V</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_V</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="157" column="18" bodyfile="libraries/include/libhal/units.hpp" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1a7ab49f7398b7d57987d8fdd81a2bc92d" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1a3c19435046e74281a514965c8ff93b0d" kindref="member">volts</ref></type>
        <definition>consteval volts hal::literals::operator&quot;&quot;_mV</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_mV</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="162" column="18" bodyfile="libraries/include/libhal/units.hpp" bodystart="162" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1a6313369bd794e4c05f2601e6b36df62d" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1a3c19435046e74281a514965c8ff93b0d" kindref="member">volts</ref></type>
        <definition>consteval volts hal::literals::operator&quot;&quot;_uV</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_uV</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="167" column="18" bodyfile="libraries/include/libhal/units.hpp" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1ae98cca34a4330b56ac7d30c09eed893e" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1a8ee6f825b6e7475277274772d858c816" kindref="member">celsius</ref></type>
        <definition>consteval celsius hal::literals::operator&quot;&quot;_C</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_C</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="176" column="20" bodyfile="libraries/include/libhal/units.hpp" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1a51ec7f46e569c9d6ca53d62ded61ecd3" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1a8ee6f825b6e7475277274772d858c816" kindref="member">celsius</ref></type>
        <definition>consteval celsius hal::literals::operator&quot;&quot;_F</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_F</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="181" column="20" bodyfile="libraries/include/libhal/units.hpp" bodystart="181" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1a0213b76377b290a1b93591a21a4e2e4a" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1a8ee6f825b6e7475277274772d858c816" kindref="member">celsius</ref></type>
        <definition>consteval celsius hal::literals::operator&quot;&quot;_K</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_K</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="187" column="20" bodyfile="libraries/include/libhal/units.hpp" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1a3be48c2da6052e07405b814cb9f6d8a0" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1a115c0adadc69503586eff94ce028cd87" kindref="member">rpm</ref></type>
        <definition>consteval rpm hal::literals::operator&quot;&quot;_rpm</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_rpm</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="196" column="16" bodyfile="libraries/include/libhal/units.hpp" bodystart="196" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1a5ed64af53a3d77fbf137dfaf7ad0cf3f" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1a115c0adadc69503586eff94ce028cd87" kindref="member">rpm</ref></type>
        <definition>consteval rpm hal::literals::operator&quot;&quot;_deg_per_sec</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_deg_per_sec</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="201" column="16" bodyfile="libraries/include/libhal/units.hpp" bodystart="201" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1ad423bea12012377c77cad54cba459fda" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1a69b7f93f81eb80e25fbaefa924af5748" kindref="member">degrees</ref></type>
        <definition>consteval degrees hal::literals::operator&quot;&quot;_deg</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_deg</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="210" column="20" bodyfile="libraries/include/libhal/units.hpp" bodystart="210" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1a8d72dadbb6af38bd4cb7cc9382861e3e" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1a309a799c0b8da9cd99fb5fad7c29208c" kindref="member">meters</ref></type>
        <definition>consteval meters hal::literals::operator&quot;&quot;_um</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_um</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="219" column="19" bodyfile="libraries/include/libhal/units.hpp" bodystart="219" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1a29556271b537c8ee3844a6074c413a4d" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1a309a799c0b8da9cd99fb5fad7c29208c" kindref="member">meters</ref></type>
        <definition>consteval meters hal::literals::operator&quot;&quot;_mm</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_mm</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="224" column="19" bodyfile="libraries/include/libhal/units.hpp" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1a28becec677bad0d0e5e3cde0422cf771" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1a309a799c0b8da9cd99fb5fad7c29208c" kindref="member">meters</ref></type>
        <definition>consteval meters hal::literals::operator&quot;&quot;_m</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_m</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="229" column="19" bodyfile="libraries/include/libhal/units.hpp" bodystart="229" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1a1729c0a40a6fe869de29b67dbec3e2b8" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1a309a799c0b8da9cd99fb5fad7c29208c" kindref="member">meters</ref></type>
        <definition>consteval meters hal::literals::operator&quot;&quot;_km</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_km</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="234" column="19" bodyfile="libraries/include/libhal/units.hpp" bodystart="234" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1a85bf87f277b8a5d01238958503e23d34" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1a309a799c0b8da9cd99fb5fad7c29208c" kindref="member">meters</ref></type>
        <definition>consteval meters hal::literals::operator&quot;&quot;_inch</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_inch</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="239" column="19" bodyfile="libraries/include/libhal/units.hpp" bodystart="239" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1a84d69db4cceae5a5e57a9abb8b627f4d" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1a309a799c0b8da9cd99fb5fad7c29208c" kindref="member">meters</ref></type>
        <definition>consteval meters hal::literals::operator&quot;&quot;_yards</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_yards</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="245" column="19" bodyfile="libraries/include/libhal/units.hpp" bodystart="245" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="namespacehal_1_1literals_1a2bf02d8cedc87ef4273e1f8edaf58169" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type>consteval <ref refid="namespacehal_1a309a799c0b8da9cd99fb5fad7c29208c" kindref="member">meters</ref></type>
        <definition>consteval meters hal::literals::operator&quot;&quot;_miles</definition>
        <argsstring>(long double p_value) noexcept</argsstring>
        <name>operator&quot;&quot;_miles</name>
        <param>
          <type>long double</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/units.hpp" line="251" column="19" bodyfile="libraries/include/libhal/units.hpp" bodystart="251" bodyend="255"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Namespace containing user defined literals for the hal standard units. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/include/libhal/units.hpp" line="89" column="1"/>
  </compounddef>
</doxygen>
