<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhal_1_1bit__value" kind="class" language="C++" prot="public">
    <compoundname>hal::bit_value</compoundname>
    <derivedcompoundref refid="classhal_1_1bit__modify" prot="public" virt="non-virtual">hal::bit_modify&lt; T &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>std::unsigned_integral</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classhal_1_1bit__value_1ab85b83950d63168488a12552dd4c36e9" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::uint32_t</type>
        <definition>constexpr std::uint32_t hal::bit_value&lt; T &gt;::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <initializer>= sizeof(T) * 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="254" column="34" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="254" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classhal_1_1bit__value_1aef476850364ce3d098f9bbafdac4be18" prot="protected" static="no" mutable="no">
        <type>T</type>
        <definition>T hal::bit_value&lt; T &gt;::m_value</definition>
        <argsstring></argsstring>
        <name>m_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="371" column="5" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="371" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhal_1_1bit__value_1a14342a1749a74ad1507636dcb288e0bd" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hal::bit_value&lt; T &gt;::bit_value</definition>
        <argsstring>(T p_initial_value=0)</argsstring>
        <name>bit_value</name>
        <param>
          <type>T</type>
          <declname>p_initial_value</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="256" column="13" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="256" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1bit__value_1a231caca78511ddd73e8da327d0632a91" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="structhal_1_1bit__mask" kindref="compound">bit_mask</ref></type>
            <declname>field</declname>
            <defname>field</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto &amp;</type>
        <definition>constexpr auto&amp; hal::bit_value&lt; T &gt;::set</definition>
        <argsstring>()</argsstring>
        <name>set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="262" column="18" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="262" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1bit__value_1a8185fd7199c3f0a1d877fa7a9f368255" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto &amp;</type>
        <definition>constexpr auto&amp; hal::bit_value&lt; T &gt;::set</definition>
        <argsstring>(bit_mask p_field)</argsstring>
        <name>set</name>
        <param>
          <type><ref refid="structhal_1_1bit__mask" kindref="compound">bit_mask</ref></type>
          <declname>p_field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="273" column="18" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="273" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1bit__value_1a86b8c86bd2ffe71782fb5e79e578b3bd" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="structhal_1_1bit__mask" kindref="compound">bit_mask</ref></type>
            <declname>field</declname>
            <defname>field</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto &amp;</type>
        <definition>constexpr auto&amp; hal::bit_value&lt; T &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="283" column="18" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="283" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1bit__value_1ace77815499d689db034c7dc4a13465e8" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto &amp;</type>
        <definition>constexpr auto&amp; hal::bit_value&lt; T &gt;::clear</definition>
        <argsstring>(bit_mask p_field)</argsstring>
        <name>clear</name>
        <param>
          <type><ref refid="structhal_1_1bit__mask" kindref="compound">bit_mask</ref></type>
          <declname>p_field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="295" column="18" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="295" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1bit__value_1abe01aa3b5a194d349973243fda726bf1" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="structhal_1_1bit__mask" kindref="compound">bit_mask</ref></type>
            <declname>field</declname>
            <defname>field</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto &amp;</type>
        <definition>constexpr auto&amp; hal::bit_value&lt; T &gt;::toggle</definition>
        <argsstring>()</argsstring>
        <name>toggle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="306" column="18" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="306" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1bit__value_1ae5ccad47abe2938e9f9d29644b477c9b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto &amp;</type>
        <definition>constexpr auto&amp; hal::bit_value&lt; T &gt;::toggle</definition>
        <argsstring>(bit_mask p_field)</argsstring>
        <name>toggle</name>
        <param>
          <type><ref refid="structhal_1_1bit__mask" kindref="compound">bit_mask</ref></type>
          <declname>p_field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="318" column="18" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="318" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1bit__value_1a8e5d328805d0258f89079adb251a69b1" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="structhal_1_1bit__mask" kindref="compound">bit_mask</ref></type>
            <declname>field</declname>
            <defname>field</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto &amp;</type>
        <definition>constexpr auto&amp; hal::bit_value&lt; T &gt;::insert</definition>
        <argsstring>(std::unsigned_integral auto p_value)</argsstring>
        <name>insert</name>
        <param>
          <type>std::unsigned_integral auto</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="328" column="18" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="328" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1bit__value_1a5e074863a0970b9234821f04f79915fa" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto &amp;</type>
        <definition>constexpr auto&amp; hal::bit_value&lt; T &gt;::insert</definition>
        <argsstring>(bit_mask p_field, std::unsigned_integral auto p_value)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="structhal_1_1bit__mask" kindref="compound">bit_mask</ref></type>
          <declname>p_field</declname>
        </param>
        <param>
          <type>std::unsigned_integral auto</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="344" column="18" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="344" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1bit__value_1a73ba70cd7a0784084f0329c07cdb55e2" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::integral</type>
            <declname>U</declname>
            <defname>U</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto hal::bit_value&lt; T &gt;::to</definition>
        <argsstring>()</argsstring>
        <name>to</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="360" column="19" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="360" bodyend="363"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1bit__value_1a14945e15a6e7fdaf07e01ebfbfd3a9c1" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr T</type>
        <definition>constexpr T hal::bit_value&lt; T &gt;::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="365" column="16" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="365" bodyend="368"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>hal::bit_value&lt; T &gt;</label>
        <link refid="classhal_1_1bit__value"/>
      </node>
      <node id="2">
        <label>hal::bit_modify&lt; T &gt;</label>
        <link refid="classhal_1_1bit__modify"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>T</label>
      </node>
      <node id="1">
        <label>hal::bit_value&lt; T &gt;</label>
        <link refid="classhal_1_1bit__value"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_value</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/include/libhal-util/bit.hpp" line="251" column="1" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="252" bodyend="372"/>
    <listofallmembers>
      <member refid="classhal_1_1bit__value_1a14342a1749a74ad1507636dcb288e0bd" prot="public" virt="non-virtual"><scope>hal::bit_value</scope><name>bit_value</name></member>
      <member refid="classhal_1_1bit__value_1a86b8c86bd2ffe71782fb5e79e578b3bd" prot="public" virt="non-virtual"><scope>hal::bit_value</scope><name>clear</name></member>
      <member refid="classhal_1_1bit__value_1ace77815499d689db034c7dc4a13465e8" prot="public" virt="non-virtual"><scope>hal::bit_value</scope><name>clear</name></member>
      <member refid="classhal_1_1bit__value_1a14945e15a6e7fdaf07e01ebfbfd3a9c1" prot="public" virt="non-virtual"><scope>hal::bit_value</scope><name>get</name></member>
      <member refid="classhal_1_1bit__value_1a8e5d328805d0258f89079adb251a69b1" prot="public" virt="non-virtual"><scope>hal::bit_value</scope><name>insert</name></member>
      <member refid="classhal_1_1bit__value_1a5e074863a0970b9234821f04f79915fa" prot="public" virt="non-virtual"><scope>hal::bit_value</scope><name>insert</name></member>
      <member refid="classhal_1_1bit__value_1aef476850364ce3d098f9bbafdac4be18" prot="protected" virt="non-virtual"><scope>hal::bit_value</scope><name>m_value</name></member>
      <member refid="classhal_1_1bit__value_1a231caca78511ddd73e8da327d0632a91" prot="public" virt="non-virtual"><scope>hal::bit_value</scope><name>set</name></member>
      <member refid="classhal_1_1bit__value_1a8185fd7199c3f0a1d877fa7a9f368255" prot="public" virt="non-virtual"><scope>hal::bit_value</scope><name>set</name></member>
      <member refid="classhal_1_1bit__value_1a73ba70cd7a0784084f0329c07cdb55e2" prot="public" virt="non-virtual"><scope>hal::bit_value</scope><name>to</name></member>
      <member refid="classhal_1_1bit__value_1abe01aa3b5a194d349973243fda726bf1" prot="public" virt="non-virtual"><scope>hal::bit_value</scope><name>toggle</name></member>
      <member refid="classhal_1_1bit__value_1ae5ccad47abe2938e9f9d29644b477c9b" prot="public" virt="non-virtual"><scope>hal::bit_value</scope><name>toggle</name></member>
      <member refid="classhal_1_1bit__value_1ab85b83950d63168488a12552dd4c36e9" prot="public" virt="non-virtual"><scope>hal::bit_value</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
