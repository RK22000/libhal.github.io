<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhal_1_1inert__accelerometer" kind="class" language="C++" prot="public">
    <compoundname>hal::inert_accelerometer</compoundname>
    <basecompoundref refid="classhal_1_1accelerometer" prot="public" virt="non-virtual">hal::accelerometer</basecompoundref>
    <includes refid="inert__accelerometer_8hpp" local="no">inert_accelerometer.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhal_1_1inert__accelerometer_1ac154616b0d802e20b4b0d667a5c80ede" prot="private" static="no" mutable="no">
        <type><ref refid="structhal_1_1accelerometer_1_1read__t" kindref="compound">read_t</ref></type>
        <definition>read_t hal::inert_accelerometer::m_values</definition>
        <argsstring></argsstring>
        <name>m_values</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-soft/inert_drivers/inert_accelerometer.hpp" line="51" column="10" bodyfile="libraries/include/libhal-soft/inert_drivers/inert_accelerometer.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classhal_1_1inert__accelerometer_1affb49ae5ec1bde7d3862dd7c2591f065" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>result&lt; <ref refid="classhal_1_1inert__accelerometer" kindref="compound">inert_accelerometer</ref> &gt;</type>
        <definition>static result&lt;inert_accelerometer&gt; hal::inert_accelerometer::create</definition>
        <argsstring>(read_t p_values)</argsstring>
        <name>create</name>
        <param>
          <type><ref refid="structhal_1_1accelerometer_1_1read__t" kindref="compound">read_t</ref></type>
          <declname>p_values</declname>
        </param>
        <briefdescription>
<para>Factory function to create <ref refid="classhal_1_1inert__accelerometer" kindref="compound">inert_accelerometer</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_values</parametername>
</parameternamelist>
<parameterdescription>
<para>- Read values to return when reading the <ref refid="classhal_1_1inert__accelerometer" kindref="compound">inert_accelerometer</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result&lt;inert_accelerometer&gt; - Constructed <ref refid="classhal_1_1inert__accelerometer" kindref="compound">inert_accelerometer</ref> object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-soft/inert_drivers/inert_accelerometer.hpp" line="35" column="17" bodyfile="libraries/include/libhal-soft/inert_drivers/inert_accelerometer.hpp" bodystart="35" bodyend="38"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhal_1_1inert__accelerometer_1abc521fea6aeb9702749ee36a50577667" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hal::inert_accelerometer::inert_accelerometer</definition>
        <argsstring>(read_t p_values)</argsstring>
        <name>inert_accelerometer</name>
        <param>
          <type><ref refid="structhal_1_1accelerometer_1_1read__t" kindref="compound">read_t</ref></type>
          <declname>p_values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-soft/inert_drivers/inert_accelerometer.hpp" line="41" column="13" bodyfile="libraries/include/libhal-soft/inert_drivers/inert_accelerometer.hpp" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1inert__accelerometer_1a1aea5b6140267f837e08b9ed12477dd8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>result&lt; <ref refid="structhal_1_1accelerometer_1_1read__t" kindref="compound">read_t</ref> &gt;</type>
        <definition>result&lt;read_t&gt; hal::inert_accelerometer::driver_read</definition>
        <argsstring>()</argsstring>
        <name>driver_read</name>
        <reimplements refid="classhal_1_1accelerometer_1a72e4a6cbd423776d5d272b4aa7928783">driver_read</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-soft/inert_drivers/inert_accelerometer.hpp" line="46" column="10" bodyfile="libraries/include/libhal-soft/inert_drivers/inert_accelerometer.hpp" bodystart="46" bodyend="49"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Inert implementation of acceleration sensing hardware. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>hal::inert_accelerometer</label>
        <link refid="classhal_1_1inert__accelerometer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hal::accelerometer</label>
        <link refid="classhal_1_1accelerometer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>hal::inert_accelerometer</label>
        <link refid="classhal_1_1inert__accelerometer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hal::accelerometer</label>
        <link refid="classhal_1_1accelerometer"/>
      </node>
    </collaborationgraph>
    <location file="libraries/include/libhal-soft/inert_drivers/inert_accelerometer.hpp" line="24" column="1" bodyfile="libraries/include/libhal-soft/inert_drivers/inert_accelerometer.hpp" bodystart="25" bodyend="52"/>
    <listofallmembers>
      <member refid="classhal_1_1inert__accelerometer_1affb49ae5ec1bde7d3862dd7c2591f065" prot="public" virt="non-virtual"><scope>hal::inert_accelerometer</scope><name>create</name></member>
      <member refid="classhal_1_1inert__accelerometer_1a1aea5b6140267f837e08b9ed12477dd8" prot="private" virt="virtual"><scope>hal::inert_accelerometer</scope><name>driver_read</name></member>
      <member refid="classhal_1_1inert__accelerometer_1abc521fea6aeb9702749ee36a50577667" prot="private" virt="non-virtual"><scope>hal::inert_accelerometer</scope><name>inert_accelerometer</name></member>
      <member refid="classhal_1_1inert__accelerometer_1ac154616b0d802e20b4b0d667a5c80ede" prot="private" virt="non-virtual"><scope>hal::inert_accelerometer</scope><name>m_values</name></member>
      <member refid="classhal_1_1accelerometer_1a60cb3a3d3bd3aef768a34e28b4be47b9" prot="public" virt="non-virtual"><scope>hal::inert_accelerometer</scope><name>read</name></member>
      <member refid="classhal_1_1accelerometer_1af36f1b4c1e2e37968af74f6589af61f5" prot="public" virt="virtual"><scope>hal::inert_accelerometer</scope><name>~accelerometer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
