<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="mc__x_8hpp" kind="file" language="C++">
    <compoundname>mc_x.hpp</compoundname>
    <includes local="no">cstdint</includes>
    <includes refid="libhal-util_2can_8hpp" local="no">libhal-util/can.hpp</includes>
    <includes refid="libhal_2can_8hpp" local="no">libhal/can.hpp</includes>
    <includes refid="libhal_2motor_8hpp" local="no">libhal/motor.hpp</includes>
    <includes refid="rotation__sensor_8hpp" local="no">libhal/rotation_sensor.hpp</includes>
    <includes refid="servo_8hpp" local="no">libhal/servo.hpp</includes>
    <includes refid="libhal_2steady__clock_8hpp" local="no">libhal/steady_clock.hpp</includes>
    <includes refid="temperature__sensor_8hpp" local="no">libhal/temperature_sensor.hpp</includes>
    <includes refid="libhal_2units_8hpp" local="no">libhal/units.hpp</includes>
    <incdepgraph>
      <node id="11">
        <label>system_error</label>
      </node>
      <node id="5">
        <label>functional</label>
      </node>
      <node id="22">
        <label>limits</label>
      </node>
      <node id="17">
        <label>comparison.hpp</label>
        <link refid="comparison_8hpp_source"/>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>iterator</label>
      </node>
      <node id="24">
        <label>static_list.hpp</label>
        <link refid="static__list_8hpp_source"/>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>cstdint</label>
      </node>
      <node id="14">
        <label>tl/function_ref.hpp</label>
      </node>
      <node id="32">
        <label>libhal/temperature_sensor.hpp</label>
        <link refid="temperature__sensor_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>cmath</label>
      </node>
      <node id="20">
        <label>math.hpp</label>
        <link refid="math_8hpp"/>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>libhal/rotation_sensor.hpp</label>
        <link refid="rotation__sensor_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>libhal-util/can.hpp</label>
        <link refid="libhal-util_2can_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>libhal/steady_clock.hpp</label>
        <link refid="libhal_2steady__clock_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>third_party/inplace_function.hpp</label>
      </node>
      <node id="12">
        <label>functional.hpp</label>
        <link refid="functional_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>units.hpp</label>
        <link refid="libhal_2units_8hpp_source"/>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>optional</label>
      </node>
      <node id="10">
        <label>boost/leaf.hpp</label>
      </node>
      <node id="27">
        <label>utility</label>
      </node>
      <node id="8">
        <label>array</label>
      </node>
      <node id="9">
        <label>error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>cstddef</label>
      </node>
      <node id="28">
        <label>libhal/motor.hpp</label>
        <link refid="libhal_2motor_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>chrono</label>
      </node>
      <node id="1">
        <label>libraries/include/libhal-rmd/mc_x.hpp</label>
        <link refid="mc__x_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>static_callable.hpp</label>
        <link refid="static__callable_8hpp_source"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>concepts</label>
      </node>
      <node id="19">
        <label>span</label>
      </node>
      <node id="18">
        <label>algorithm</label>
      </node>
      <node id="7">
        <label>libhal/can.hpp</label>
        <link refid="libhal_2can_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>libhal/servo.hpp</label>
        <link refid="servo_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="classhal_1_1rmd_1_1mc__x" prot="public">hal::rmd::mc_x</innerclass>
    <innerclass refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t" prot="public">hal::rmd::mc_x::feedback_t</innerclass>
    <innerclass refid="classhal_1_1rmd_1_1mc__x__motor" prot="public">hal::rmd::mc_x_motor</innerclass>
    <innerclass refid="classhal_1_1rmd_1_1mc__x__rotation" prot="public">hal::rmd::mc_x_rotation</innerclass>
    <innerclass refid="classhal_1_1rmd_1_1mc__x__servo" prot="public">hal::rmd::mc_x_servo</innerclass>
    <innerclass refid="classhal_1_1rmd_1_1mc__x__temperature" prot="public">hal::rmd::mc_x_temperature</innerclass>
    <innernamespace refid="namespacehal">hal</innernamespace>
    <innernamespace refid="namespacehal_1_1rmd">hal::rmd</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2023<sp/>Google<sp/>LLC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libhal-util/can.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libhal/can.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libhal/motor.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libhal/rotation_sensor.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libhal/servo.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libhal/steady_clock.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libhal/temperature_sensor.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libhal/units.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">hal::rmd<sp/>{</highlight></codeline>
<codeline lineno="33" refid="classhal_1_1rmd_1_1mc__x" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37" refid="classhal_1_1rmd_1_1mc__x_1a034cd99ca06a227704fc40009d72882f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1rmd_1_1mc__x_1a034cd99ca06a227704fc40009d72882f" kindref="member">read</ref><sp/>:<sp/><ref refid="namespacehal_1aa21f8ca97410869aabb284a575b2021d" kindref="member">hal::byte</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>multi_turns_angle<sp/>=<sp/>0x92,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>status_1_and_error_flags<sp/>=<sp/>0x9A,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>status_2<sp/>=<sp/>0x9C,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="classhal_1_1rmd_1_1mc__x_1ac33b00e888f281950188389e878660bb" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1rmd_1_1mc__x_1ac33b00e888f281950188389e878660bb" kindref="member">actuate</ref><sp/>:<sp/><ref refid="namespacehal_1aa21f8ca97410869aabb284a575b2021d" kindref="member">hal::byte</ref></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>torque<sp/>=<sp/>0xA1,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>speed<sp/>=<sp/>0xA2,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>position<sp/>=<sp/>0xA5,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classhal_1_1rmd_1_1mc__x_1a91cf7f5ed54f8a97f9decf8931e61c0d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1rmd_1_1mc__x_1a91cf7f5ed54f8a97f9decf8931e61c0d" kindref="member">write</ref><sp/>:<sp/><ref refid="namespacehal_1aa21f8ca97410869aabb284a575b2021d" kindref="member">hal::byte</ref></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>None<sp/>supported<sp/>currently</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classhal_1_1rmd_1_1mc__x_1a8261bc62791c5bfbb098e83bc0824f9a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1rmd_1_1mc__x_1a8261bc62791c5bfbb098e83bc0824f9a" kindref="member">system</ref><sp/>:<sp/><ref refid="namespacehal_1aa21f8ca97410869aabb284a575b2021d" kindref="member">hal::byte</ref></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>off<sp/>=<sp/>0x80,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>stop<sp/>=<sp/>0x81,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t" kindref="compound">feedback_t</ref></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="72" refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t_1ac8de81d46c2b2a9a3caf9415a69f171b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::uint32_t<sp/><ref refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t_1ac8de81d46c2b2a9a3caf9415a69f171b" kindref="member">message_number</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="75" refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t_1ac65fb21204e5353ea44ccbee2a035c62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::int64_t<sp/><ref refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t_1ac65fb21204e5353ea44ccbee2a035c62" kindref="member">raw_multi_turn_angle</ref>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="77" refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t_1a93e5fa7116a0e41a9022922db26bf006" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::int16_t<sp/><ref refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t_1a93e5fa7116a0e41a9022922db26bf006" kindref="member">raw_error_state</ref>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="80" refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t_1a75d26785d84ba1080314c889e8573fc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::int16_t<sp/><ref refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t_1a75d26785d84ba1080314c889e8573fc2" kindref="member">raw_current</ref>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="82" refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t_1a359859f143a600a93d2a6ddcc9e654a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::int16_t<sp/><ref refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t_1a359859f143a600a93d2a6ddcc9e654a3" kindref="member">raw_speed</ref>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="84" refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t_1a143bf21fb6dfa99228521124868d77f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::int16_t<sp/><ref refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t_1a143bf21fb6dfa99228521124868d77f9" kindref="member">raw_volts</ref>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="86" refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t_1a1ce0a4df70258a0a99f6f3fa42eea081" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::int16_t<sp/><ref refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t_1a1ce0a4df70258a0a99f6f3fa42eea081" kindref="member">encoder</ref>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="88" refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t_1a527be6b99bf70ea925f5c97840df37f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::int8_t<sp/><ref refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t_1a527be6b99bf70ea925f5c97840df37f1" kindref="member">raw_motor_temperature</ref>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehal_1aa830f99bf69a06fcc452d82f0deb3fa3" kindref="member">hal::ampere</ref><sp/>current()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehal" kindref="compound">hal</ref>::<ref refid="namespacehal_1a115c0adadc69503586eff94ce028cd87" kindref="member">rpm</ref><sp/>speed()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehal" kindref="compound">hal</ref>::<ref refid="namespacehal_1a3c19435046e74281a514965c8ff93b0d" kindref="member">volts</ref><sp/><ref refid="namespacehal_1a3c19435046e74281a514965c8ff93b0d" kindref="member">volts</ref>()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehal" kindref="compound">hal</ref>::<ref refid="namespacehal_1a8ee6f825b6e7475277274772d858c816" kindref="member">celsius</ref><sp/>temperature()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehal" kindref="compound">hal</ref>::<ref refid="namespacehal_1a69b7f93f81eb80e25fbaefa924af5748" kindref="member">degrees</ref><sp/>angle()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>motor_stall()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>low_pressure()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>over_voltage()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>over_current()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>power_overrun()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>speeding()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>over_temperature()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>encoder_calibration_error()<sp/>const<sp/>noexcept;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="classhal_1_1rmd_1_1mc__x_1a21abbeb8b13b84b8eb2ba55b5587f7e3" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>static<sp/>result&lt;<ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>&gt;<sp/><ref refid="classhal_1_1rmd_1_1mc__x_1a21abbeb8b13b84b8eb2ba55b5587f7e3" kindref="member">create</ref>(</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehal" kindref="compound">hal</ref>::<ref refid="classhal_1_1can__router" kindref="compound">can_router</ref>&amp;<sp/>p_router,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehal" kindref="compound">hal</ref>::<ref refid="classhal_1_1steady__clock" kindref="compound">steady_clock</ref>&amp;<sp/>p_clock,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>p_gear_ratio,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classhal_1_1can" kindref="compound">can</ref>::id_t<sp/>device_id,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehal" kindref="compound">hal</ref>::<ref refid="namespacehal_1a858b08a6e4e3eb5752d8e0daaad5ed00" kindref="member">time_duration</ref><sp/>p_max_response_time<sp/>=<sp/>std::chrono::milliseconds(10));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>(<ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>&amp;<sp/>p_other)<sp/>=<sp/>delete;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>&amp;<sp/>operator=(<ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>&amp;<sp/>p_other)<sp/>=<sp/>delete;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>(<ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>&amp;&amp;<sp/>p_other);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>&amp;<sp/>operator=(<ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>&amp;&amp;<sp/>p_other);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="classhal_1_1rmd_1_1mc__x_1ae20843a615f0f606dc6b02188e5ea49b" refkind="member"><highlight class="normal"><sp/><sp/>const<sp/><ref refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t" kindref="compound">feedback_t</ref>&amp;<sp/><ref refid="classhal_1_1rmd_1_1mc__x_1ae20843a615f0f606dc6b02188e5ea49b" kindref="member">feedback</ref>()<sp/>const;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="classhal_1_1rmd_1_1mc__x_1a59dd3fd0131e0ee1dc9f40c4b02156ef" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>status<sp/><ref refid="classhal_1_1rmd_1_1mc__x_1a59dd3fd0131e0ee1dc9f40c4b02156ef" kindref="member">feedback_request</ref>(<ref refid="classhal_1_1rmd_1_1mc__x_1a034cd99ca06a227704fc40009d72882f" kindref="member">read</ref><sp/>p_command);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="classhal_1_1rmd_1_1mc__x_1ae358be8a12c5202e2f8c60eab6deefa6" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>status<sp/><ref refid="classhal_1_1rmd_1_1mc__x_1ae358be8a12c5202e2f8c60eab6deefa6" kindref="member">velocity_control</ref>(<ref refid="namespacehal_1a115c0adadc69503586eff94ce028cd87" kindref="member">rpm</ref><sp/>p_speed);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="classhal_1_1rmd_1_1mc__x_1ad07c5eb423626c143aa9a3fcf11ec29e" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>status<sp/><ref refid="classhal_1_1rmd_1_1mc__x_1ad07c5eb423626c143aa9a3fcf11ec29e" kindref="member">position_control</ref>(<ref refid="namespacehal_1a69b7f93f81eb80e25fbaefa924af5748" kindref="member">degrees</ref><sp/>p_angle,<sp/><ref refid="namespacehal_1a115c0adadc69503586eff94ce028cd87" kindref="member">rpm</ref><sp/>speed);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="classhal_1_1rmd_1_1mc__x_1a18a257ff8ad6487b15b02f4ce755f154" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>status<sp/><ref refid="classhal_1_1rmd_1_1mc__x_1a18a257ff8ad6487b15b02f4ce755f154" kindref="member">system_control</ref>(<ref refid="classhal_1_1rmd_1_1mc__x_1a8261bc62791c5bfbb098e83bc0824f9a" kindref="member">system</ref><sp/>p_system_command);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="classhal_1_1rmd_1_1mc__x_1a6d069a733714652f0c32e8de3fb45ede" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>operator()(const<sp/><ref refid="classhal_1_1can" kindref="compound">can</ref>::message_t&amp;<sp/>p_message);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal">private:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>(<ref refid="namespacehal" kindref="compound">hal</ref>::<ref refid="classhal_1_1can__router" kindref="compound">can_router</ref>&amp;<sp/>p_router,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehal" kindref="compound">hal</ref>::<ref refid="classhal_1_1steady__clock" kindref="compound">steady_clock</ref>&amp;<sp/>p_clock,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>p_gear_ratio,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classhal_1_1can" kindref="compound">can</ref>::id_t<sp/>p_device_id,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacehal" kindref="compound">hal</ref>::<ref refid="namespacehal_1a858b08a6e4e3eb5752d8e0daaad5ed00" kindref="member">time_duration</ref><sp/>p_max_response_time);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>friend<sp/>struct<sp/>response_waiter;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><ref refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t" kindref="compound">feedback_t</ref><sp/>m_feedback{};</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><ref refid="classhal_1_1steady__clock" kindref="compound">hal::steady_clock</ref>*<sp/>m_clock;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><ref refid="classhal_1_1can__router" kindref="compound">hal::can_router</ref>*<sp/>m_router;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>hal::can_router::route_item<sp/>m_route_item;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_gear_ratio;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><ref refid="classhal_1_1can_1ae85571b4f7aac93fca8503aafcb32a47" kindref="member">can::id_t</ref><sp/>m_device_id;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="namespacehal_1a858b08a6e4e3eb5752d8e0daaad5ed00" kindref="member">hal::time_duration</ref><sp/>m_max_response_time;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">};</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="classhal_1_1rmd_1_1mc__x__motor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhal_1_1rmd_1_1mc__x__motor" kindref="compound">mc_x_motor</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1motor" kindref="compound">hal::motor</ref></highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><ref refid="classhal_1_1rmd_1_1mc__x__motor" kindref="compound">mc_x_motor</ref>(<ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>&amp;<sp/>p_mc_x,<sp/><ref refid="namespacehal_1a115c0adadc69503586eff94ce028cd87" kindref="member">hal::rpm</ref><sp/>p_max_speed);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/>result&lt;hal::motor::power_t&gt;<sp/>driver_power(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>p_power)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="221" refid="classhal_1_1rmd_1_1mc__x__motor_1a1122cb15cb5ba7adab844416d4d41329" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>result&lt;mc_x_motor&gt;<sp/><ref refid="classhal_1_1rmd_1_1mc__x__motor_1a1122cb15cb5ba7adab844416d4d41329" kindref="member">make_motor</ref>(<ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>&amp;<sp/>p_mc_x,<sp/><ref refid="namespacehal_1a115c0adadc69503586eff94ce028cd87" kindref="member">hal::rpm</ref><sp/>p_max_speed);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>*<sp/>m_mc_x<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><ref refid="namespacehal_1a115c0adadc69503586eff94ce028cd87" kindref="member">hal::rpm</ref><sp/>m_max_speed;</highlight></codeline>
<codeline lineno="224"><highlight class="normal">};</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal">result&lt;mc_x_motor&gt;<sp/>make_motor(<ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>&amp;<sp/>p_mc_x,<sp/><ref refid="namespacehal_1a115c0adadc69503586eff94ce028cd87" kindref="member">hal::rpm</ref><sp/>p_max_speed);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="classhal_1_1rmd_1_1mc__x__rotation" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhal_1_1rmd_1_1mc__x__rotation" kindref="compound">mc_x_rotation</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1rotation__sensor" kindref="compound">hal::rotation_sensor</ref></highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><ref refid="classhal_1_1rmd_1_1mc__x__rotation" kindref="compound">mc_x_rotation</ref>(<ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>&amp;<sp/>p_mc_x);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>result&lt;hal::rotation_sensor::read_t&gt;<sp/>driver_read()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="245" refid="classhal_1_1rmd_1_1mc__x__rotation_1ab6012959d53a427976f7c0669b3097f4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>result&lt;mc_x_rotation&gt;<sp/><ref refid="classhal_1_1rmd_1_1mc__x__rotation_1ab6012959d53a427976f7c0669b3097f4" kindref="member">make_rotation_sensor</ref>(<ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>&amp;<sp/>p_mc_x);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>*<sp/>m_mc_x<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal">};</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal">result&lt;mc_x_rotation&gt;<sp/>make_rotation_sensor(<ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>&amp;<sp/>p_mc_x);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="classhal_1_1rmd_1_1mc__x__servo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhal_1_1rmd_1_1mc__x__servo" kindref="compound">mc_x_servo</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1servo" kindref="compound">hal::servo</ref></highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><ref refid="classhal_1_1rmd_1_1mc__x__servo" kindref="compound">mc_x_servo</ref>(<ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>&amp;<sp/>p_mc_x,<sp/><ref refid="namespacehal_1a115c0adadc69503586eff94ce028cd87" kindref="member">hal::rpm</ref><sp/>p_max_speed);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>result&lt;hal::servo::position_t&gt;<sp/>driver_position(</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehal_1a69b7f93f81eb80e25fbaefa924af5748" kindref="member">hal::degrees</ref><sp/>p_position)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269" refid="classhal_1_1rmd_1_1mc__x__servo_1a275db5e3b895244a015d79a527cd4200" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>result&lt;mc_x_servo&gt;<sp/><ref refid="classhal_1_1rmd_1_1mc__x__servo_1a275db5e3b895244a015d79a527cd4200" kindref="member">make_servo</ref>(<ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>&amp;<sp/>p_mc_x,<sp/><ref refid="namespacehal_1a115c0adadc69503586eff94ce028cd87" kindref="member">hal::rpm</ref><sp/>p_max_speed);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>*<sp/>m_mc_x<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><ref refid="namespacehal_1a115c0adadc69503586eff94ce028cd87" kindref="member">hal::rpm</ref><sp/>m_max_speed;</highlight></codeline>
<codeline lineno="272"><highlight class="normal">};</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal">result&lt;mc_x_servo&gt;<sp/>make_servo(<ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>&amp;<sp/>p_mc_x,<sp/><ref refid="namespacehal_1a115c0adadc69503586eff94ce028cd87" kindref="member">hal::rpm</ref><sp/>p_max_speed);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="classhal_1_1rmd_1_1mc__x__temperature" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhal_1_1rmd_1_1mc__x__temperature" kindref="compound">mc_x_temperature</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1temperature__sensor" kindref="compound">hal::temperature_sensor</ref></highlight></codeline>
<codeline lineno="290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><ref refid="classhal_1_1rmd_1_1mc__x__temperature" kindref="compound">mc_x_temperature</ref>(<ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>&amp;<sp/>p_mc_x);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>result&lt;hal::temperature_sensor::read_t&gt;<sp/>driver_read()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="294" refid="classhal_1_1rmd_1_1mc__x__temperature_1a3e231ed383ff56c58d32909b0597e10c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>result&lt;mc_x_temperature&gt;<sp/><ref refid="classhal_1_1rmd_1_1mc__x__temperature_1a3e231ed383ff56c58d32909b0597e10c" kindref="member">make_temperature_sensor</ref>(<ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>&amp;<sp/>p_mc_x);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>*<sp/>m_mc_x<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal">};</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal">result&lt;mc_x_temperature&gt;<sp/>make_temperature_sensor(<ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref>&amp;<sp/>p_mc_x);</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hal::rmd</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehal" kindref="compound">hal</ref><sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>rmd::make_motor;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>rmd::make_rotation_sensor;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>rmd::make_servo;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>rmd::make_temperature_sensor;</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hal</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="libraries/include/libhal-rmd/mc_x.hpp"/>
  </compounddef>
</doxygen>
