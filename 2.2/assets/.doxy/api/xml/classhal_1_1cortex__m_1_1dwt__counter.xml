<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhal_1_1cortex__m_1_1dwt__counter" kind="class" language="C++" prot="public">
    <compoundname>hal::cortex_m::dwt_counter</compoundname>
    <basecompoundref refid="classhal_1_1steady__clock" prot="public" virt="non-virtual">hal::steady_clock</basecompoundref>
    <includes refid="dwt__counter_8hpp" local="no">dwt_counter.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhal_1_1cortex__m_1_1dwt__counter_1ad3fb73e75262d9028ad13ec9952627f0" prot="private" static="no" mutable="no">
        <type><ref refid="classhal_1_1overflow__counter" kindref="compound">overflow_counter</ref>&lt; 32 &gt;</type>
        <definition>overflow_counter&lt;32&gt; hal::cortex_m::dwt_counter::m_uptime</definition>
        <argsstring></argsstring>
        <name>m_uptime</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-armcortex/dwt_counter.hpp" line="54" column="20" bodyfile="libraries/include/libhal-armcortex/dwt_counter.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1cortex__m_1_1dwt__counter_1abc956143dc052a61906a0d34d4c220a7" prot="private" static="no" mutable="no">
        <type><ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref></type>
        <definition>hertz hal::cortex_m::dwt_counter::m_cpu_frequency</definition>
        <argsstring></argsstring>
        <name>m_cpu_frequency</name>
        <initializer>{ 1&apos;000&apos;000 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-armcortex/dwt_counter.hpp" line="55" column="9" bodyfile="libraries/include/libhal-armcortex/dwt_counter.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhal_1_1cortex__m_1_1dwt__counter_1a2514431a467b680241b3a8bdb78798a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hal::cortex_m::dwt_counter::dwt_counter</definition>
        <argsstring>(hertz p_cpu_frequency)</argsstring>
        <name>dwt_counter</name>
        <param>
          <type><ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref></type>
          <declname>p_cpu_frequency</declname>
        </param>
        <briefdescription>
<para>Construct a new dwt counter object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_cpu_frequency</parametername>
</parameternamelist>
<parameterdescription>
<para>- the operating frequency of the CPU </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-armcortex/dwt_counter.hpp" line="35" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1cortex__m_1_1dwt__counter_1a6d2d451d0fcb2a2dcc879145657f52eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hal::cortex_m::dwt_counter::register_cpu_frequency</definition>
        <argsstring>(hertz p_cpu_frequency)</argsstring>
        <name>register_cpu_frequency</name>
        <param>
          <type><ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref></type>
          <declname>p_cpu_frequency</declname>
        </param>
        <briefdescription>
<para>Inform the driver of the operating frequency of the CPU in order to generate the correct uptime. </para>
        </briefdescription>
        <detaileddescription>
<para>Use this when the CPU&apos;s operating frequency has changed and no longer matches the frequency supplied to the constructor. Care should be taken when expecting this function when there is the potentially other parts of the system that depend on this counter&apos;s uptime to operate.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_cpu_frequency</parametername>
</parameternamelist>
<parameterdescription>
<para>- the operating frequency of the CPU </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-armcortex/dwt_counter.hpp" line="48" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhal_1_1cortex__m_1_1dwt__counter_1ad0f5cac11641929ad014f44fadddc101" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structhal_1_1steady__clock_1_1uptime__t" kindref="compound">uptime_t</ref></type>
        <definition>uptime_t hal::cortex_m::dwt_counter::driver_uptime</definition>
        <argsstring>() override</argsstring>
        <name>driver_uptime</name>
        <reimplements refid="classhal_1_1steady__clock_1aa15e00cbbe00e98015aa86dbe016f812">driver_uptime</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-armcortex/dwt_counter.hpp" line="51" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1cortex__m_1_1dwt__counter_1aac58843ac895e5330c92022d084923fd" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structhal_1_1steady__clock_1_1frequency__t" kindref="compound">frequency_t</ref></type>
        <definition>frequency_t hal::cortex_m::dwt_counter::driver_frequency</definition>
        <argsstring>() override</argsstring>
        <name>driver_frequency</name>
        <reimplements refid="classhal_1_1steady__clock_1af69e8bc7e978529720cb18149241ba85">driver_frequency</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-armcortex/dwt_counter.hpp" line="52" column="15"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A counter with a frequency fixed to the CPU clock rate. </para>
    </briefdescription>
    <detaileddescription>
<para>This driver is supported for Cortex M3 devices and above. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>hal::cortex_m::dwt_counter</label>
        <link refid="classhal_1_1cortex__m_1_1dwt__counter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hal::steady_clock</label>
        <link refid="classhal_1_1steady__clock"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>hal::cortex_m::dwt_counter</label>
        <link refid="classhal_1_1cortex__m_1_1dwt__counter"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hal::steady_clock</label>
        <link refid="classhal_1_1steady__clock"/>
      </node>
    </collaborationgraph>
    <location file="libraries/include/libhal-armcortex/dwt_counter.hpp" line="27" column="1" bodyfile="libraries/include/libhal-armcortex/dwt_counter.hpp" bodystart="28" bodyend="56"/>
    <listofallmembers>
      <member refid="classhal_1_1cortex__m_1_1dwt__counter_1aac58843ac895e5330c92022d084923fd" prot="private" virt="virtual"><scope>hal::cortex_m::dwt_counter</scope><name>driver_frequency</name></member>
      <member refid="classhal_1_1cortex__m_1_1dwt__counter_1ad0f5cac11641929ad014f44fadddc101" prot="private" virt="virtual"><scope>hal::cortex_m::dwt_counter</scope><name>driver_uptime</name></member>
      <member refid="classhal_1_1cortex__m_1_1dwt__counter_1a2514431a467b680241b3a8bdb78798a8" prot="public" virt="non-virtual"><scope>hal::cortex_m::dwt_counter</scope><name>dwt_counter</name></member>
      <member refid="classhal_1_1steady__clock_1a2bb1983d9fa94b9fe5bdb8159de03220" prot="public" virt="non-virtual"><scope>hal::cortex_m::dwt_counter</scope><name>frequency</name></member>
      <member refid="classhal_1_1cortex__m_1_1dwt__counter_1abc956143dc052a61906a0d34d4c220a7" prot="private" virt="non-virtual"><scope>hal::cortex_m::dwt_counter</scope><name>m_cpu_frequency</name></member>
      <member refid="classhal_1_1cortex__m_1_1dwt__counter_1ad3fb73e75262d9028ad13ec9952627f0" prot="private" virt="non-virtual"><scope>hal::cortex_m::dwt_counter</scope><name>m_uptime</name></member>
      <member refid="classhal_1_1cortex__m_1_1dwt__counter_1a6d2d451d0fcb2a2dcc879145657f52eb" prot="public" virt="non-virtual"><scope>hal::cortex_m::dwt_counter</scope><name>register_cpu_frequency</name></member>
      <member refid="classhal_1_1steady__clock_1ae36599416bdd64434e56b2ff6a2c2262" prot="public" virt="non-virtual"><scope>hal::cortex_m::dwt_counter</scope><name>uptime</name></member>
      <member refid="classhal_1_1steady__clock_1a8c1bf5a5f874b6971cd84e213afe6818" prot="public" virt="virtual"><scope>hal::cortex_m::dwt_counter</scope><name>~steady_clock</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
