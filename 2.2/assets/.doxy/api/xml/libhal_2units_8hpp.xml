<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="libhal_2units_8hpp" kind="file" language="C++">
    <compoundname>units.hpp</compoundname>
    <includes local="no">chrono</includes>
    <includes local="no">cstdint</includes>
    <includes refid="error_8hpp" local="yes">error.hpp</includes>
    <includedby refid="accelerometer_8hpp" local="yes">libraries/include/libhal/accelerometer.hpp</includedby>
    <includedby refid="libhal_2can_8hpp" local="yes">libraries/include/libhal/can.hpp</includedby>
    <includedby refid="distance__sensor_8hpp" local="yes">libraries/include/libhal/distance_sensor.hpp</includedby>
    <includedby refid="gyroscope_8hpp" local="yes">libraries/include/libhal/gyroscope.hpp</includedby>
    <includedby refid="libhal_2i2c_8hpp" local="yes">libraries/include/libhal/i2c.hpp</includedby>
    <includedby refid="libhal_2input__pin_8hpp" local="yes">libraries/include/libhal/input_pin.hpp</includedby>
    <includedby refid="libhal_2interrupt__pin_8hpp" local="yes">libraries/include/libhal/interrupt_pin.hpp</includedby>
    <includedby refid="magnetometer_8hpp" local="yes">libraries/include/libhal/magnetometer.hpp</includedby>
    <includedby refid="libhal_2output__pin_8hpp" local="yes">libraries/include/libhal/output_pin.hpp</includedby>
    <includedby refid="libhal_2pwm_8hpp" local="yes">libraries/include/libhal/pwm.hpp</includedby>
    <includedby refid="rotation__sensor_8hpp" local="yes">libraries/include/libhal/rotation_sensor.hpp</includedby>
    <includedby refid="libhal_2serial_8hpp" local="yes">libraries/include/libhal/serial.hpp</includedby>
    <includedby refid="servo_8hpp" local="yes">libraries/include/libhal/servo.hpp</includedby>
    <includedby refid="libhal_2spi_8hpp" local="yes">libraries/include/libhal/spi.hpp</includedby>
    <includedby refid="libhal_2steady__clock_8hpp" local="yes">libraries/include/libhal/steady_clock.hpp</includedby>
    <includedby refid="temperature__sensor_8hpp" local="yes">libraries/include/libhal/temperature_sensor.hpp</includedby>
    <includedby refid="libhal_2timer_8hpp" local="yes">libraries/include/libhal/timer.hpp</includedby>
    <includedby refid="libhal-lpc40_2adc_8hpp" local="no">libraries/include/libhal-lpc40/adc.hpp</includedby>
    <includedby refid="libhal-lpc40_2clock_8hpp" local="no">libraries/include/libhal-lpc40/clock.hpp</includedby>
    <includedby refid="libhal-lpc40_2pin_8hpp" local="no">libraries/include/libhal-lpc40/pin.hpp</includedby>
    <includedby refid="libhal-mock_2spi_8hpp" local="no">libraries/include/libhal-mock/spi.hpp</includedby>
    <includedby refid="mpl3115a2_8hpp" local="no">libraries/include/libhal-mpl/mpl3115a2.hpp</includedby>
    <includedby refid="drc_8hpp" local="no">libraries/include/libhal-rmd/drc.hpp</includedby>
    <includedby refid="mc__x_8hpp" local="no">libraries/include/libhal-rmd/mc_x.hpp</includedby>
    <includedby refid="libhal-stm32f1_2clock_8hpp" local="no">libraries/include/libhal-stm32f1/clock.hpp</includedby>
    <includedby refid="as__bytes_8hpp" local="no">libraries/include/libhal-util/as_bytes.hpp</includedby>
    <includedby refid="enum_8hpp" local="no">libraries/include/libhal-util/enum.hpp</includedby>
    <includedby refid="libhal-util_2i2c_8hpp" local="no">libraries/include/libhal-util/i2c.hpp</includedby>
    <includedby refid="libhal-util_2serial_8hpp" local="no">libraries/include/libhal-util/serial.hpp</includedby>
    <includedby refid="serial__coroutines_8hpp" local="no">libraries/include/libhal-util/serial_coroutines.hpp</includedby>
    <includedby refid="libhal-util_2spi_8hpp" local="no">libraries/include/libhal-util/spi.hpp</includedby>
    <includedby refid="streams_8hpp" local="no">libraries/include/libhal-util/streams.hpp</includedby>
    <includedby refid="libhal-util_2units_8hpp" local="no">libraries/include/libhal-util/units.hpp</includedby>
    <incdepgraph>
      <node id="6">
        <label>system_error</label>
      </node>
      <node id="3">
        <label>cstdint</label>
      </node>
      <node id="1">
        <label>libraries/include/libhal/units.hpp</label>
        <link refid="libhal_2units_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>boost/leaf.hpp</label>
      </node>
      <node id="4">
        <label>error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>chrono</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="63">
        <label>libraries/include/libhal/timer.hpp</label>
        <link refid="libhal_2timer_8hpp_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>libraries/include/libhal-lpc40/uart.hpp</label>
        <link refid="uart_8hpp_source"/>
      </node>
      <node id="30">
        <label>libraries/include/libhal-util/interrupt_pin.hpp</label>
        <link refid="libhal-util_2interrupt__pin_8hpp_source"/>
      </node>
      <node id="29">
        <label>libraries/include/libhal-soft/inert_drivers/inert_interrupt_pin.hpp</label>
        <link refid="inert__interrupt__pin_8hpp_source"/>
      </node>
      <node id="25">
        <label>libraries/include/libhal-util/input_pin.hpp</label>
        <link refid="libhal-util_2input__pin_8hpp_source"/>
      </node>
      <node id="6">
        <label>libraries/include/libhal-rmd/drc.hpp</label>
        <link refid="drc_8hpp_source"/>
      </node>
      <node id="65">
        <label>libraries/include/libhal-mock/timer.hpp</label>
        <link refid="libhal-mock_2timer_8hpp_source"/>
      </node>
      <node id="54">
        <label>libraries/include/libhal-mock/spi.hpp</label>
        <link refid="libhal-mock_2spi_8hpp_source"/>
      </node>
      <node id="40">
        <label>libraries/include/libhal/pwm.hpp</label>
        <link refid="libhal_2pwm_8hpp_source"/>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="42" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>libraries/include/libhal/temperature_sensor.hpp</label>
        <link refid="temperature__sensor_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>libraries/include/libhal-util/i2c.hpp</label>
        <link refid="libhal-util_2i2c_8hpp_source"/>
      </node>
      <node id="32">
        <label>libraries/include/libhal-soft/inert_drivers/inert_magnetometer.hpp</label>
        <link refid="inert__magnetometer_8hpp_source"/>
      </node>
      <node id="41">
        <label>libraries/include/libhal-lpc40/pwm.hpp</label>
        <link refid="libhal-lpc40_2pwm_8hpp_source"/>
      </node>
      <node id="31">
        <label>libraries/include/libhal/magnetometer.hpp</label>
        <link refid="magnetometer_8hpp_source"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>libraries/include/libhal-esp8266/at.hpp</label>
        <link refid="at_8hpp_source"/>
      </node>
      <node id="38">
        <label>libraries/include/libhal-stm32f1/output_pin.hpp</label>
        <link refid="libhal-stm32f1_2output__pin_8hpp_source"/>
      </node>
      <node id="72">
        <label>libraries/include/libhal-util/enum.hpp</label>
        <link refid="enum_8hpp_source"/>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="70">
        <label>libraries/include/libhal-stm32f1/clock.hpp</label>
        <link refid="libhal-stm32f1_2clock_8hpp_source"/>
      </node>
      <node id="27">
        <label>libraries/include/libhal-lpc40/interrupt_pin.hpp</label>
        <link refid="libhal-lpc40_2interrupt__pin_8hpp_source"/>
      </node>
      <node id="12">
        <label>libraries/include/libhal/distance_sensor.hpp</label>
        <link refid="distance__sensor_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="50">
        <label>libraries/include/libhal-util/serial.hpp</label>
        <link refid="libhal-util_2serial_8hpp_source"/>
      </node>
      <node id="64">
        <label>libraries/include/libhal-armcortex/systick_timer.hpp</label>
        <link refid="systick__timer_8hpp_source"/>
      </node>
      <node id="10">
        <label>libraries/include/libhal-mock/can.hpp</label>
        <link refid="libhal-mock_2can_8hpp_source"/>
      </node>
      <node id="59">
        <label>libraries/include/libhal-soft/inert_drivers/inert_steady_clock.hpp</label>
        <link refid="inert__steady__clock_8hpp_source"/>
      </node>
      <node id="17">
        <label>libraries/include/libhal-lpc40/i2c.hpp</label>
        <link refid="libhal-lpc40_2i2c_8hpp_source"/>
      </node>
      <node id="26">
        <label>libraries/include/libhal/interrupt_pin.hpp</label>
        <link refid="libhal_2interrupt__pin_8hpp_source"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>libraries/include/libhal/rotation_sensor.hpp</label>
        <link refid="rotation__sensor_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>libraries/include/libhal-util/can.hpp</label>
        <link refid="libhal-util_2can_8hpp_source"/>
      </node>
      <node id="73">
        <label>libraries/include/libhal-util/streams.hpp</label>
        <link refid="streams_8hpp_source"/>
      </node>
      <node id="56">
        <label>libraries/include/libhal/steady_clock.hpp</label>
        <link refid="libhal_2steady__clock_8hpp_source"/>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>libraries/include/libhal-soft/inert_drivers/inert_input_pin.hpp</label>
        <link refid="inert__input__pin_8hpp_source"/>
      </node>
      <node id="62">
        <label>libraries/include/libhal-soft/inert_drivers/inert_temperature_sensor.hpp</label>
        <link refid="inert__temperature__sensor_8hpp_source"/>
      </node>
      <node id="37">
        <label>libraries/include/libhal-soft/inert_drivers/inert_output_pin.hpp</label>
        <link refid="inert__output__pin_8hpp_source"/>
      </node>
      <node id="66">
        <label>libraries/include/libhal-soft/inert_drivers/inert_timer.hpp</label>
        <link refid="inert__timer_8hpp_source"/>
      </node>
      <node id="28">
        <label>libraries/include/libhal-mock/interrupt_pin.hpp</label>
        <link refid="libhal-mock_2interrupt__pin_8hpp_source"/>
      </node>
      <node id="1">
        <label>libraries/include/libhal/units.hpp</label>
        <link refid="libhal_2units_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="40" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
      </node>
      <node id="35">
        <label>libraries/include/libhal-mock/output_pin.hpp</label>
        <link refid="libhal-mock_2output__pin_8hpp_source"/>
      </node>
      <node id="58">
        <label>libraries/include/libhal-mock/steady_clock.hpp</label>
        <link refid="libhal-mock_2steady__clock_8hpp_source"/>
      </node>
      <node id="75">
        <label>libraries/include/libhal-util/timeout.hpp</label>
        <link refid="libhal-util_2timeout_8hpp_source"/>
      </node>
      <node id="9">
        <label>libraries/include/libhal-micromod/micromod.hpp</label>
        <link refid="micromod_8hpp_source"/>
      </node>
      <node id="71">
        <label>libraries/include/libhal-util/as_bytes.hpp</label>
        <link refid="as__bytes_8hpp_source"/>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>libraries/include/libhal-util/units.hpp</label>
        <link refid="libhal-util_2units_8hpp_source"/>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
      </node>
      <node id="67">
        <label>libraries/include/libhal-lpc40/adc.hpp</label>
        <link refid="libhal-lpc40_2adc_8hpp_source"/>
      </node>
      <node id="22">
        <label>libraries/include/libhal-lpc40/input_pin.hpp</label>
        <link refid="libhal-lpc40_2input__pin_8hpp_source"/>
      </node>
      <node id="3">
        <label>libraries/include/libhal-soft/inert_drivers/inert_accelerometer.hpp</label>
        <link refid="inert__accelerometer_8hpp_source"/>
      </node>
      <node id="57">
        <label>libraries/include/libhal-armcortex/dwt_counter.hpp</label>
        <link refid="dwt__counter_8hpp_source"/>
      </node>
      <node id="21">
        <label>libraries/include/libhal/input_pin.hpp</label>
        <link refid="libhal_2input__pin_8hpp_source"/>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
      </node>
      <node id="42">
        <label>libraries/include/libhal-mock/pwm.hpp</label>
        <link refid="libhal-mock_2pwm_8hpp_source"/>
      </node>
      <node id="46">
        <label>libraries/include/libhal-soft/inert_drivers/inert_rotation_sensor.hpp</label>
        <link refid="inert__rotation__sensor_8hpp_source"/>
      </node>
      <node id="44">
        <label>libraries/include/libhal-soft/rc_servo.hpp</label>
        <link refid="rc__servo_8hpp_source"/>
      </node>
      <node id="68">
        <label>libraries/include/libhal-lpc40/clock.hpp</label>
        <link refid="libhal-lpc40_2clock_8hpp_source"/>
      </node>
      <node id="16">
        <label>libraries/include/libhal/i2c.hpp</label>
        <link refid="libhal_2i2c_8hpp_source"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>libraries/include/libhal/accelerometer.hpp</label>
        <link refid="accelerometer_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>libraries/include/libhal-util/serial_coroutines.hpp</label>
        <link refid="serial__coroutines_8hpp_source"/>
      </node>
      <node id="43">
        <label>libraries/include/libhal-soft/inert_drivers/inert_pwm.hpp</label>
        <link refid="inert__pwm_8hpp_source"/>
      </node>
      <node id="69">
        <label>libraries/include/libhal-lpc40/pin.hpp</label>
        <link refid="libhal-lpc40_2pin_8hpp_source"/>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>libraries/include/libhal-rmd/mc_x.hpp</label>
        <link refid="mc__x_8hpp_source"/>
      </node>
      <node id="39">
        <label>libraries/include/libhal-util/output_pin.hpp</label>
        <link refid="libhal-util_2output__pin_8hpp_source"/>
      </node>
      <node id="47">
        <label>libraries/include/libhal/serial.hpp</label>
        <link refid="libhal_2serial_8hpp_source"/>
        <childnode refid="48" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="50" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>libraries/include/libhal-soft/adc_mux.hpp</label>
        <link refid="adc__mux_8hpp_source"/>
      </node>
      <node id="14">
        <label>libraries/include/libhal/gyroscope.hpp</label>
        <link refid="gyroscope_8hpp_source"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>libraries/include/libhal-soft/inert_drivers/inert_gyroscope.hpp</label>
        <link refid="inert__gyroscope_8hpp_source"/>
      </node>
      <node id="23">
        <label>libraries/include/libhal-mock/input_pin.hpp</label>
        <link refid="libhal-mock_2input__pin_8hpp_source"/>
      </node>
      <node id="34">
        <label>libraries/include/libhal-lpc40/output_pin.hpp</label>
        <link refid="libhal-lpc40_2output__pin_8hpp_source"/>
      </node>
      <node id="13">
        <label>libraries/include/libhal-soft/inert_drivers/inert_distance_sensor.hpp</label>
        <link refid="inert__distance__sensor_8hpp_source"/>
      </node>
      <node id="5">
        <label>libraries/include/libhal-canrouter/can_router.hpp</label>
        <link refid="can__router_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>libraries/include/libhal/spi.hpp</label>
        <link refid="libhal_2spi_8hpp_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>libraries/include/libhal-lpc40/can.hpp</label>
        <link refid="libhal-lpc40_2can_8hpp_source"/>
      </node>
      <node id="19">
        <label>libraries/include/libhal-soft/i2c_minimum_speed.hpp</label>
        <link refid="i2c__minimum__speed_8hpp_source"/>
      </node>
      <node id="60">
        <label>libraries/include/libhal-util/steady_clock.hpp</label>
        <link refid="libhal-util_2steady__clock_8hpp_source"/>
      </node>
      <node id="18">
        <label>libraries/include/libhal-mpl/mpl3115a2.hpp</label>
        <link refid="mpl3115a2_8hpp_source"/>
      </node>
      <node id="4">
        <label>libraries/include/libhal/can.hpp</label>
        <link refid="libhal_2can_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="52">
        <label>libraries/include/libhal/servo.hpp</label>
        <link refid="servo_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>libraries/include/libhal/output_pin.hpp</label>
        <link refid="libhal_2output__pin_8hpp_source"/>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="38" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>libraries/include/libhal-util/spi.hpp</label>
        <link refid="libhal-util_2spi_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespacehal">hal</innernamespace>
    <innernamespace refid="namespacehal_1_1literals">hal::literals</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2023<sp/>Google<sp/>LLC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;error.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehal" kindref="compound">hal</ref><sp/>{</highlight></codeline>
<codeline lineno="29" refid="namespacehal_1a858b08a6e4e3eb5752d8e0daaad5ed00" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehal_1a858b08a6e4e3eb5752d8e0daaad5ed00" kindref="member">time_duration</ref><sp/>=<sp/>std::chrono::nanoseconds;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="namespacehal_1aa21f8ca97410869aabb284a575b2021d" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">byte</highlight><highlight class="normal"><sp/>=<sp/>std::uint8_t;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="namespacehal_1a54dc271deb8f266e52926836c0582598" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref><sp/>=<sp/>float;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="namespacehal_1abc3d1451352ebbab2ab26f3dcbc51ed9" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehal_1abc3d1451352ebbab2ab26f3dcbc51ed9" kindref="member">g_force</ref><sp/>=<sp/>float;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="namespacehal_1aa830f99bf69a06fcc452d82f0deb3fa3" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehal_1aa830f99bf69a06fcc452d82f0deb3fa3" kindref="member">ampere</ref><sp/>=<sp/>float;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="namespacehal_1a3c19435046e74281a514965c8ff93b0d" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehal_1a3c19435046e74281a514965c8ff93b0d" kindref="member">volts</ref><sp/>=<sp/>float;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="namespacehal_1a8ee6f825b6e7475277274772d858c816" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehal_1a8ee6f825b6e7475277274772d858c816" kindref="member">celsius</ref><sp/>=<sp/>float;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="namespacehal_1a115c0adadc69503586eff94ce028cd87" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehal_1a115c0adadc69503586eff94ce028cd87" kindref="member">rpm</ref><sp/>=<sp/>float;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="namespacehal_1a309a799c0b8da9cd99fb5fad7c29208c" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehal_1a309a799c0b8da9cd99fb5fad7c29208c" kindref="member">meters</ref><sp/>=<sp/>float;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="namespacehal_1a69b7f93f81eb80e25fbaefa924af5748" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehal_1a69b7f93f81eb80e25fbaefa924af5748" kindref="member">degrees</ref><sp/>=<sp/>float;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="namespacehal_1a3798d176bd776585ba459d9851fe3e25" refkind="member"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespacehal_1a3798d176bd776585ba459d9851fe3e25" kindref="member">gauss</ref><sp/>=<sp/>float;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="namespacehal_1af094ceea0d10800e8281b1014d7b8a1a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespacehal_1af094ceea0d10800e8281b1014d7b8a1a" kindref="member">pin_resistor</ref></highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="namespacehal_1af094ceea0d10800e8281b1014d7b8a1aa334c4a4c42fdb79d7ebc3e73b517e6f8" kindref="member">none</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><ref refid="namespacehal_1af094ceea0d10800e8281b1014d7b8a1aa6bd95a5bd1a571a29b57aa0dfda9d77b" kindref="member">pull_down</ref>,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="namespacehal_1af094ceea0d10800e8281b1014d7b8a1aa5dd40e1f7d5c287d1df85dac013c1c38" kindref="member">pull_up</ref>,</highlight></codeline>
<codeline lineno="83"><highlight class="normal">};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="namespacehal_1_1literals" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">literals<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_Hz(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_kHz(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value<sp/>*<sp/>std::kilo::num);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_MHz(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value<sp/>*<sp/>std::mega::num);</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_GHz(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value<sp/>*<sp/>std::giga::num);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>G<sp/>force</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1abc3d1451352ebbab2ab26f3dcbc51ed9" kindref="member">g_force</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_g(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Ampere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1aa830f99bf69a06fcc452d82f0deb3fa3" kindref="member">ampere</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_kA(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value<sp/>*<sp/>std::kilo::num);</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1aa830f99bf69a06fcc452d82f0deb3fa3" kindref="member">ampere</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_A(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value);</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1aa830f99bf69a06fcc452d82f0deb3fa3" kindref="member">ampere</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_mA(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value<sp/>/<sp/>std::milli::den);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1aa830f99bf69a06fcc452d82f0deb3fa3" kindref="member">ampere</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_uA(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value<sp/>/<sp/>std::micro::den);</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Voltage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1a3c19435046e74281a514965c8ff93b0d" kindref="member">volts</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_kV(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value<sp/>*<sp/>std::kilo::num);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1a3c19435046e74281a514965c8ff93b0d" kindref="member">volts</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_V(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value);</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1a3c19435046e74281a514965c8ff93b0d" kindref="member">volts</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_mV(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value<sp/>/<sp/>std::milli::den);</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1a3c19435046e74281a514965c8ff93b0d" kindref="member">volts</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_uV(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value<sp/>/<sp/>std::micro::den);</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Temperature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1a8ee6f825b6e7475277274772d858c816" kindref="member">celsius</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_C(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1a8ee6f825b6e7475277274772d858c816" kindref="member">celsius</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_F(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>p_value<sp/>=<sp/>(p_value<sp/>-<sp/>32.0L)<sp/>*<sp/>(5.0L<sp/>/<sp/>9.0L);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value);</highlight></codeline>
<codeline lineno="185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1a8ee6f825b6e7475277274772d858c816" kindref="member">celsius</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_K(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value<sp/>-<sp/>273.15L);</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rotational<sp/>Velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1a115c0adadc69503586eff94ce028cd87" kindref="member">rpm</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_rpm(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value);</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1a115c0adadc69503586eff94ce028cd87" kindref="member">rpm</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_deg_per_sec(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value<sp/>/<sp/>6.0L);</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1a69b7f93f81eb80e25fbaefa924af5748" kindref="member">degrees</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_deg(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value);</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Lengths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1a309a799c0b8da9cd99fb5fad7c29208c" kindref="member">meters</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_um(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="220"><highlight class="normal">{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value<sp/>/<sp/>std::micro::den);</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1a309a799c0b8da9cd99fb5fad7c29208c" kindref="member">meters</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_mm(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value<sp/>/<sp/>std::milli::den);</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1a309a799c0b8da9cd99fb5fad7c29208c" kindref="member">meters</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_m(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value);</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1a309a799c0b8da9cd99fb5fad7c29208c" kindref="member">meters</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_km(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value<sp/>*<sp/>std::kilo::num);</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1a309a799c0b8da9cd99fb5fad7c29208c" kindref="member">meters</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_inch(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inch_to_meter<sp/>=<sp/>0.0254L;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value<sp/>*<sp/>inch_to_meter);</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1a309a799c0b8da9cd99fb5fad7c29208c" kindref="member">meters</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_yards(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yard_to_meter<sp/>=<sp/>0.9144L;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value<sp/>*<sp/>yard_to_meter);</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal">[[nodiscard]]<sp/>consteval<sp/><ref refid="namespacehal_1a309a799c0b8da9cd99fb5fad7c29208c" kindref="member">meters</ref><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">_miles(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>p_value)<sp/>noexcept</highlight></codeline>
<codeline lineno="252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>miles_to_meter<sp/>=<sp/>1609.344L;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">float</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(p_value<sp/>*<sp/>miles_to_meter);</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>literals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Make<sp/>user<sp/>defined<sp/>namespaces<sp/>available<sp/>to<sp/>any<sp/>library<sp/>within<sp/>the<sp/>hal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">literals;</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hal</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="libraries/include/libhal/units.hpp"/>
  </compounddef>
</doxygen>
