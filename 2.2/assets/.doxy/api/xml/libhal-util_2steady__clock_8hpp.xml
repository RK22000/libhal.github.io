<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="libhal-util_2steady__clock_8hpp" kind="file" language="C++">
    <compoundname>steady_clock.hpp</compoundname>
    <includes refid="error_8hpp" local="no">libhal/error.hpp</includes>
    <includes refid="libhal_2steady__clock_8hpp" local="no">libhal/steady_clock.hpp</includes>
    <includes refid="libhal_2timeout_8hpp" local="no">libhal/timeout.hpp</includes>
    <includes refid="libhal-util_2units_8hpp" local="yes">units.hpp</includes>
    <includedby refid="mc__x_8hpp" local="no">libraries/include/libhal-rmd/mc_x.hpp</includedby>
    <incdepgraph>
      <node id="4">
        <label>system_error</label>
      </node>
      <node id="18">
        <label>limits</label>
      </node>
      <node id="6">
        <label>cstdint</label>
      </node>
      <node id="12">
        <label>tl/function_ref.hpp</label>
      </node>
      <node id="9">
        <label>libhal/timeout.hpp</label>
        <link refid="libhal_2timeout_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>cmath</label>
      </node>
      <node id="16">
        <label>math.hpp</label>
        <link refid="math_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>libhal/steady_clock.hpp</label>
        <link refid="libhal_2steady__clock_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>third_party/inplace_function.hpp</label>
      </node>
      <node id="10">
        <label>functional.hpp</label>
        <link refid="functional_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>ios</label>
      </node>
      <node id="7">
        <label>units.hpp</label>
        <link refid="libhal_2units_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>boost/leaf.hpp</label>
      </node>
      <node id="13">
        <label>units.hpp</label>
        <link refid="libhal-util_2units_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>libhal/error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>chrono</label>
      </node>
      <node id="17">
        <label>concepts</label>
      </node>
      <node id="1">
        <label>libraries/include/libhal-util/steady_clock.hpp</label>
        <link refid="libhal-util_2steady__clock_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>libraries/include/libhal-rmd/mc_x_rotation_sensor.hpp</label>
        <link refid="mc__x__rotation__sensor_8hpp_source"/>
      </node>
      <node id="5">
        <label>libraries/include/libhal-rmd/mc_x_servo.hpp</label>
        <link refid="mc__x__servo_8hpp_source"/>
      </node>
      <node id="3">
        <label>libraries/include/libhal-rmd/mc_x_motor.hpp</label>
        <link refid="mc__x__motor_8hpp_source"/>
      </node>
      <node id="6">
        <label>libraries/include/libhal-rmd/mc_x_temperature_sensor.hpp</label>
        <link refid="mc__x__temperature__sensor_8hpp_source"/>
      </node>
      <node id="2">
        <label>libraries/include/libhal-rmd/mc_x.hpp</label>
        <link refid="mc__x_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>libraries/include/libhal-util/steady_clock.hpp</label>
        <link refid="libhal-util_2steady__clock_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classhal_1_1steady__clock__timeout" prot="public">hal::steady_clock_timeout</innerclass>
    <innernamespace refid="namespacehal">hal</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2023<sp/>Google<sp/>LLC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libhal/error.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;libhal/steady_clock.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="libhal_2timeout_8hpp" kindref="compound">libhal/timeout.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;units.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">hal<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::uint64_t<sp/>future_deadline(<ref refid="classhal_1_1steady__clock" kindref="compound">hal::steady_clock</ref>&amp;<sp/>p_steady_clock,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hal::time_duration<sp/>p_duration);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="classhal_1_1steady__clock__timeout" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref></highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61" refid="classhal_1_1steady__clock__timeout_1aa5428340db1f1a313a717e12ce776332" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref><sp/><ref refid="classhal_1_1steady__clock__timeout_1aa5428340db1f1a313a717e12ce776332" kindref="member">create</ref>(<ref refid="classhal_1_1steady__clock" kindref="compound">hal::steady_clock</ref>&amp;<sp/>p_steady_clock,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hal::time_duration<sp/>p_duration);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classhal_1_1steady__clock__timeout_1a655aead23885501c6b6746c17d1a7888" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classhal_1_1steady__clock__timeout_1a655aead23885501c6b6746c17d1a7888" kindref="member">steady_clock_timeout</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref>&amp;<sp/>p_timeout)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76" refid="classhal_1_1steady__clock__timeout_1ab03559f82f009c73ed73a2837eec7d6b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref>&amp;<sp/><ref refid="classhal_1_1steady__clock__timeout_1ab03559f82f009c73ed73a2837eec7d6b" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref>&amp;<sp/>p_timeout)<sp/>=</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83" refid="classhal_1_1steady__clock__timeout_1a57db6ef6ac486f0ad22454dd366e0cf9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classhal_1_1steady__clock__timeout_1a57db6ef6ac486f0ad22454dd366e0cf9" kindref="member">steady_clock_timeout</ref>(<ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref>&amp;&amp;<sp/>p_timeout)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90" refid="classhal_1_1steady__clock__timeout_1a43d7123e0bdc9a838b24b0e77f86b50e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref>&amp;<sp/><ref refid="classhal_1_1steady__clock__timeout_1a43d7123e0bdc9a838b24b0e77f86b50e" kindref="member">operator=</ref>(<ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref>&amp;&amp;<sp/>p_timeout)<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="classhal_1_1steady__clock__timeout_1a767b2a8db1fb80db163d23d01f520452" refkind="member"><highlight class="normal"><sp/><sp/>status<sp/><ref refid="classhal_1_1steady__clock__timeout_1a767b2a8db1fb80db163d23d01f520452" kindref="member">operator()</ref>();</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><ref refid="classhal_1_1steady__clock__timeout_1a655aead23885501c6b6746c17d1a7888" kindref="member">steady_clock_timeout</ref>(<ref refid="classhal_1_1steady__clock" kindref="compound">hal::steady_clock</ref>&amp;<sp/>p_steady_clock,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::uint64_t<sp/>p_cycles_until_timeout);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><ref refid="classhal_1_1steady__clock" kindref="compound">hal::steady_clock</ref>*<sp/>m_counter;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>std::uint64_t<sp/>m_cycles_until_timeout<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">};</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref><sp/>create_timeout(<ref refid="classhal_1_1steady__clock" kindref="compound">hal::steady_clock</ref>&amp;<sp/>p_steady_clock,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hal::time_duration<sp/>p_duration);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libhal_2timeout_8hpp_1af5c62735e63bf161eac50062128e1550" kindref="member">delay</ref>(<ref refid="classhal_1_1steady__clock" kindref="compound">hal::steady_clock</ref>&amp;<sp/>p_steady_clock,<sp/>hal::time_duration<sp/>p_duration);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>timeout_generator(<ref refid="classhal_1_1steady__clock" kindref="compound">hal::steady_clock</ref>&amp;<sp/>p_steady_clock)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[&amp;p_steady_clock](hal::time_duration<sp/>p_duration)<sp/>-&gt;<sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>create_timeout(p_steady_clock,<sp/>p_duration);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hal</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="libraries/include/libhal-util/steady_clock.hpp"/>
  </compounddef>
</doxygen>
