<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhal_1_1skip__past" kind="class" language="C++" prot="public">
    <compoundname>hal::skip_past</compoundname>
    <includes refid="serial__coroutines_8hpp" local="no">serial_coroutines.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhal_1_1skip__past_1ab53f19648e5bbbe66d53ecc5fa1514d0" prot="private" static="no" mutable="no">
        <type><ref refid="classhal_1_1serial" kindref="compound">serial</ref> *</type>
        <definition>serial* hal::skip_past::m_serial</definition>
        <argsstring></argsstring>
        <name>m_serial</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/serial_coroutines.hpp" line="102" column="10" bodyfile="libraries/include/libhal-util/serial_coroutines.hpp" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1skip__past_1afb7e9d5d3a14f3052ba06624a3eca824" prot="private" static="no" mutable="no">
        <type>std::span&lt; const <ref refid="namespacehal_1aa21f8ca97410869aabb284a575b2021d" kindref="member">hal::byte</ref> &gt;</type>
        <definition>std::span&lt;const hal::byte&gt; hal::skip_past::m_sequence</definition>
        <argsstring></argsstring>
        <name>m_sequence</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/serial_coroutines.hpp" line="103" column="13" bodyfile="libraries/include/libhal-util/serial_coroutines.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1skip__past_1af89ad155e5063d719e9409f11831f41d" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t hal::skip_past::m_read_limit</definition>
        <argsstring></argsstring>
        <name>m_read_limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/serial_coroutines.hpp" line="104" column="10" bodyfile="libraries/include/libhal-util/serial_coroutines.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1skip__past_1aeb3ac5061edbc3d95bcb061aab6ddbc1" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t hal::skip_past::m_search_index</definition>
        <argsstring></argsstring>
        <name>m_search_index</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/serial_coroutines.hpp" line="105" column="10" bodyfile="libraries/include/libhal-util/serial_coroutines.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhal_1_1skip__past_1a964736764c97423d666948bc84413ad8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hal::skip_past::skip_past</definition>
        <argsstring>(serial &amp;p_serial, std::span&lt; const hal::byte &gt; p_sequence, size_t p_read_limit=32)</argsstring>
        <name>skip_past</name>
        <param>
          <type><ref refid="classhal_1_1serial" kindref="compound">serial</ref> &amp;</type>
          <declname>p_serial</declname>
        </param>
        <param>
          <type>std::span&lt; const <ref refid="namespacehal_1aa21f8ca97410869aabb284a575b2021d" kindref="member">hal::byte</ref> &gt;</type>
          <declname>p_sequence</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>p_read_limit</declname>
          <defval>32</defval>
        </param>
        <briefdescription>
<para>Construct a new skip beyond object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_serial</parametername>
</parameternamelist>
<parameterdescription>
<para>- serial port to skip through </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_sequence</parametername>
</parameternamelist>
<parameterdescription>
<para>- sequence to search for. The lifetime of this data pointed to by this span must outlive this object, or not be used when the lifetime of that data is no longer available. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_read_limit</parametername>
</parameternamelist>
<parameterdescription>
<para>- the maximum number read attempts from the port before returning. A value 0 will result in no reads from the serial port. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/serial_coroutines.hpp" line="49" column="3" bodyfile="libraries/include/libhal-util/serial_coroutines.hpp" bodystart="49" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1skip__past_1a3a7b5450276eb6db97240cda47572325" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>result&lt; <ref refid="namespacehal_1aadfba20b87ce09f21cc88f7c49e1bd60" kindref="member">work_state</ref> &gt;</type>
        <definition>result&lt;work_state&gt; hal::skip_past::operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <briefdescription>
<para>skip data from the serial port until the sequence is reached. </para>
        </briefdescription>
        <detaileddescription>
<para>This function will return if the sequence is found or if there are no more bytes in the serial port.</para>
<para>Call this function again to resume reading from the port.</para>
<para><simplesect kind="return"><para>result&lt;work_state&gt; - work_state::in_progress if the sequence hasn&apos;t been met and the buffer still has space. </para>
</simplesect>
<simplesect kind="return"><para>result&lt;work_state&gt; - work_state::finished if the sequence was found before the buffer was filled completely. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/serial_coroutines.hpp" line="71" column="10" bodyfile="libraries/include/libhal-util/serial_coroutines.hpp" bodystart="71" bodyend="99"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Discard received bytes until the sequence is found. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/include/libhal-util/serial_coroutines.hpp" line="36" column="1" bodyfile="libraries/include/libhal-util/serial_coroutines.hpp" bodystart="37" bodyend="106"/>
    <listofallmembers>
      <member refid="classhal_1_1skip__past_1af89ad155e5063d719e9409f11831f41d" prot="private" virt="non-virtual"><scope>hal::skip_past</scope><name>m_read_limit</name></member>
      <member refid="classhal_1_1skip__past_1aeb3ac5061edbc3d95bcb061aab6ddbc1" prot="private" virt="non-virtual"><scope>hal::skip_past</scope><name>m_search_index</name></member>
      <member refid="classhal_1_1skip__past_1afb7e9d5d3a14f3052ba06624a3eca824" prot="private" virt="non-virtual"><scope>hal::skip_past</scope><name>m_sequence</name></member>
      <member refid="classhal_1_1skip__past_1ab53f19648e5bbbe66d53ecc5fa1514d0" prot="private" virt="non-virtual"><scope>hal::skip_past</scope><name>m_serial</name></member>
      <member refid="classhal_1_1skip__past_1a3a7b5450276eb6db97240cda47572325" prot="public" virt="non-virtual"><scope>hal::skip_past</scope><name>operator()</name></member>
      <member refid="classhal_1_1skip__past_1a964736764c97423d666948bc84413ad8" prot="public" virt="non-virtual"><scope>hal::skip_past</scope><name>skip_past</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
