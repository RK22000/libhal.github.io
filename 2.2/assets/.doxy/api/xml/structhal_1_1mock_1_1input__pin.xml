<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structhal_1_1mock_1_1input__pin" kind="struct" language="C++" prot="public">
    <compoundname>hal::mock::input_pin</compoundname>
    <basecompoundref refid="classhal_1_1input__pin" prot="public" virt="non-virtual">hal::input_pin</basecompoundref>
    <includes refid="libhal-mock_2input__pin_8hpp" local="no">input_pin.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structhal_1_1mock_1_1input__pin_1aa63048c67ea86b0cda9324e8166e56aa" prot="public" static="no" mutable="no">
        <type><ref refid="classhal_1_1spy__handler" kindref="compound">spy_handler</ref>&lt; <ref refid="structhal_1_1input__pin_1_1settings" kindref="compound">settings</ref> &gt;</type>
        <definition>spy_handler&lt;settings&gt; hal::mock::input_pin::spy_configure</definition>
        <argsstring></argsstring>
        <name>spy_configure</name>
        <briefdescription>
<para>Spy handler for embed:input_pin::<ref refid="classhal_1_1input__pin_1ac61d7c871be05f7459ecad05c1729188" kindref="member">configure()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-mock/input_pin.hpp" line="40" column="15" bodyfile="libraries/include/libhal-mock/input_pin.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structhal_1_1mock_1_1input__pin_1a2f5df611f61427560e897b0b3d2ecb8c" prot="private" static="no" mutable="no">
        <type>std::queue&lt; <ref refid="structhal_1_1input__pin_1_1level__t" kindref="compound">level_t</ref> &gt;</type>
        <definition>std::queue&lt;level_t&gt; hal::mock::input_pin::m_levels</definition>
        <argsstring></argsstring>
        <name>m_levels</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-mock/input_pin.hpp" line="70" column="14" bodyfile="libraries/include/libhal-mock/input_pin.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structhal_1_1mock_1_1input__pin_1a3b21009c4c58b20b27e2d2a4cc72947e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hal::mock::input_pin::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
<para>Reset spy information for <ref refid="classhal_1_1input__pin_1ac61d7c871be05f7459ecad05c1729188" kindref="member">configure()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-mock/input_pin.hpp" line="34" column="8" bodyfile="libraries/include/libhal-mock/input_pin.hpp" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="structhal_1_1mock_1_1input__pin_1a176eea61776617803de2c16afac70851" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hal::mock::input_pin::set</definition>
        <argsstring>(std::queue&lt; level_t &gt; &amp;p_levels)</argsstring>
        <name>set</name>
        <param>
          <type>std::queue&lt; <ref refid="structhal_1_1input__pin_1_1level__t" kindref="compound">level_t</ref> &gt; &amp;</type>
          <declname>p_levels</declname>
        </param>
        <briefdescription>
<para>Queues the active levels to be returned for levels() </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_levels</parametername>
</parameternamelist>
<parameterdescription>
<para>- queue of actives levels </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-mock/input_pin.hpp" line="47" column="8" bodyfile="libraries/include/libhal-mock/input_pin.hpp" bodystart="47" bodyend="50"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structhal_1_1mock_1_1input__pin_1a02e5474894bd45e76fcb0adc00503f74" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>status</type>
        <definition>status hal::mock::input_pin::driver_configure</definition>
        <argsstring>(const settings &amp;p_settings) override</argsstring>
        <name>driver_configure</name>
        <reimplements refid="classhal_1_1input__pin_1aec92d467a73ecdce76cd219601126d22">driver_configure</reimplements>
        <param>
          <type>const <ref refid="structhal_1_1input__pin_1_1settings" kindref="compound">settings</ref> &amp;</type>
          <declname>p_settings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-mock/input_pin.hpp" line="53" column="10" bodyfile="libraries/include/libhal-mock/input_pin.hpp" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="structhal_1_1mock_1_1input__pin_1a9b5a25a13f49b301efc5133b031f66e4" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>result&lt; <ref refid="structhal_1_1input__pin_1_1level__t" kindref="compound">level_t</ref> &gt;</type>
        <definition>result&lt;level_t&gt; hal::mock::input_pin::driver_level</definition>
        <argsstring>() override</argsstring>
        <name>driver_level</name>
        <reimplements refid="classhal_1_1input__pin_1a8a50240d3fc6510aa541e2b4ce1148a9">driver_level</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-mock/input_pin.hpp" line="57" column="10" bodyfile="libraries/include/libhal-mock/input_pin.hpp" bodystart="57" bodyend="68"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>mock <ref refid="structhal_1_1mock_1_1input__pin" kindref="compound">input_pin</ref> implementation for use in unit tests and simulations. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>hal::input_pin</label>
        <link refid="classhal_1_1input__pin"/>
      </node>
      <node id="1">
        <label>hal::mock::input_pin</label>
        <link refid="structhal_1_1mock_1_1input__pin"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>hal::spy_handler&lt; settings &gt;</label>
        <link refid="classhal_1_1spy__handler"/>
      </node>
      <node id="2">
        <label>hal::input_pin</label>
        <link refid="classhal_1_1input__pin"/>
      </node>
      <node id="1">
        <label>hal::mock::input_pin</label>
        <link refid="structhal_1_1mock_1_1input__pin"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>spy_configure</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/include/libhal-mock/input_pin.hpp" line="28" column="1" bodyfile="libraries/include/libhal-mock/input_pin.hpp" bodystart="29" bodyend="71"/>
    <listofallmembers>
      <member refid="classhal_1_1input__pin_1ac61d7c871be05f7459ecad05c1729188" prot="public" virt="non-virtual"><scope>hal::mock::input_pin</scope><name>configure</name></member>
      <member refid="structhal_1_1mock_1_1input__pin_1a02e5474894bd45e76fcb0adc00503f74" prot="private" virt="virtual"><scope>hal::mock::input_pin</scope><name>driver_configure</name></member>
      <member refid="structhal_1_1mock_1_1input__pin_1a9b5a25a13f49b301efc5133b031f66e4" prot="private" virt="virtual"><scope>hal::mock::input_pin</scope><name>driver_level</name></member>
      <member refid="classhal_1_1input__pin_1a757d49cf83e37348236fcac52d2a39d9" prot="public" virt="non-virtual"><scope>hal::mock::input_pin</scope><name>level</name></member>
      <member refid="structhal_1_1mock_1_1input__pin_1a2f5df611f61427560e897b0b3d2ecb8c" prot="private" virt="non-virtual"><scope>hal::mock::input_pin</scope><name>m_levels</name></member>
      <member refid="structhal_1_1mock_1_1input__pin_1a3b21009c4c58b20b27e2d2a4cc72947e" prot="public" virt="non-virtual"><scope>hal::mock::input_pin</scope><name>reset</name></member>
      <member refid="structhal_1_1mock_1_1input__pin_1a176eea61776617803de2c16afac70851" prot="public" virt="non-virtual"><scope>hal::mock::input_pin</scope><name>set</name></member>
      <member refid="structhal_1_1mock_1_1input__pin_1aa63048c67ea86b0cda9324e8166e56aa" prot="public" virt="non-virtual"><scope>hal::mock::input_pin</scope><name>spy_configure</name></member>
      <member refid="classhal_1_1input__pin_1a3880caa73ba24653823e2d8930173103" prot="public" virt="virtual"><scope>hal::mock::input_pin</scope><name>~input_pin</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
