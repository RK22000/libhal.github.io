<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhal_1_1stream__fill__upto" kind="class" language="C++" prot="public">
    <compoundname>hal::stream_fill_upto</compoundname>
    <includes refid="streams_8hpp" local="no">streams.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhal_1_1stream__fill__upto_1a3d02e49bb1411d689122d6355d0b29c7" prot="private" static="no" mutable="no">
        <type>std::span&lt; const <ref refid="namespacehal_1aa21f8ca97410869aabb284a575b2021d" kindref="member">hal::byte</ref> &gt;</type>
        <definition>std::span&lt;const hal::byte&gt; hal::stream_fill_upto::m_sequence</definition>
        <argsstring></argsstring>
        <name>m_sequence</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/streams.hpp" line="114" column="13" bodyfile="libraries/include/libhal-util/streams.hpp" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1stream__fill__upto_1ac23ed549d7a09ccda881f3defd3fd7e2" prot="private" static="no" mutable="no">
        <type>std::span&lt; <ref refid="namespacehal_1aa21f8ca97410869aabb284a575b2021d" kindref="member">hal::byte</ref> &gt;</type>
        <definition>std::span&lt;hal::byte&gt; hal::stream_fill_upto::m_buffer</definition>
        <argsstring></argsstring>
        <name>m_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/streams.hpp" line="115" column="13" bodyfile="libraries/include/libhal-util/streams.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1stream__fill__upto_1a8d0f94e8cee593d73e88046158613dfc" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t hal::stream_fill_upto::m_fill_amount</definition>
        <argsstring></argsstring>
        <name>m_fill_amount</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/streams.hpp" line="116" column="10" bodyfile="libraries/include/libhal-util/streams.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1stream__fill__upto_1a4be0084ec41afd02b7f3a3f924b8ccb0" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t hal::stream_fill_upto::m_search_index</definition>
        <argsstring></argsstring>
        <name>m_search_index</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/streams.hpp" line="117" column="10" bodyfile="libraries/include/libhal-util/streams.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhal_1_1stream__fill__upto_1a5236e2cd2330847248eaa39f27c27496" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hal::stream_fill_upto::stream_fill_upto</definition>
        <argsstring>(std::span&lt; const hal::byte &gt; p_sequence, std::span&lt; hal::byte &gt; p_buffer)</argsstring>
        <name>stream_fill_upto</name>
        <param>
          <type>std::span&lt; const <ref refid="namespacehal_1aa21f8ca97410869aabb284a575b2021d" kindref="member">hal::byte</ref> &gt;</type>
          <declname>p_sequence</declname>
        </param>
        <param>
          <type>std::span&lt; <ref refid="namespacehal_1aa21f8ca97410869aabb284a575b2021d" kindref="member">hal::byte</ref> &gt;</type>
          <declname>p_buffer</declname>
        </param>
        <briefdescription>
<para>Construct a new fill upto object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_sequence</parametername>
</parameternamelist>
<parameterdescription>
<para>- sequence to search for. The lifetime of this data pointed to by this span must outlive this object, or not be used when the lifetime of that data is no longer available. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>- buffer to fill data into </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/streams.hpp" line="101" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1stream__fill__upto_1a68bfde9a35698a10387001591aedb99c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacehal_1aadfba20b87ce09f21cc88f7c49e1bd60" kindref="member">work_state</ref></type>
        <definition>work_state hal::stream_fill_upto::state</definition>
        <argsstring>()</argsstring>
        <name>state</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/streams.hpp" line="108" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1stream__fill__upto_1a60155958941a7e21f58ccb0398925958" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::span&lt; <ref refid="namespacehal_1aa21f8ca97410869aabb284a575b2021d" kindref="member">hal::byte</ref> &gt;</type>
        <definition>std::span&lt;hal::byte&gt; hal::stream_fill_upto::span</definition>
        <argsstring>()</argsstring>
        <name>span</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/streams.hpp" line="110" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1stream__fill__upto_1ab9aa0c507dbc2b77d8b5136e36d65b15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::span&lt; <ref refid="namespacehal_1aa21f8ca97410869aabb284a575b2021d" kindref="member">hal::byte</ref> &gt;</type>
        <definition>std::span&lt;hal::byte&gt; hal::stream_fill_upto::unfilled</definition>
        <argsstring>()</argsstring>
        <name>unfilled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/streams.hpp" line="111" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classhal_1_1stream__fill__upto_1a22abc867345ef5ba5ae7df32d3e71855" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::span&lt; const <ref refid="namespacehal_1aa21f8ca97410869aabb284a575b2021d" kindref="member">hal::byte</ref> &gt;</type>
        <definition>std::span&lt;const hal::byte&gt; operator|</definition>
        <argsstring>(const std::span&lt; const hal::byte &gt; &amp;p_input_data, stream_fill_upto &amp;p_self)</argsstring>
        <name>operator|</name>
        <param>
          <type>const std::span&lt; const <ref refid="namespacehal_1aa21f8ca97410869aabb284a575b2021d" kindref="member">hal::byte</ref> &gt; &amp;</type>
          <declname>p_input_data</declname>
        </param>
        <param>
          <type><ref refid="classhal_1_1stream__fill__upto" kindref="compound">stream_fill_upto</ref> &amp;</type>
          <declname>p_self</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/streams.hpp" line="104" column="20"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Discard received bytes until the sequence is found. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/include/libhal-util/streams.hpp" line="90" column="1" bodyfile="libraries/include/libhal-util/streams.hpp" bodystart="91" bodyend="118"/>
    <listofallmembers>
      <member refid="classhal_1_1stream__fill__upto_1ac23ed549d7a09ccda881f3defd3fd7e2" prot="private" virt="non-virtual"><scope>hal::stream_fill_upto</scope><name>m_buffer</name></member>
      <member refid="classhal_1_1stream__fill__upto_1a8d0f94e8cee593d73e88046158613dfc" prot="private" virt="non-virtual"><scope>hal::stream_fill_upto</scope><name>m_fill_amount</name></member>
      <member refid="classhal_1_1stream__fill__upto_1a4be0084ec41afd02b7f3a3f924b8ccb0" prot="private" virt="non-virtual"><scope>hal::stream_fill_upto</scope><name>m_search_index</name></member>
      <member refid="classhal_1_1stream__fill__upto_1a3d02e49bb1411d689122d6355d0b29c7" prot="private" virt="non-virtual"><scope>hal::stream_fill_upto</scope><name>m_sequence</name></member>
      <member refid="classhal_1_1stream__fill__upto_1a22abc867345ef5ba5ae7df32d3e71855" prot="public" virt="non-virtual"><scope>hal::stream_fill_upto</scope><name>operator|</name></member>
      <member refid="classhal_1_1stream__fill__upto_1a60155958941a7e21f58ccb0398925958" prot="public" virt="non-virtual"><scope>hal::stream_fill_upto</scope><name>span</name></member>
      <member refid="classhal_1_1stream__fill__upto_1a68bfde9a35698a10387001591aedb99c" prot="public" virt="non-virtual"><scope>hal::stream_fill_upto</scope><name>state</name></member>
      <member refid="classhal_1_1stream__fill__upto_1a5236e2cd2330847248eaa39f27c27496" prot="public" virt="non-virtual"><scope>hal::stream_fill_upto</scope><name>stream_fill_upto</name></member>
      <member refid="classhal_1_1stream__fill__upto_1ab9aa0c507dbc2b77d8b5136e36d65b15" prot="public" virt="non-virtual"><scope>hal::stream_fill_upto</scope><name>unfilled</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
