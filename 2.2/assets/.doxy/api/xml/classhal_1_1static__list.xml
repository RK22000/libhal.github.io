<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhal_1_1static__list" kind="class" language="C++" prot="public">
    <compoundname>hal::static_list</compoundname>
    <includes refid="static__list_8hpp" local="no">static_list.hpp</includes>
    <innerclass refid="classhal_1_1static__list_1_1item" prot="public">hal::static_list::item</innerclass>
    <innerclass refid="classhal_1_1static__list_1_1item__iterator" prot="public">hal::static_list::item_iterator</innerclass>
    <templateparamlist>
      <param>
        <type>class Object</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classhal_1_1static__list_1ad2a7d013854a7d6ecd892d1fbe44cc20" prot="public" static="no">
        <type>Object</type>
        <definition>using hal::static_list&lt; Object &gt;::value_type =  Object</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="288" column="3" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhal_1_1static__list_1a3b54a86841ede23a4461da04f1b40b32" prot="public" static="no">
        <type>Object &amp;</type>
        <definition>using hal::static_list&lt; Object &gt;::reference =  Object&amp;</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="289" column="3" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhal_1_1static__list_1ab13eafc16bc8e7917c9a3642d657cc96" prot="public" static="no">
        <type>const Object &amp;</type>
        <definition>using hal::static_list&lt; Object &gt;::const_reference =  const Object&amp;</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="290" column="3" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhal_1_1static__list_1ac6c45b54ddd6543138b65aeaab7837c3" prot="public" static="no">
        <type><ref refid="classhal_1_1static__list_1_1item__iterator" kindref="compound">item_iterator</ref></type>
        <definition>using hal::static_list&lt; Object &gt;::iterator =  item_iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="291" column="3" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="291" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhal_1_1static__list_1a87d88b360f5a3880006f0e8f43848b48" prot="public" static="no">
        <type>const <ref refid="classhal_1_1static__list_1_1item__iterator" kindref="compound">item_iterator</ref></type>
        <definition>using hal::static_list&lt; Object &gt;::const_iterator =  const item_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="292" column="3" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhal_1_1static__list_1a3dd7d078bf4ee2ad6cdd79ad3c5fb0ff" prot="public" static="no">
        <type>std::ptrdiff_t</type>
        <definition>using hal::static_list&lt; Object &gt;::difference_type =  std::ptrdiff_t</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="293" column="3" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhal_1_1static__list_1aa28be3f0b58c9507edf3e7a2f9eb19eb" prot="public" static="no">
        <type>std::size_t</type>
        <definition>using hal::static_list&lt; Object &gt;::size_type =  std::size_t</definition>
        <argsstring></argsstring>
        <name>size_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="294" column="3" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhal_1_1static__list_1a3eb7dab98b375514df3a6733b8698882" prot="public" static="no">
        <type>value_type *</type>
        <definition>using hal::static_list&lt; Object &gt;::pointer =  value_type*</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="295" column="3" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classhal_1_1static__list_1af97ffc5cafc2d751f0af05c42f1dd550" prot="public" static="no">
        <type>const value_type *</type>
        <definition>using hal::static_list&lt; Object &gt;::const_pointer =  const value_type*</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="296" column="3" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="296" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhal_1_1static__list_1ace0bdf9b799bc93c2c0ae77432c1abcd" prot="private" static="no" mutable="no">
        <type><ref refid="classhal_1_1static__list_1_1item" kindref="compound">item</ref> *</type>
        <definition>item* hal::static_list&lt; Object &gt;::m_head</definition>
        <argsstring></argsstring>
        <name>m_head</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="420" column="8" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="420" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1static__list_1a724a63c46638db4a76d9481a611af356" prot="private" static="no" mutable="no">
        <type><ref refid="classhal_1_1static__list_1_1item" kindref="compound">item</ref> *</type>
        <definition>item* hal::static_list&lt; Object &gt;::m_tail</definition>
        <argsstring></argsstring>
        <name>m_tail</name>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="421" column="8" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1static__list_1a75cfc3d0cfdaf3574ff3bb88e684822e" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t hal::static_list&lt; Object &gt;::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="422" column="15" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="422" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhal_1_1static__list_1a1bd7fa13fb11f684ee165787bf1a8fd7" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hal::static_list&lt; Object &gt;::static_list</definition>
        <argsstring>()</argsstring>
        <name>static_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="298" column="13" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="298" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1static__list_1adae0b1d3be93bc4f93fa2735e3474eb6" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr <ref refid="classhal_1_1static__list" kindref="compound">static_list</ref> &amp;</type>
        <definition>constexpr static_list&amp; hal::static_list&lt; Object &gt;::operator=</definition>
        <argsstring>(static_list &amp;p_other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classhal_1_1static__list" kindref="compound">static_list</ref> &amp;</type>
          <declname>p_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="302" column="25"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1static__list_1aea436fddf39ba8d614aecb4d5257cef3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hal::static_list&lt; Object &gt;::static_list</definition>
        <argsstring>(static_list &amp;p_other)=delete</argsstring>
        <name>static_list</name>
        <param>
          <type><ref refid="classhal_1_1static__list" kindref="compound">static_list</ref> &amp;</type>
          <declname>p_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="303" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1static__list_1ac65d8468d71de4b36ee96835994ff24f" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classhal_1_1static__list" kindref="compound">static_list</ref> &amp;</type>
        <definition>constexpr static_list&amp; hal::static_list&lt; Object &gt;::operator=</definition>
        <argsstring>(static_list &amp;&amp;p_other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classhal_1_1static__list" kindref="compound">static_list</ref> &amp;&amp;</type>
          <declname>p_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="304" column="25" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="304" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1static__list_1ace565db0baa0a12e58379a58323d23ce" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hal::static_list&lt; Object &gt;::static_list</definition>
        <argsstring>(static_list &amp;&amp;p_other)</argsstring>
        <name>static_list</name>
        <param>
          <type><ref refid="classhal_1_1static__list" kindref="compound">static_list</ref> &amp;&amp;</type>
          <declname>p_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="323" column="13" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="323" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1static__list_1a843188e3908e995ee8e8b2d061c9ca33" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classhal_1_1static__list_1_1item" kindref="compound">item</ref></type>
        <definition>constexpr item hal::static_list&lt; Object &gt;::push_back</definition>
        <argsstring>()</argsstring>
        <name>push_back</name>
        <briefdescription>
<para>Add default constructed item to the end of the list. </para>
        </briefdescription>
        <detaileddescription>
<para>Only works for Object&apos;s that support default construction.</para>
<para><simplesect kind="return"><para>constexpr item - item with default constructed value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="337" column="3" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="337" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1static__list_1a80cae270410a163f010d8dfb4cfcaf6b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classhal_1_1static__list_1_1item" kindref="compound">item</ref></type>
        <definition>constexpr item hal::static_list&lt; Object &gt;::push_back</definition>
        <argsstring>(const Object &amp;p_value)</argsstring>
        <name>push_back</name>
        <param>
          <type>const Object &amp;</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
<para>Append item to the end of the static list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_value</parametername>
</parameternamelist>
<parameterdescription>
<para>- value of node </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>constexpr item - item with constructed value based on the input </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="350" column="3" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="350" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1static__list_1a0d072a33b23d70078c280203ecb9179a" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="classhal_1_1static__list_1_1item" kindref="compound">item</ref></type>
        <definition>constexpr item hal::static_list&lt; Object &gt;::push_back</definition>
        <argsstring>(Object &amp;&amp;p_value)</argsstring>
        <name>push_back</name>
        <param>
          <type>Object &amp;&amp;</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
<para>Append item to the end of the static list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_value</parametername>
</parameternamelist>
<parameterdescription>
<para>- value of node </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>constexpr item - item with constructed value based on the input </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="363" column="3" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="363" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1static__list_1aadd3f09548f68bba9309ac18b16b2ded" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr bool</type>
        <definition>constexpr bool hal::static_list&lt; Object &gt;::empty</definition>
        <argsstring>()</argsstring>
        <name>empty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="368" column="18" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="368" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1static__list_1aac83b7e1e4a545543dcac34118be30d3" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hal::static_list&lt; Object &gt;::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="373" column="18" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="373" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1static__list_1a461c253a2de278cb0b17a6802db78a5f" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hal::static_list&lt; Object &gt;::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="378" column="18" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="378" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1static__list_1ad77ae748a8aa1f838bf4b0b0fcf2cb54" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hal::static_list&lt; Object &gt;::cbegin</definition>
        <argsstring>() const</argsstring>
        <name>cbegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="383" column="18" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="383" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1static__list_1aef75cd64ca646ce856b78f34906bb37b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hal::static_list&lt; Object &gt;::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="388" column="18" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="388" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1static__list_1a625b0a7871182f3ea5a66a1cb79df1a2" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hal::static_list&lt; Object &gt;::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="393" column="18" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="393" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1static__list_1ad79002ddc462ff3824b1aaf962e52a17" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto hal::static_list&lt; Object &gt;::cend</definition>
        <argsstring>() const</argsstring>
        <name>cend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="398" column="18" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="398" bodyend="401"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1static__list_1aa187228fc61dcbe66defa2ef02e1b775" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr std::size_t</type>
        <definition>constexpr std::size_t hal::static_list&lt; Object &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="403" column="25" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="403" bodyend="406"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1static__list_1a746ee3089850d955a091cafbef5554d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hal::static_list&lt; Object &gt;::~static_list</definition>
        <argsstring>()</argsstring>
        <name>~static_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/static_list.hpp" line="408" column="3" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="408" bodyend="417"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classhal_1_1static__list" kindref="compound">static_list</ref> is a non-owning non-allocating doubly linked list container with O(1) memory utilization. </para>
    </briefdescription>
    <detaileddescription>
<para>Items in the list cannot be destroyed by</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Object</parametername>
</parameternamelist>
<parameterdescription>
<para>- The type of the elements. Object must be &quot;MoveAssignable&quot; and &quot;MoveConstructible&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="libraries/include/libhal-util/static_list.hpp" line="33" column="1" bodyfile="libraries/include/libhal-util/static_list.hpp" bodystart="34" bodyend="423"/>
    <listofallmembers>
      <member refid="classhal_1_1static__list_1aac83b7e1e4a545543dcac34118be30d3" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>begin</name></member>
      <member refid="classhal_1_1static__list_1a461c253a2de278cb0b17a6802db78a5f" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>begin</name></member>
      <member refid="classhal_1_1static__list_1ad77ae748a8aa1f838bf4b0b0fcf2cb54" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>cbegin</name></member>
      <member refid="classhal_1_1static__list_1ad79002ddc462ff3824b1aaf962e52a17" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>cend</name></member>
      <member refid="classhal_1_1static__list_1a87d88b360f5a3880006f0e8f43848b48" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>const_iterator</name></member>
      <member refid="classhal_1_1static__list_1af97ffc5cafc2d751f0af05c42f1dd550" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>const_pointer</name></member>
      <member refid="classhal_1_1static__list_1ab13eafc16bc8e7917c9a3642d657cc96" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>const_reference</name></member>
      <member refid="classhal_1_1static__list_1a3dd7d078bf4ee2ad6cdd79ad3c5fb0ff" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>difference_type</name></member>
      <member refid="classhal_1_1static__list_1aadd3f09548f68bba9309ac18b16b2ded" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>empty</name></member>
      <member refid="classhal_1_1static__list_1aef75cd64ca646ce856b78f34906bb37b" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>end</name></member>
      <member refid="classhal_1_1static__list_1a625b0a7871182f3ea5a66a1cb79df1a2" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>end</name></member>
      <member refid="classhal_1_1static__list_1ac6c45b54ddd6543138b65aeaab7837c3" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>iterator</name></member>
      <member refid="classhal_1_1static__list_1ace0bdf9b799bc93c2c0ae77432c1abcd" prot="private" virt="non-virtual"><scope>hal::static_list</scope><name>m_head</name></member>
      <member refid="classhal_1_1static__list_1a75cfc3d0cfdaf3574ff3bb88e684822e" prot="private" virt="non-virtual"><scope>hal::static_list</scope><name>m_size</name></member>
      <member refid="classhal_1_1static__list_1a724a63c46638db4a76d9481a611af356" prot="private" virt="non-virtual"><scope>hal::static_list</scope><name>m_tail</name></member>
      <member refid="classhal_1_1static__list_1adae0b1d3be93bc4f93fa2735e3474eb6" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>operator=</name></member>
      <member refid="classhal_1_1static__list_1ac65d8468d71de4b36ee96835994ff24f" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>operator=</name></member>
      <member refid="classhal_1_1static__list_1a3eb7dab98b375514df3a6733b8698882" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>pointer</name></member>
      <member refid="classhal_1_1static__list_1a843188e3908e995ee8e8b2d061c9ca33" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>push_back</name></member>
      <member refid="classhal_1_1static__list_1a80cae270410a163f010d8dfb4cfcaf6b" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>push_back</name></member>
      <member refid="classhal_1_1static__list_1a0d072a33b23d70078c280203ecb9179a" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>push_back</name></member>
      <member refid="classhal_1_1static__list_1a3b54a86841ede23a4461da04f1b40b32" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>reference</name></member>
      <member refid="classhal_1_1static__list_1aa187228fc61dcbe66defa2ef02e1b775" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>size</name></member>
      <member refid="classhal_1_1static__list_1aa28be3f0b58c9507edf3e7a2f9eb19eb" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>size_type</name></member>
      <member refid="classhal_1_1static__list_1a1bd7fa13fb11f684ee165787bf1a8fd7" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>static_list</name></member>
      <member refid="classhal_1_1static__list_1aea436fddf39ba8d614aecb4d5257cef3" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>static_list</name></member>
      <member refid="classhal_1_1static__list_1ace565db0baa0a12e58379a58323d23ce" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>static_list</name></member>
      <member refid="classhal_1_1static__list_1ad2a7d013854a7d6ecd892d1fbe44cc20" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>value_type</name></member>
      <member refid="classhal_1_1static__list_1a746ee3089850d955a091cafbef5554d2" prot="public" virt="non-virtual"><scope>hal::static_list</scope><name>~static_list</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
