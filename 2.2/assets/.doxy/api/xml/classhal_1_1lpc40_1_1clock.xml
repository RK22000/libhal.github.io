<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhal_1_1lpc40_1_1clock" kind="class" language="C++" prot="public">
    <compoundname>hal::lpc40::clock</compoundname>
    <includes refid="libhal-lpc40_2clock_8hpp" local="no">clock.hpp</includes>
    <innerclass refid="structhal_1_1lpc40_1_1clock_1_1configuration" prot="public">hal::lpc40::clock::configuration</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classhal_1_1lpc40_1_1clock_1aaa8cb771d8cb9cd77f4aefbefa5a93e4" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>usb_clock_source</name>
        <enumvalue id="classhal_1_1lpc40_1_1clock_1aaa8cb771d8cb9cd77f4aefbefa5a93e4af55832d9c36b9732cd4a625a7146f00b" prot="public">
          <name>system_clock</name>
          <initializer>= 0b00</initializer>
          <briefdescription>
<para>Use IRC or external oscillator directly. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhal_1_1lpc40_1_1clock_1aaa8cb771d8cb9cd77f4aefbefa5a93e4acb0aec9c320ff617c231117260871eb5" prot="public">
          <name>pll0</name>
          <initializer>= 0b01</initializer>
          <briefdescription>
<para>Use PLL0 main PLL as the clock source. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhal_1_1lpc40_1_1clock_1aaa8cb771d8cb9cd77f4aefbefa5a93e4aaaee8712bcb9a79dd2b35abc66d0af2d" prot="public">
          <name>pll1</name>
          <initializer>= 0b10</initializer>
          <briefdescription>
<para>Use PLL1 alternative PLL as the clock source. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>USB oscillator source constants (not used) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/clock.hpp" line="42" column="3" bodyfile="libraries/include/libhal-lpc40/clock.hpp" bodystart="43" bodyend="50"/>
      </memberdef>
      <memberdef kind="enum" id="classhal_1_1lpc40_1_1clock_1aedf62732ac08533174a2c14cc4870214" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>usb_divider</name>
        <enumvalue id="classhal_1_1lpc40_1_1clock_1aedf62732ac08533174a2c14cc4870214aea3ede80028e8a1fd9650f8d0c979650" prot="public">
          <name>divide_by1</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhal_1_1lpc40_1_1clock_1aedf62732ac08533174a2c14cc4870214a3654cdc4dd91f44f6403870019c7a3b9" prot="public">
          <name>divide_by2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhal_1_1lpc40_1_1clock_1aedf62732ac08533174a2c14cc4870214a0dd2a3a22403269d9079119ef2e1599d" prot="public">
          <name>divide_by3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhal_1_1lpc40_1_1clock_1aedf62732ac08533174a2c14cc4870214a74fcd7c5e6602418d200c2501ac52a48" prot="public">
          <name>divide_by4</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>USB Clock divider constants. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/clock.hpp" line="53" column="3" bodyfile="libraries/include/libhal-lpc40/clock.hpp" bodystart="54" bodyend="59"/>
      </memberdef>
      <memberdef kind="enum" id="classhal_1_1lpc40_1_1clock_1a4328fd8500767c0aaa140a7f21dcc0a1" prot="public" static="no" strong="yes">
        <type>uint8_t</type>
        <name>spifi_clock_source</name>
        <enumvalue id="classhal_1_1lpc40_1_1clock_1a4328fd8500767c0aaa140a7f21dcc0a1af55832d9c36b9732cd4a625a7146f00b" prot="public">
          <name>system_clock</name>
          <initializer>= 0b00</initializer>
          <briefdescription>
<para>Use IRC or external oscillator directly. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhal_1_1lpc40_1_1clock_1a4328fd8500767c0aaa140a7f21dcc0a1acb0aec9c320ff617c231117260871eb5" prot="public">
          <name>pll0</name>
          <initializer>= 0b01</initializer>
          <briefdescription>
<para>Use PLL0 main PLL as the clock source. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhal_1_1lpc40_1_1clock_1a4328fd8500767c0aaa140a7f21dcc0a1aaaee8712bcb9a79dd2b35abc66d0af2d" prot="public">
          <name>pll1</name>
          <initializer>= 0b10</initializer>
          <briefdescription>
<para>Use PLL1 alternative PLL as the clock source. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>spifi clock options </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/clock.hpp" line="62" column="3" bodyfile="libraries/include/libhal-lpc40/clock.hpp" bodystart="63" bodyend="70"/>
      </memberdef>
      <memberdef kind="enum" id="classhal_1_1lpc40_1_1clock_1ad93b41676e24c9aedd802c905eecd314" prot="public" static="no" strong="yes">
        <type>uint32_t</type>
        <name>flash_configuration</name>
        <enumvalue id="classhal_1_1lpc40_1_1clock_1ad93b41676e24c9aedd802c905eecd314afecd6a930756d9e2293295c5830ff603" prot="public">
          <name>clock1</name>
          <initializer>= 0b0000 &lt;&lt; 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Flash accesses use 1 CPU clock. Use for up to 20 MHz CPU clock with power boost off. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhal_1_1lpc40_1_1clock_1ad93b41676e24c9aedd802c905eecd314ace593033990cb529467f17ef0b7980db" prot="public">
          <name>clock2</name>
          <initializer>= 0b0001 &lt;&lt; 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Flash accesses use 2 CPU clocks. Use for up to 40 MHz CPU clock with power boost off. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhal_1_1lpc40_1_1clock_1ad93b41676e24c9aedd802c905eecd314a16731085b5ee22a3e3eb61e64183e959" prot="public">
          <name>clock3</name>
          <initializer>= 0b0010 &lt;&lt; 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Flash accesses use 3 CPU clocks. Use for up to 60 MHz CPU clock with power boost off. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhal_1_1lpc40_1_1clock_1ad93b41676e24c9aedd802c905eecd314a666557ac0f3eb96a6e7facdb2390851c" prot="public">
          <name>clock4</name>
          <initializer>= 0b0011 &lt;&lt; 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Flash accesses use 4 CPU clocks. Use for up to 80 MHz CPU clock with power boost off. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhal_1_1lpc40_1_1clock_1ad93b41676e24c9aedd802c905eecd314a4220bcc03b4c15977afc606a6cab3180" prot="public">
          <name>clock5</name>
          <initializer>= 0b0100 &lt;&lt; 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Flash accesses use 5 CPU clocks. Use for up to 100 MHz CPU clock with power boost off. If CPU clock is above 100 MHz, use this but with power boost on. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhal_1_1lpc40_1_1clock_1ad93b41676e24c9aedd802c905eecd314ac3ea945a74a17b40a16ec2ca4362e1f2" prot="public">
          <name>clock6</name>
          <initializer>= 0b0101 &lt;&lt; 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Flash accesses use 6 CPU clocks. &quot;Safe&quot; setting for any allowed conditions. </para>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Defines the codes for the flash access clock cycles required based on the CPU clocks speed. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/clock.hpp" line="74" column="3" bodyfile="libraries/include/libhal-lpc40/clock.hpp" bodystart="75" bodyend="95"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classhal_1_1lpc40_1_1clock_1a4835b2f6b5eee3a358049000b91c73a8" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr <ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref></type>
        <definition>constexpr hertz hal::lpc40::clock::irc_frequency</definition>
        <argsstring></argsstring>
        <name>irc_frequency</name>
        <initializer>= 12&apos;000&apos;000.0f</initializer>
        <briefdescription>
<para>The frequency of the internal RC clock and the clock frequency at startup. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/clock.hpp" line="37" column="26" bodyfile="libraries/include/libhal-lpc40/clock.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1lpc40_1_1clock_1aad3eae6e19bda4db4d9599e481ee1404" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr uint32_t</type>
        <definition>constexpr uint32_t hal::lpc40::clock::default_peripheral_divider</definition>
        <argsstring></argsstring>
        <name>default_peripheral_divider</name>
        <initializer>= 4</initializer>
        <briefdescription>
<para>The default clock divider for the peripheral clock. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/clock.hpp" line="39" column="29" bodyfile="libraries/include/libhal-lpc40/clock.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhal_1_1lpc40_1_1clock_1a19620329cd85cd0a8e07c694e1473213" prot="private" static="no" mutable="no">
        <type><ref refid="structhal_1_1lpc40_1_1clock_1_1configuration" kindref="compound">configuration</ref></type>
        <definition>configuration hal::lpc40::clock::m_config</definition>
        <argsstring></argsstring>
        <name>m_config</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/clock.hpp" line="216" column="17" bodyfile="libraries/include/libhal-lpc40/clock.hpp" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1lpc40_1_1clock_1a44ba5978d600fb41670ba7b56098fc31" prot="private" static="no" mutable="no">
        <type><ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref></type>
        <definition>hertz hal::lpc40::clock::m_cpu_clock_rate</definition>
        <argsstring></argsstring>
        <name>m_cpu_clock_rate</name>
        <initializer>= <ref refid="classhal_1_1lpc40_1_1clock_1a4835b2f6b5eee3a358049000b91c73a8" kindref="member">irc_frequency</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/clock.hpp" line="217" column="9" bodyfile="libraries/include/libhal-lpc40/clock.hpp" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1lpc40_1_1clock_1a55c1ebdcdc139f8c57107733c9e7638f" prot="private" static="no" mutable="no">
        <type><ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref></type>
        <definition>hertz hal::lpc40::clock::m_emc_clock_rate</definition>
        <argsstring></argsstring>
        <name>m_emc_clock_rate</name>
        <initializer>= <ref refid="classhal_1_1lpc40_1_1clock_1a4835b2f6b5eee3a358049000b91c73a8" kindref="member">irc_frequency</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/clock.hpp" line="218" column="9" bodyfile="libraries/include/libhal-lpc40/clock.hpp" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1lpc40_1_1clock_1a2ede244527ca762445d92d25f7e5ca63" prot="private" static="no" mutable="no">
        <type><ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref></type>
        <definition>hertz hal::lpc40::clock::m_usb_clock_rate</definition>
        <argsstring></argsstring>
        <name>m_usb_clock_rate</name>
        <initializer>= <ref refid="classhal_1_1lpc40_1_1clock_1a4835b2f6b5eee3a358049000b91c73a8" kindref="member">irc_frequency</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/clock.hpp" line="219" column="9" bodyfile="libraries/include/libhal-lpc40/clock.hpp" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1lpc40_1_1clock_1a22a0bdf3e0db0c2bc0430868c590c692" prot="private" static="no" mutable="no">
        <type><ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref></type>
        <definition>hertz hal::lpc40::clock::m_spifi_clock_source_rate</definition>
        <argsstring></argsstring>
        <name>m_spifi_clock_source_rate</name>
        <initializer>= <ref refid="classhal_1_1lpc40_1_1clock_1a4835b2f6b5eee3a358049000b91c73a8" kindref="member">irc_frequency</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/clock.hpp" line="220" column="9" bodyfile="libraries/include/libhal-lpc40/clock.hpp" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1lpc40_1_1clock_1ad9ff6a31d9b853ec3896dcf2b2cd1abe" prot="private" static="no" mutable="no">
        <type><ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref></type>
        <definition>hertz hal::lpc40::clock::m_peripheral_clock_rate</definition>
        <argsstring></argsstring>
        <name>m_peripheral_clock_rate</name>
        <initializer>= <ref refid="classhal_1_1lpc40_1_1clock_1a4835b2f6b5eee3a358049000b91c73a8" kindref="member">irc_frequency</ref> / <ref refid="classhal_1_1lpc40_1_1clock_1aad3eae6e19bda4db4d9599e481ee1404" kindref="member">default_peripheral_divider</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/clock.hpp" line="221" column="9" bodyfile="libraries/include/libhal-lpc40/clock.hpp" bodystart="221" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classhal_1_1lpc40_1_1clock_1aff2684a49ced76b4e90558c52963b31e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhal_1_1lpc40_1_1clock" kindref="compound">clock</ref> &amp;</type>
        <definition>static clock&amp; hal::lpc40::clock::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
<para>Get system clock object. </para>
        </briefdescription>
        <detaileddescription>
<para>All peripherals and application code should use this function and clock objects. Additional clock objects should not created outside of unit tests. Doing so will result in multiple objects with shared state.</para>
<para><simplesect kind="return"><para>clock&amp; - return the system clock object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/clock.hpp" line="165" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1lpc40_1_1clock_1abcf009f8015ba7f486c7dd1a642a1653" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>status</type>
        <definition>static status hal::lpc40::clock::maximum</definition>
        <argsstring>(hertz p_external_crystal_frequency)</argsstring>
        <name>maximum</name>
        <param>
          <type><ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref></type>
          <declname>p_external_crystal_frequency</declname>
        </param>
        <briefdescription>
<para>Set the lpc40xx MCU to the maximum clock speed (120MHz) possible. </para>
        </briefdescription>
        <detaileddescription>
<para>This function REQUIRES an external crystal to be used.</para>
<para><itemizedlist>
<listitem><para>CPU clock speed set to 120MHz</para>
</listitem><listitem><para>USB clock speed set to 120MHz</para>
</listitem><listitem><para>Peripheral clock set to 120MHZ</para>
</listitem><listitem><para>SPIFI clock set to 120MHz</para>
</listitem><listitem><para>PLL0 is set to 120MHz and used for everything</para>
</listitem><listitem><para>PLL1 is disabled and not used</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_external_crystal_frequency</parametername>
</parameternamelist>
<parameterdescription>
<para>- frequency of the crystal connected to the XTAL1 &amp; XTAL2 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status - whether or not the function failed to set the clock speed to the maximum. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/clock.hpp" line="184" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhal_1_1lpc40_1_1clock_1a6ef3c697b3161530469b5784c2e3d60b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref></type>
        <definition>hertz hal::lpc40::clock::get_frequency</definition>
        <argsstring>(peripheral p_peripheral)</argsstring>
        <name>get_frequency</name>
        <param>
          <type>peripheral</type>
          <declname>p_peripheral</declname>
        </param>
        <briefdescription>
<para>Get the operating frequency of the peripheral. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_peripheral</parametername>
</parameternamelist>
<parameterdescription>
<para>- id of the peripheral </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>frequency - operating frequency of the peripheral </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/clock.hpp" line="192" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1lpc40_1_1clock_1a854cb2c29a4134a01a33f55f86dc8c10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structhal_1_1lpc40_1_1clock_1_1configuration" kindref="compound">configuration</ref> &amp;</type>
        <definition>configuration&amp; hal::lpc40::clock::config</definition>
        <argsstring>()</argsstring>
        <name>config</name>
        <briefdescription>
<para>Get the clock config object. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>configuration&amp; - reference to configuration object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/clock.hpp" line="199" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1lpc40_1_1clock_1a0f01f3356cbd891640eddd2996128de4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>status</type>
        <definition>status hal::lpc40::clock::reconfigure_clocks</definition>
        <argsstring>()</argsstring>
        <name>reconfigure_clocks</name>
        <briefdescription>
<para>Apply the clock configuration to hardware. </para>
        </briefdescription>
        <detaileddescription>
<para>TODO(#65): explain the set of errors in better detail</para>
<para><simplesect kind="return"><para>status - success or failure calculations could not be reached. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/clock.hpp" line="209" column="11"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhal_1_1lpc40_1_1clock_1af9b0c189707b2186733c3cf21d277764" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hal::lpc40::clock::clock</definition>
        <argsstring>()</argsstring>
        <name>clock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/clock.hpp" line="212" column="13" bodyfile="libraries/include/libhal-lpc40/clock.hpp" bodystart="212" bodyend="214"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Allows user code to manipulate and retrieve the various system clocks speeds. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/include/libhal-lpc40/clock.hpp" line="33" column="1" bodyfile="libraries/include/libhal-lpc40/clock.hpp" bodystart="34" bodyend="222"/>
    <listofallmembers>
      <member refid="classhal_1_1lpc40_1_1clock_1af9b0c189707b2186733c3cf21d277764" prot="private" virt="non-virtual"><scope>hal::lpc40::clock</scope><name>clock</name></member>
      <member refid="classhal_1_1lpc40_1_1clock_1a854cb2c29a4134a01a33f55f86dc8c10" prot="public" virt="non-virtual"><scope>hal::lpc40::clock</scope><name>config</name></member>
      <member refid="classhal_1_1lpc40_1_1clock_1aad3eae6e19bda4db4d9599e481ee1404" prot="public" virt="non-virtual"><scope>hal::lpc40::clock</scope><name>default_peripheral_divider</name></member>
      <member refid="classhal_1_1lpc40_1_1clock_1ad93b41676e24c9aedd802c905eecd314" prot="public" virt="non-virtual"><scope>hal::lpc40::clock</scope><name>flash_configuration</name></member>
      <member refid="classhal_1_1lpc40_1_1clock_1aff2684a49ced76b4e90558c52963b31e" prot="public" virt="non-virtual"><scope>hal::lpc40::clock</scope><name>get</name></member>
      <member refid="classhal_1_1lpc40_1_1clock_1a6ef3c697b3161530469b5784c2e3d60b" prot="public" virt="non-virtual"><scope>hal::lpc40::clock</scope><name>get_frequency</name></member>
      <member refid="classhal_1_1lpc40_1_1clock_1a4835b2f6b5eee3a358049000b91c73a8" prot="public" virt="non-virtual"><scope>hal::lpc40::clock</scope><name>irc_frequency</name></member>
      <member refid="classhal_1_1lpc40_1_1clock_1a19620329cd85cd0a8e07c694e1473213" prot="private" virt="non-virtual"><scope>hal::lpc40::clock</scope><name>m_config</name></member>
      <member refid="classhal_1_1lpc40_1_1clock_1a44ba5978d600fb41670ba7b56098fc31" prot="private" virt="non-virtual"><scope>hal::lpc40::clock</scope><name>m_cpu_clock_rate</name></member>
      <member refid="classhal_1_1lpc40_1_1clock_1a55c1ebdcdc139f8c57107733c9e7638f" prot="private" virt="non-virtual"><scope>hal::lpc40::clock</scope><name>m_emc_clock_rate</name></member>
      <member refid="classhal_1_1lpc40_1_1clock_1ad9ff6a31d9b853ec3896dcf2b2cd1abe" prot="private" virt="non-virtual"><scope>hal::lpc40::clock</scope><name>m_peripheral_clock_rate</name></member>
      <member refid="classhal_1_1lpc40_1_1clock_1a22a0bdf3e0db0c2bc0430868c590c692" prot="private" virt="non-virtual"><scope>hal::lpc40::clock</scope><name>m_spifi_clock_source_rate</name></member>
      <member refid="classhal_1_1lpc40_1_1clock_1a2ede244527ca762445d92d25f7e5ca63" prot="private" virt="non-virtual"><scope>hal::lpc40::clock</scope><name>m_usb_clock_rate</name></member>
      <member refid="classhal_1_1lpc40_1_1clock_1abcf009f8015ba7f486c7dd1a642a1653" prot="public" virt="non-virtual"><scope>hal::lpc40::clock</scope><name>maximum</name></member>
      <member refid="classhal_1_1lpc40_1_1clock_1a0f01f3356cbd891640eddd2996128de4" prot="public" virt="non-virtual"><scope>hal::lpc40::clock</scope><name>reconfigure_clocks</name></member>
      <member refid="classhal_1_1lpc40_1_1clock_1a4328fd8500767c0aaa140a7f21dcc0a1" prot="public" virt="non-virtual"><scope>hal::lpc40::clock</scope><name>spifi_clock_source</name></member>
      <member refid="classhal_1_1lpc40_1_1clock_1aaa8cb771d8cb9cd77f4aefbefa5a93e4" prot="public" virt="non-virtual"><scope>hal::lpc40::clock</scope><name>usb_clock_source</name></member>
      <member refid="classhal_1_1lpc40_1_1clock_1aedf62732ac08533174a2c14cc4870214" prot="public" virt="non-virtual"><scope>hal::lpc40::clock</scope><name>usb_divider</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
