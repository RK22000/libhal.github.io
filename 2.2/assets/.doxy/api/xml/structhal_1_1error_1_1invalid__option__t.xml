<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structhal_1_1error_1_1invalid__option__t" kind="struct" language="C++" prot="public">
    <compoundname>hal::error::invalid_option_t</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::false_type</basecompoundref>
    <includes refid="error_8hpp" local="no">error.hpp</includes>
    <templateparamlist>
      <param>
        <type>auto...</type>
        <declname>options</declname>
        <defname>options</defname>
      </param>
    </templateparamlist>
    <briefdescription>
<para>Used for defining static_asserts that should always fail, but only if the static_assert line is hit via <computeroutput>if constexpr</computeroutput> control block. Prefer to NOT use this directly but to use <computeroutput>invalid_option</computeroutput> instead. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>ignored by the application but needed to create a non-trivial specialization of this class which allows its usage in static_assert. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>hal::error::invalid_option_t&lt; options &gt;</label>
        <link refid="structhal_1_1error_1_1invalid__option__t"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::false_type</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>hal::error::invalid_option_t&lt; options &gt;</label>
        <link refid="structhal_1_1error_1_1invalid__option__t"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::false_type</label>
      </node>
    </collaborationgraph>
    <location file="libraries/include/libhal/error.hpp" line="100" column="1" bodyfile="libraries/include/libhal/error.hpp" bodystart="101" bodyend="101"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>
