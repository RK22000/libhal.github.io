<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhal_1_1inert__rotation__sensor" kind="class" language="C++" prot="public">
    <compoundname>hal::inert_rotation_sensor</compoundname>
    <basecompoundref refid="classhal_1_1rotation__sensor" prot="public" virt="non-virtual">hal::rotation_sensor</basecompoundref>
    <includes refid="inert__rotation__sensor_8hpp" local="no">inert_rotation_sensor.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhal_1_1inert__rotation__sensor_1ae50b1901712c4beef4b8ebd040f3c5e9" prot="private" static="no" mutable="no">
        <type><ref refid="structhal_1_1rotation__sensor_1_1read__t" kindref="compound">read_t</ref></type>
        <definition>read_t hal::inert_rotation_sensor::m_position</definition>
        <argsstring></argsstring>
        <name>m_position</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-soft/inert_drivers/inert_rotation_sensor.hpp" line="50" column="10" bodyfile="libraries/include/libhal-soft/inert_drivers/inert_rotation_sensor.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classhal_1_1inert__rotation__sensor_1ab42360b83900fec77ae985649d940492" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>result&lt; <ref refid="classhal_1_1inert__rotation__sensor" kindref="compound">inert_rotation_sensor</ref> &gt;</type>
        <definition>static result&lt;inert_rotation_sensor&gt; hal::inert_rotation_sensor::create</definition>
        <argsstring>(read_t p_position)</argsstring>
        <name>create</name>
        <param>
          <type><ref refid="structhal_1_1rotation__sensor_1_1read__t" kindref="compound">read_t</ref></type>
          <declname>p_position</declname>
        </param>
        <briefdescription>
<para>Factory function to create <ref refid="classhal_1_1inert__rotation__sensor" kindref="compound">inert_rotation_sensor</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_position</parametername>
</parameternamelist>
<parameterdescription>
<para>- read_t object to return when <ref refid="classhal_1_1rotation__sensor_1a5ae02bc5fa8e61a8b2495f6bedd538dd" kindref="member">read()</ref> is called </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result&lt;inert_rotation_sensor&gt; - Constructed <ref refid="classhal_1_1inert__rotation__sensor" kindref="compound">inert_rotation_sensor</ref> onject </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-soft/inert_drivers/inert_rotation_sensor.hpp" line="34" column="17" bodyfile="libraries/include/libhal-soft/inert_drivers/inert_rotation_sensor.hpp" bodystart="34" bodyend="37"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhal_1_1inert__rotation__sensor_1a487bda30e6475212b37647ade1600359" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hal::inert_rotation_sensor::inert_rotation_sensor</definition>
        <argsstring>(read_t p_position)</argsstring>
        <name>inert_rotation_sensor</name>
        <param>
          <type><ref refid="structhal_1_1rotation__sensor_1_1read__t" kindref="compound">read_t</ref></type>
          <declname>p_position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-soft/inert_drivers/inert_rotation_sensor.hpp" line="40" column="13" bodyfile="libraries/include/libhal-soft/inert_drivers/inert_rotation_sensor.hpp" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1inert__rotation__sensor_1aa1b8a69cf2a14f869d67fb223b38bea3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>result&lt; <ref refid="structhal_1_1rotation__sensor_1_1read__t" kindref="compound">read_t</ref> &gt;</type>
        <definition>result&lt;read_t&gt; hal::inert_rotation_sensor::driver_read</definition>
        <argsstring>()</argsstring>
        <name>driver_read</name>
        <reimplements refid="classhal_1_1rotation__sensor_1ac9be6010cd69bbebaa5cc302671a4bfb">driver_read</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-soft/inert_drivers/inert_rotation_sensor.hpp" line="45" column="10" bodyfile="libraries/include/libhal-soft/inert_drivers/inert_rotation_sensor.hpp" bodystart="45" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Inert implementation of rotation measuring hardware. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>hal::rotation_sensor</label>
        <link refid="classhal_1_1rotation__sensor"/>
      </node>
      <node id="1">
        <label>hal::inert_rotation_sensor</label>
        <link refid="classhal_1_1inert__rotation__sensor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>hal::rotation_sensor</label>
        <link refid="classhal_1_1rotation__sensor"/>
      </node>
      <node id="1">
        <label>hal::inert_rotation_sensor</label>
        <link refid="classhal_1_1inert__rotation__sensor"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/include/libhal-soft/inert_drivers/inert_rotation_sensor.hpp" line="24" column="1" bodyfile="libraries/include/libhal-soft/inert_drivers/inert_rotation_sensor.hpp" bodystart="25" bodyend="51"/>
    <listofallmembers>
      <member refid="classhal_1_1inert__rotation__sensor_1ab42360b83900fec77ae985649d940492" prot="public" virt="non-virtual"><scope>hal::inert_rotation_sensor</scope><name>create</name></member>
      <member refid="classhal_1_1inert__rotation__sensor_1aa1b8a69cf2a14f869d67fb223b38bea3" prot="private" virt="virtual"><scope>hal::inert_rotation_sensor</scope><name>driver_read</name></member>
      <member refid="classhal_1_1inert__rotation__sensor_1a487bda30e6475212b37647ade1600359" prot="private" virt="non-virtual"><scope>hal::inert_rotation_sensor</scope><name>inert_rotation_sensor</name></member>
      <member refid="classhal_1_1inert__rotation__sensor_1ae50b1901712c4beef4b8ebd040f3c5e9" prot="private" virt="non-virtual"><scope>hal::inert_rotation_sensor</scope><name>m_position</name></member>
      <member refid="classhal_1_1rotation__sensor_1a5ae02bc5fa8e61a8b2495f6bedd538dd" prot="public" virt="non-virtual"><scope>hal::inert_rotation_sensor</scope><name>read</name></member>
      <member refid="classhal_1_1rotation__sensor_1a76d46d3bf36199a5b6e63d0e7d8d78f4" prot="public" virt="virtual"><scope>hal::inert_rotation_sensor</scope><name>~rotation_sensor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
