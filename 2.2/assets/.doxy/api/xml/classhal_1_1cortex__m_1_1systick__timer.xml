<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhal_1_1cortex__m_1_1systick__timer" kind="class" language="C++" prot="public">
    <compoundname>hal::cortex_m::systick_timer</compoundname>
    <basecompoundref refid="classhal_1_1timer" prot="public" virt="non-virtual">hal::timer</basecompoundref>
    <includes refid="systick__timer_8hpp" local="no">systick_timer.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classhal_1_1cortex__m_1_1systick__timer_1aa22c6596daeb47443ad2f841445e75d2" prot="public" static="no" strong="yes">
        <type>std::uint8_t</type>
        <name>clock_source</name>
        <enumvalue id="classhal_1_1cortex__m_1_1systick__timer_1aa22c6596daeb47443ad2f841445e75d2a6a21b6995a068148bbb65c8f949b3fb2" prot="public">
          <name>external</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Use an external clock source. What this source is depends on the architecture and configuration of the platform. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhal_1_1cortex__m_1_1systick__timer_1aa22c6596daeb47443ad2f841445e75d2a649ce0650379a0aaff63c1ce257350de" prot="public">
          <name>processor</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>Use the clock given to the CPU. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines the set of clock sources for the SysTick timer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-armcortex/systick_timer.hpp" line="37" column="3" bodyfile="libraries/include/libhal-armcortex/systick_timer.hpp" bodystart="38" bodyend="44"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhal_1_1cortex__m_1_1systick__timer_1aa1db5b7d4bec6cf0c26dcec18b47b9a2" prot="private" static="no" mutable="no">
        <type><ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref></type>
        <definition>hertz hal::cortex_m::systick_timer::m_frequency</definition>
        <argsstring></argsstring>
        <name>m_frequency</name>
        <initializer>= 1&apos;000&apos;000.0f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-armcortex/systick_timer.hpp" line="89" column="9" bodyfile="libraries/include/libhal-armcortex/systick_timer.hpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhal_1_1cortex__m_1_1systick__timer_1a9081457aedc3aaa442eff5498612151d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hal::cortex_m::systick_timer::systick_timer</definition>
        <argsstring>(hertz p_frequency, clock_source p_source=clock_source::processor)</argsstring>
        <name>systick_timer</name>
        <param>
          <type><ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref></type>
          <declname>p_frequency</declname>
        </param>
        <param>
          <type><ref refid="classhal_1_1cortex__m_1_1systick__timer_1aa22c6596daeb47443ad2f841445e75d2" kindref="member">clock_source</ref></type>
          <declname>p_source</declname>
          <defval><ref refid="classhal_1_1cortex__m_1_1systick__timer_1aa22c6596daeb47443ad2f841445e75d2a649ce0650379a0aaff63c1ce257350de" kindref="member">clock_source::processor</ref></defval>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classhal_1_1cortex__m_1_1systick__timer" kindref="compound">systick_timer</ref> timer object. </para>
        </briefdescription>
        <detaileddescription>
<para>PRECONDITION: Interrupt vector table must be initialized before creating an instance of this object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_frequency</parametername>
</parameternamelist>
<parameterdescription>
<para>- the clock source&apos;s frequency </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_source</parametername>
</parameternamelist>
<parameterdescription>
<para>- the source of the clock to the systick timer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-armcortex/systick_timer.hpp" line="55" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1cortex__m_1_1systick__timer_1a3b9355bbfb019f61dc1296075637b5ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hal::cortex_m::systick_timer::register_cpu_frequency</definition>
        <argsstring>(hertz p_frequency, clock_source p_source=clock_source::processor)</argsstring>
        <name>register_cpu_frequency</name>
        <param>
          <type><ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref></type>
          <declname>p_frequency</declname>
        </param>
        <param>
          <type><ref refid="classhal_1_1cortex__m_1_1systick__timer_1aa22c6596daeb47443ad2f841445e75d2" kindref="member">clock_source</ref></type>
          <declname>p_source</declname>
          <defval><ref refid="classhal_1_1cortex__m_1_1systick__timer_1aa22c6596daeb47443ad2f841445e75d2a649ce0650379a0aaff63c1ce257350de" kindref="member">clock_source::processor</ref></defval>
        </param>
        <briefdescription>
<para>Inform the driver of the operating frequency of the CPU in order to generate the correct uptime. </para>
        </briefdescription>
        <detaileddescription>
<para>Use this when the CPU&apos;s operating frequency has changed and no longer matches the frequency supplied to the constructor. Care should be taken when expecting this function when there is the potentially other parts of the system that depend on this counter&apos;s uptime to operate.</para>
<para>This will clear any ongoing scheduled events as the timing will no longer be valid.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_frequency</parametername>
</parameternamelist>
<parameterdescription>
<para>- the clock source&apos;s frequency </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_source</parametername>
</parameternamelist>
<parameterdescription>
<para>- the source of the clock to the systick timer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-armcortex/systick_timer.hpp" line="73" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1cortex__m_1_1systick__timer_1ac75389af0d3caef719aef5e344cbc268" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hal::cortex_m::systick_timer::~systick_timer</definition>
        <argsstring>()</argsstring>
        <name>~systick_timer</name>
        <briefdescription>
<para>Destroy the system timer object. </para>
        </briefdescription>
        <detaileddescription>
<para>Stop the timer and disable the interrupt service routine. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-armcortex/systick_timer.hpp" line="81" column="3"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhal_1_1cortex__m_1_1systick__timer_1aab132ce2f8a74beaaf65767eb0842c43" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>result&lt; <ref refid="structhal_1_1timer_1_1is__running__t" kindref="compound">is_running_t</ref> &gt;</type>
        <definition>result&lt;is_running_t&gt; hal::cortex_m::systick_timer::driver_is_running</definition>
        <argsstring>() override</argsstring>
        <name>driver_is_running</name>
        <reimplements refid="classhal_1_1timer_1ac28b122b4b6f929a98fbaea8c23f786a">driver_is_running</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-armcortex/systick_timer.hpp" line="84" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1cortex__m_1_1systick__timer_1abf96f27d6a88bf6d7b4b228659ac23d4" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>result&lt; <ref refid="structhal_1_1timer_1_1cancel__t" kindref="compound">cancel_t</ref> &gt;</type>
        <definition>result&lt;cancel_t&gt; hal::cortex_m::systick_timer::driver_cancel</definition>
        <argsstring>() override</argsstring>
        <name>driver_cancel</name>
        <reimplements refid="classhal_1_1timer_1a273b708a1f149479290444f10d82b4fa">driver_cancel</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-armcortex/systick_timer.hpp" line="85" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1cortex__m_1_1systick__timer_1affc477fd954a0558b0d98f3cab44c9e3" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>result&lt; <ref refid="structhal_1_1timer_1_1schedule__t" kindref="compound">schedule_t</ref> &gt;</type>
        <definition>result&lt;schedule_t&gt; hal::cortex_m::systick_timer::driver_schedule</definition>
        <argsstring>(hal::callback&lt; void(void)&gt; p_callback, hal::time_duration p_delay) override</argsstring>
        <name>driver_schedule</name>
        <reimplements refid="classhal_1_1timer_1a9696735ea2247cd7924cbc4774fcddd7">driver_schedule</reimplements>
        <param>
          <type><ref refid="namespacehal_1a6051b44bfb2759cbcdba16019f3f1550" kindref="member">hal::callback</ref>&lt; void(void)&gt;</type>
          <declname>p_callback</declname>
        </param>
        <param>
          <type><ref refid="namespacehal_1a858b08a6e4e3eb5752d8e0daaad5ed00" kindref="member">hal::time_duration</ref></type>
          <declname>p_delay</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-armcortex/systick_timer.hpp" line="86" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>SysTick driver for the ARM Cortex Mx series chips. </para>
    </briefdescription>
    <detaileddescription>
<para>Available in all ARM Cortex M series processors. Provides a generic and simple timer for every platform using these processor. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>hal::cortex_m::systick_timer</label>
        <link refid="classhal_1_1cortex__m_1_1systick__timer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hal::timer</label>
        <link refid="classhal_1_1timer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>hal::cortex_m::systick_timer</label>
        <link refid="classhal_1_1cortex__m_1_1systick__timer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hal::timer</label>
        <link refid="classhal_1_1timer"/>
      </node>
    </collaborationgraph>
    <location file="libraries/include/libhal-armcortex/systick_timer.hpp" line="30" column="1" bodyfile="libraries/include/libhal-armcortex/systick_timer.hpp" bodystart="31" bodyend="90"/>
    <listofallmembers>
      <member refid="classhal_1_1timer_1a51c60a0ecd9c3e4b0871af671bdeac3e" prot="public" virt="non-virtual"><scope>hal::cortex_m::systick_timer</scope><name>cancel</name></member>
      <member refid="classhal_1_1cortex__m_1_1systick__timer_1aa22c6596daeb47443ad2f841445e75d2" prot="public" virt="non-virtual"><scope>hal::cortex_m::systick_timer</scope><name>clock_source</name></member>
      <member refid="classhal_1_1cortex__m_1_1systick__timer_1abf96f27d6a88bf6d7b4b228659ac23d4" prot="private" virt="virtual"><scope>hal::cortex_m::systick_timer</scope><name>driver_cancel</name></member>
      <member refid="classhal_1_1cortex__m_1_1systick__timer_1aab132ce2f8a74beaaf65767eb0842c43" prot="private" virt="virtual"><scope>hal::cortex_m::systick_timer</scope><name>driver_is_running</name></member>
      <member refid="classhal_1_1cortex__m_1_1systick__timer_1affc477fd954a0558b0d98f3cab44c9e3" prot="private" virt="virtual"><scope>hal::cortex_m::systick_timer</scope><name>driver_schedule</name></member>
      <member refid="classhal_1_1timer_1aa31f569c3165567f24920a06736d57ba" prot="public" virt="non-virtual"><scope>hal::cortex_m::systick_timer</scope><name>is_running</name></member>
      <member refid="classhal_1_1cortex__m_1_1systick__timer_1aa1db5b7d4bec6cf0c26dcec18b47b9a2" prot="private" virt="non-virtual"><scope>hal::cortex_m::systick_timer</scope><name>m_frequency</name></member>
      <member refid="classhal_1_1cortex__m_1_1systick__timer_1a3b9355bbfb019f61dc1296075637b5ec" prot="public" virt="non-virtual"><scope>hal::cortex_m::systick_timer</scope><name>register_cpu_frequency</name></member>
      <member refid="classhal_1_1timer_1a992234ed828ee9fac8b06ae4d0b8f83c" prot="public" virt="non-virtual"><scope>hal::cortex_m::systick_timer</scope><name>schedule</name></member>
      <member refid="classhal_1_1cortex__m_1_1systick__timer_1a9081457aedc3aaa442eff5498612151d" prot="public" virt="non-virtual"><scope>hal::cortex_m::systick_timer</scope><name>systick_timer</name></member>
      <member refid="classhal_1_1cortex__m_1_1systick__timer_1ac75389af0d3caef719aef5e344cbc268" prot="public" virt="non-virtual"><scope>hal::cortex_m::systick_timer</scope><name>~systick_timer</name></member>
      <member refid="classhal_1_1timer_1aebf27697c5512202ac99f8b0f159e441" prot="public" virt="virtual"><scope>hal::cortex_m::systick_timer</scope><name>~timer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
