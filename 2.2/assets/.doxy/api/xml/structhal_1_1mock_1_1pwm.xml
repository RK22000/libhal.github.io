<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structhal_1_1mock_1_1pwm" kind="struct" language="C++" prot="public">
    <compoundname>hal::mock::pwm</compoundname>
    <basecompoundref refid="classhal_1_1pwm" prot="public" virt="non-virtual">hal::pwm</basecompoundref>
    <includes refid="libhal-mock_2pwm_8hpp" local="no">pwm.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structhal_1_1mock_1_1pwm_1a5825206b48bd58442f2c5aa5e6eb7369" prot="public" static="no" mutable="no">
        <type><ref refid="classhal_1_1spy__handler" kindref="compound">spy_handler</ref>&lt; <ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref> &gt;</type>
        <definition>spy_handler&lt;hertz&gt; hal::mock::pwm::spy_frequency</definition>
        <argsstring></argsstring>
        <name>spy_frequency</name>
        <briefdescription>
<para>Spy handler for <ref refid="classhal_1_1pwm_1abf91bdc19f35d0a6f3448d972b5daead" kindref="member">hal::pwm::frequency()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-mock/pwm.hpp" line="39" column="15" bodyfile="libraries/include/libhal-mock/pwm.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structhal_1_1mock_1_1pwm_1aedb9a861814818adacb68b09983e4b82" prot="public" static="no" mutable="no">
        <type><ref refid="classhal_1_1spy__handler" kindref="compound">spy_handler</ref>&lt; float &gt;</type>
        <definition>spy_handler&lt;float&gt; hal::mock::pwm::spy_duty_cycle</definition>
        <argsstring></argsstring>
        <name>spy_duty_cycle</name>
        <briefdescription>
<para>Spy handler for <ref refid="classhal_1_1pwm_1a7a152631e72dc14a16b84d92365802b2" kindref="member">hal::pwm::duty_cycle()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-mock/pwm.hpp" line="41" column="15" bodyfile="libraries/include/libhal-mock/pwm.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structhal_1_1mock_1_1pwm_1ad4c4c645b6698791d34a3f8a78c96b17" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void hal::mock::pwm::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
<para>Reset spy information for both <ref refid="classhal_1_1pwm_1abf91bdc19f35d0a6f3448d972b5daead" kindref="member">frequency()</ref> and <ref refid="classhal_1_1pwm_1a7a152631e72dc14a16b84d92365802b2" kindref="member">duty_cycle()</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-mock/pwm.hpp" line="32" column="8" bodyfile="libraries/include/libhal-mock/pwm.hpp" bodystart="32" bodyend="36"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structhal_1_1mock_1_1pwm_1aa370b8b3a875a5ef2453053362df9f8a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>result&lt; <ref refid="structhal_1_1pwm_1_1frequency__t" kindref="compound">frequency_t</ref> &gt;</type>
        <definition>result&lt;frequency_t&gt; hal::mock::pwm::driver_frequency</definition>
        <argsstring>(hertz p_settings) override</argsstring>
        <name>driver_frequency</name>
        <reimplements refid="classhal_1_1pwm_1a6fbb20322e8267585cc063f5789fc98e">driver_frequency</reimplements>
        <param>
          <type><ref refid="namespacehal_1a54dc271deb8f266e52926836c0582598" kindref="member">hertz</ref></type>
          <declname>p_settings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-mock/pwm.hpp" line="44" column="10" bodyfile="libraries/include/libhal-mock/pwm.hpp" bodystart="44" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="structhal_1_1mock_1_1pwm_1a00aa4031f59b6dd4148d25c4f64a5727" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>result&lt; <ref refid="structhal_1_1pwm_1_1duty__cycle__t" kindref="compound">duty_cycle_t</ref> &gt;</type>
        <definition>result&lt;duty_cycle_t&gt; hal::mock::pwm::driver_duty_cycle</definition>
        <argsstring>(float p_duty_cycle) override</argsstring>
        <name>driver_duty_cycle</name>
        <reimplements refid="classhal_1_1pwm_1a455f4ab4b250f7e77ccdab2d046be4d4">driver_duty_cycle</reimplements>
        <param>
          <type>float</type>
          <declname>p_duty_cycle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-mock/pwm.hpp" line="50" column="10" bodyfile="libraries/include/libhal-mock/pwm.hpp" bodystart="50" bodyend="55"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Mock pwm implementation for use in unit tests and simulations with spy functions for <ref refid="classhal_1_1pwm_1abf91bdc19f35d0a6f3448d972b5daead" kindref="member">frequency()</ref> and <ref refid="classhal_1_1pwm_1a7a152631e72dc14a16b84d92365802b2" kindref="member">duty_cycle()</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>hal::pwm</label>
        <link refid="classhal_1_1pwm"/>
      </node>
      <node id="1">
        <label>hal::mock::pwm</label>
        <link refid="structhal_1_1mock_1_1pwm"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>hal::pwm</label>
        <link refid="classhal_1_1pwm"/>
      </node>
      <node id="3">
        <label>hal::spy_handler&lt; hertz &gt;</label>
        <link refid="classhal_1_1spy__handler"/>
      </node>
      <node id="4">
        <label>hal::spy_handler&lt; float &gt;</label>
        <link refid="classhal_1_1spy__handler"/>
      </node>
      <node id="1">
        <label>hal::mock::pwm</label>
        <link refid="structhal_1_1mock_1_1pwm"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="usage">
          <edgelabel>spy_frequency</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>spy_duty_cycle</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/include/libhal-mock/pwm.hpp" line="26" column="1" bodyfile="libraries/include/libhal-mock/pwm.hpp" bodystart="27" bodyend="56"/>
    <listofallmembers>
      <member refid="structhal_1_1mock_1_1pwm_1a00aa4031f59b6dd4148d25c4f64a5727" prot="private" virt="virtual"><scope>hal::mock::pwm</scope><name>driver_duty_cycle</name></member>
      <member refid="structhal_1_1mock_1_1pwm_1aa370b8b3a875a5ef2453053362df9f8a" prot="private" virt="virtual"><scope>hal::mock::pwm</scope><name>driver_frequency</name></member>
      <member refid="classhal_1_1pwm_1a7a152631e72dc14a16b84d92365802b2" prot="public" virt="non-virtual"><scope>hal::mock::pwm</scope><name>duty_cycle</name></member>
      <member refid="classhal_1_1pwm_1abf91bdc19f35d0a6f3448d972b5daead" prot="public" virt="non-virtual"><scope>hal::mock::pwm</scope><name>frequency</name></member>
      <member refid="structhal_1_1mock_1_1pwm_1ad4c4c645b6698791d34a3f8a78c96b17" prot="public" virt="non-virtual"><scope>hal::mock::pwm</scope><name>reset</name></member>
      <member refid="structhal_1_1mock_1_1pwm_1aedb9a861814818adacb68b09983e4b82" prot="public" virt="non-virtual"><scope>hal::mock::pwm</scope><name>spy_duty_cycle</name></member>
      <member refid="structhal_1_1mock_1_1pwm_1a5825206b48bd58442f2c5aa5e6eb7369" prot="public" virt="non-virtual"><scope>hal::mock::pwm</scope><name>spy_frequency</name></member>
      <member refid="classhal_1_1pwm_1a1c1b39503fa5cbcc778dad9172849251" prot="public" virt="virtual"><scope>hal::mock::pwm</scope><name>~pwm</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
