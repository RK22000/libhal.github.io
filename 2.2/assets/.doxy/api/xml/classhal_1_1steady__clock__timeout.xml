<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhal_1_1steady__clock__timeout" kind="class" language="C++" prot="public">
    <compoundname>hal::steady_clock_timeout</compoundname>
    <includes refid="libhal-util_2steady__clock_8hpp" local="no">steady_clock.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhal_1_1steady__clock__timeout_1adb77d0084a9c3ee1d37849a9f843d61d" prot="private" static="no" mutable="no">
        <type><ref refid="classhal_1_1steady__clock" kindref="compound">hal::steady_clock</ref> *</type>
        <definition>hal::steady_clock* hal::steady_clock_timeout::m_counter</definition>
        <argsstring></argsstring>
        <name>m_counter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/steady_clock.hpp" line="110" column="21" bodyfile="libraries/include/libhal-util/steady_clock.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1steady__clock__timeout_1aae94da73cf9eb54147e0df2b081aa9b0" prot="private" static="no" mutable="no">
        <type>std::uint64_t</type>
        <definition>std::uint64_t hal::steady_clock_timeout::m_cycles_until_timeout</definition>
        <argsstring></argsstring>
        <name>m_cycles_until_timeout</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/steady_clock.hpp" line="111" column="17" bodyfile="libraries/include/libhal-util/steady_clock.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classhal_1_1steady__clock__timeout_1aa5428340db1f1a313a717e12ce776332" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref></type>
        <definition>static steady_clock_timeout hal::steady_clock_timeout::create</definition>
        <argsstring>(hal::steady_clock &amp;p_steady_clock, hal::time_duration p_duration)</argsstring>
        <name>create</name>
        <param>
          <type><ref refid="classhal_1_1steady__clock" kindref="compound">hal::steady_clock</ref> &amp;</type>
          <declname>p_steady_clock</declname>
        </param>
        <param>
          <type><ref refid="namespacehal_1a858b08a6e4e3eb5752d8e0daaad5ed00" kindref="member">hal::time_duration</ref></type>
          <declname>p_duration</declname>
        </param>
        <briefdescription>
<para>Create a <ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref> - <ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref> object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/steady_clock.hpp" line="61" column="31"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhal_1_1steady__clock__timeout_1a655aead23885501c6b6746c17d1a7888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hal::steady_clock_timeout::steady_clock_timeout</definition>
        <argsstring>(const steady_clock_timeout &amp;p_timeout)=default</argsstring>
        <name>steady_clock_timeout</name>
        <param>
          <type>const <ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref> &amp;</type>
          <declname>p_timeout</declname>
        </param>
        <briefdescription>
<para>Construct a new counter timeout object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>- other <ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/steady_clock.hpp" line="69" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1steady__clock__timeout_1ab03559f82f009c73ed73a2837eec7d6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref> &amp;</type>
        <definition>steady_clock_timeout&amp; hal::steady_clock_timeout::operator=</definition>
        <argsstring>(const steady_clock_timeout &amp;p_timeout)=default</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref> &amp;</type>
          <declname>p_timeout</declname>
        </param>
        <briefdescription>
<para>Assign construct a new counter timeout object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>- other <ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref>&amp; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/steady_clock.hpp" line="76" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1steady__clock__timeout_1a57db6ef6ac486f0ad22454dd366e0cf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hal::steady_clock_timeout::steady_clock_timeout</definition>
        <argsstring>(steady_clock_timeout &amp;&amp;p_timeout)=default</argsstring>
        <name>steady_clock_timeout</name>
        <param>
          <type><ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref> &amp;&amp;</type>
          <declname>p_timeout</declname>
        </param>
        <briefdescription>
<para>Construct a new counter timeout object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>- other <ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/steady_clock.hpp" line="83" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1steady__clock__timeout_1a43d7123e0bdc9a838b24b0e77f86b50e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref> &amp;</type>
        <definition>steady_clock_timeout&amp; hal::steady_clock_timeout::operator=</definition>
        <argsstring>(steady_clock_timeout &amp;&amp;p_timeout)=default</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref> &amp;&amp;</type>
          <declname>p_timeout</declname>
        </param>
        <briefdescription>
<para>Move assign construct a new counter timeout object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>- other <ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classhal_1_1steady__clock__timeout" kindref="compound">steady_clock_timeout</ref>&amp; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/steady_clock.hpp" line="90" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1steady__clock__timeout_1a767b2a8db1fb80db163d23d01f520452" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>status</type>
        <definition>status hal::steady_clock_timeout::operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <briefdescription>
<para>Call this object to check if it has timed out. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>status - success or failure </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::errc::timed_out</parametername>
</parameternamelist>
<parameterdescription>
<para>- if the timeout time has been exceeded. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/steady_clock.hpp" line="98" column="10"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhal_1_1steady__clock__timeout_1a379e0ca7ea873cd92115b2aeb887827a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hal::steady_clock_timeout::steady_clock_timeout</definition>
        <argsstring>(hal::steady_clock &amp;p_steady_clock, std::uint64_t p_cycles_until_timeout)</argsstring>
        <name>steady_clock_timeout</name>
        <param>
          <type><ref refid="classhal_1_1steady__clock" kindref="compound">hal::steady_clock</ref> &amp;</type>
          <declname>p_steady_clock</declname>
        </param>
        <param>
          <type>std::uint64_t</type>
          <declname>p_cycles_until_timeout</declname>
        </param>
        <briefdescription>
<para>Construct a new counter timeout object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_steady_clock</parametername>
</parameternamelist>
<parameterdescription>
<para>- steady clock implementation </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_cycles_until_timeout</parametername>
</parameternamelist>
<parameterdescription>
<para>- number of cycles until timeout </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/steady_clock.hpp" line="107" column="3"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Timeout object based on <ref refid="classhal_1_1steady__clock" kindref="compound">hal::steady_clock</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>Do not use this class directly. Use <computeroutput>hal::create_timeout(hal::steady_clock&amp;)</computeroutput> instead of instantiating this class directly. </para>
    </detaileddescription>
    <location file="libraries/include/libhal-util/steady_clock.hpp" line="53" column="1" bodyfile="libraries/include/libhal-util/steady_clock.hpp" bodystart="54" bodyend="112"/>
    <listofallmembers>
      <member refid="classhal_1_1steady__clock__timeout_1aa5428340db1f1a313a717e12ce776332" prot="public" virt="non-virtual"><scope>hal::steady_clock_timeout</scope><name>create</name></member>
      <member refid="classhal_1_1steady__clock__timeout_1adb77d0084a9c3ee1d37849a9f843d61d" prot="private" virt="non-virtual"><scope>hal::steady_clock_timeout</scope><name>m_counter</name></member>
      <member refid="classhal_1_1steady__clock__timeout_1aae94da73cf9eb54147e0df2b081aa9b0" prot="private" virt="non-virtual"><scope>hal::steady_clock_timeout</scope><name>m_cycles_until_timeout</name></member>
      <member refid="classhal_1_1steady__clock__timeout_1a767b2a8db1fb80db163d23d01f520452" prot="public" virt="non-virtual"><scope>hal::steady_clock_timeout</scope><name>operator()</name></member>
      <member refid="classhal_1_1steady__clock__timeout_1ab03559f82f009c73ed73a2837eec7d6b" prot="public" virt="non-virtual"><scope>hal::steady_clock_timeout</scope><name>operator=</name></member>
      <member refid="classhal_1_1steady__clock__timeout_1a43d7123e0bdc9a838b24b0e77f86b50e" prot="public" virt="non-virtual"><scope>hal::steady_clock_timeout</scope><name>operator=</name></member>
      <member refid="classhal_1_1steady__clock__timeout_1a655aead23885501c6b6746c17d1a7888" prot="public" virt="non-virtual"><scope>hal::steady_clock_timeout</scope><name>steady_clock_timeout</name></member>
      <member refid="classhal_1_1steady__clock__timeout_1a57db6ef6ac486f0ad22454dd366e0cf9" prot="public" virt="non-virtual"><scope>hal::steady_clock_timeout</scope><name>steady_clock_timeout</name></member>
      <member refid="classhal_1_1steady__clock__timeout_1a379e0ca7ea873cd92115b2aeb887827a" prot="private" virt="non-virtual"><scope>hal::steady_clock_timeout</scope><name>steady_clock_timeout</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
