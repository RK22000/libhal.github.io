<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhal_1_1lpc40_1_1uart" kind="class" language="C++" prot="public">
    <compoundname>hal::lpc40::uart</compoundname>
    <basecompoundref refid="classhal_1_1serial" prot="public" virt="non-virtual">hal::serial</basecompoundref>
    <includes refid="uart_8hpp" local="no">uart.hpp</includes>
    <innerclass refid="structhal_1_1lpc40_1_1uart_1_1port" prot="public">hal::lpc40::uart::port</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhal_1_1lpc40_1_1uart_1ad8710902e28a509e97029c680d3caead" prot="private" static="no" mutable="no">
        <type><ref refid="structhal_1_1lpc40_1_1uart_1_1port" kindref="compound">port</ref></type>
        <definition>port hal::lpc40::uart::m_port</definition>
        <argsstring></argsstring>
        <name>m_port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/uart.hpp" line="86" column="8" bodyfile="libraries/include/libhal-lpc40/uart.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1lpc40_1_1uart_1acf352766c51a2eddb54036a72d1d1e70" prot="private" static="no" mutable="no">
        <type>nonstd::ring_span&lt; hal::byte &gt;</type>
        <definition>nonstd::ring_span&lt;hal::byte&gt; hal::lpc40::uart::m_receive_buffer</definition>
        <argsstring></argsstring>
        <name>m_receive_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/uart.hpp" line="87" column="21" bodyfile="libraries/include/libhal-lpc40/uart.hpp" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classhal_1_1lpc40_1_1uart_1a66b027b8c615f2239e0c67c173e4c744" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result&lt; <ref refid="classhal_1_1lpc40_1_1uart" kindref="compound">uart</ref> &gt;</type>
        <definition>static result&lt;uart&gt; hal::lpc40::uart::get</definition>
        <argsstring>(std::uint8_t p_port_number, std::span&lt; hal::byte &gt; p_receive_buffer, serial::settings p_settings={})</argsstring>
        <name>get</name>
        <param>
          <type>std::uint8_t</type>
          <declname>p_port_number</declname>
        </param>
        <param>
          <type>std::span&lt; hal::byte &gt;</type>
          <declname>p_receive_buffer</declname>
        </param>
        <param>
          <type><ref refid="structhal_1_1serial_1_1settings" kindref="compound">serial::settings</ref></type>
          <declname>p_settings</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
<para>Retrieve a UART serial port. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_port_number</parametername>
</parameternamelist>
<parameterdescription>
<para>- which uart port number to return </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_receive_buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>- uart serial receive working buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_settings</parametername>
</parameternamelist>
<parameterdescription>
<para>- the initial settings for the uart driver </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result&lt;uart&gt; - uart serial driver </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/uart.hpp" line="61" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1lpc40_1_1uart_1abeef599bcaabe95eae1ee18d277df190" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result&lt; <ref refid="classhal_1_1lpc40_1_1uart" kindref="compound">uart</ref> &gt;</type>
        <definition>static result&lt;uart&gt; hal::lpc40::uart::construct_custom</definition>
        <argsstring>(uart::port p_port, std::span&lt; hal::byte &gt; p_receive_working_buffer, serial::settings p_settings={})</argsstring>
        <name>construct_custom</name>
        <param>
          <type><ref refid="structhal_1_1lpc40_1_1uart_1_1port" kindref="compound">uart::port</ref></type>
          <declname>p_port</declname>
        </param>
        <param>
          <type>std::span&lt; hal::byte &gt;</type>
          <declname>p_receive_working_buffer</declname>
        </param>
        <param>
          <type><ref refid="structhal_1_1serial_1_1settings" kindref="compound">serial::settings</ref></type>
          <declname>p_settings</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/uart.hpp" line="65" column="17"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhal_1_1lpc40_1_1uart_1a518c7b86e438fb92430fae7d691e19cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hal::lpc40::uart::uart</definition>
        <argsstring>(uart &amp;p_other)=delete</argsstring>
        <name>uart</name>
        <param>
          <type><ref refid="classhal_1_1lpc40_1_1uart" kindref="compound">uart</ref> &amp;</type>
          <declname>p_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/uart.hpp" line="70" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1lpc40_1_1uart_1a27a4538c38168b1e72029544e6e95f4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhal_1_1lpc40_1_1uart" kindref="compound">uart</ref> &amp;</type>
        <definition>uart&amp; hal::lpc40::uart::operator=</definition>
        <argsstring>(uart &amp;p_other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classhal_1_1lpc40_1_1uart" kindref="compound">uart</ref> &amp;</type>
          <declname>p_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/uart.hpp" line="71" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1lpc40_1_1uart_1a6657acda515f49dedc9de64d7f11f558" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hal::lpc40::uart::uart</definition>
        <argsstring>(uart &amp;&amp;p_other)</argsstring>
        <name>uart</name>
        <param>
          <type><ref refid="classhal_1_1lpc40_1_1uart" kindref="compound">uart</ref> &amp;&amp;</type>
          <declname>p_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/uart.hpp" line="72" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1lpc40_1_1uart_1a566256a0b61c788f4d11e86b304cc310" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhal_1_1lpc40_1_1uart" kindref="compound">uart</ref> &amp;</type>
        <definition>uart&amp; hal::lpc40::uart::operator=</definition>
        <argsstring>(uart &amp;&amp;p_other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classhal_1_1lpc40_1_1uart" kindref="compound">uart</ref> &amp;&amp;</type>
          <declname>p_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/uart.hpp" line="73" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhal_1_1lpc40_1_1uart_1a075e71f89d287c2236356b5110217448" prot="private" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>hal::lpc40::uart::uart</definition>
        <argsstring>(const port &amp;p_port, std::span&lt; hal::byte &gt; p_receive_buffer)</argsstring>
        <name>uart</name>
        <param>
          <type>const <ref refid="structhal_1_1lpc40_1_1uart_1_1port" kindref="compound">port</ref> &amp;</type>
          <declname>p_port</declname>
        </param>
        <param>
          <type>std::span&lt; hal::byte &gt;</type>
          <declname>p_receive_buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/uart.hpp" line="76" column="12"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1lpc40_1_1uart_1a19118fd8c1cd17c435d7567687d207b0" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>status</type>
        <definition>status hal::lpc40::uart::driver_configure</definition>
        <argsstring>(const settings &amp;p_settings) override</argsstring>
        <name>driver_configure</name>
        <reimplements refid="classhal_1_1serial_1adcd3a309f5609e1cccd0fe1584abfc8a">driver_configure</reimplements>
        <param>
          <type>const <ref refid="structhal_1_1serial_1_1settings" kindref="compound">settings</ref> &amp;</type>
          <declname>p_settings</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/uart.hpp" line="78" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1lpc40_1_1uart_1acc1da0163d969a9df2146d2b1068932d" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>result&lt; <ref refid="structhal_1_1serial_1_1write__t" kindref="compound">write_t</ref> &gt;</type>
        <definition>result&lt;write_t&gt; hal::lpc40::uart::driver_write</definition>
        <argsstring>(std::span&lt; const hal::byte &gt; p_data) override</argsstring>
        <name>driver_write</name>
        <reimplements refid="classhal_1_1serial_1ae71b9dcc27466c0e721aa5f3cd57181c">driver_write</reimplements>
        <param>
          <type>std::span&lt; const hal::byte &gt;</type>
          <declname>p_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/uart.hpp" line="79" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1lpc40_1_1uart_1a5849d5f838fbe95342a0ca07a4512a3d" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>result&lt; <ref refid="structhal_1_1serial_1_1read__t" kindref="compound">read_t</ref> &gt;</type>
        <definition>result&lt;read_t&gt; hal::lpc40::uart::driver_read</definition>
        <argsstring>(std::span&lt; hal::byte &gt; p_data) override</argsstring>
        <name>driver_read</name>
        <reimplements refid="classhal_1_1serial_1ade66ea1d022c404f42fef07c9eb288b5">driver_read</reimplements>
        <param>
          <type>std::span&lt; hal::byte &gt;</type>
          <declname>p_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/uart.hpp" line="80" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1lpc40_1_1uart_1a17e27550f052b958818534ba2816829c" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>result&lt; <ref refid="structhal_1_1serial_1_1flush__t" kindref="compound">flush_t</ref> &gt;</type>
        <definition>result&lt;flush_t&gt; hal::lpc40::uart::driver_flush</definition>
        <argsstring>() override</argsstring>
        <name>driver_flush</name>
        <reimplements refid="classhal_1_1serial_1a7f45c777d8f42c05246ad33e9b00251a">driver_flush</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/uart.hpp" line="81" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1lpc40_1_1uart_1a2202ec7487e23e77f1544b6f0ef090fd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hal::lpc40::uart::setup_receive_interrupt</definition>
        <argsstring>()</argsstring>
        <name>setup_receive_interrupt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/uart.hpp" line="83" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1lpc40_1_1uart_1a201c2df9c76b37ca95c5316c2c02e7dc" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hal::lpc40::uart::interrupt_handler</definition>
        <argsstring>()</argsstring>
        <name>interrupt_handler</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-lpc40/uart.hpp" line="84" column="8"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implementation of the UART peripheral for the LPC40xx family of microcontrollers. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>that the baud rates less than or equal to the peripheral clock frequency / 48. Otherwise this peripheral cannot guarantee proper transmission or receive of bytes. </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>hal::lpc40::uart</label>
        <link refid="classhal_1_1lpc40_1_1uart"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hal::serial</label>
        <link refid="classhal_1_1serial"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>hal::lpc40::uart</label>
        <link refid="classhal_1_1lpc40_1_1uart"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hal::serial</label>
        <link refid="classhal_1_1serial"/>
      </node>
    </collaborationgraph>
    <location file="libraries/include/libhal-lpc40/uart.hpp" line="32" column="1" bodyfile="libraries/include/libhal-lpc40/uart.hpp" bodystart="33" bodyend="88"/>
    <listofallmembers>
      <member refid="classhal_1_1serial_1a3110feb98b0a00cc0d085b0ad5cf686f" prot="public" virt="non-virtual"><scope>hal::lpc40::uart</scope><name>configure</name></member>
      <member refid="classhal_1_1lpc40_1_1uart_1abeef599bcaabe95eae1ee18d277df190" prot="public" virt="non-virtual"><scope>hal::lpc40::uart</scope><name>construct_custom</name></member>
      <member refid="classhal_1_1lpc40_1_1uart_1a19118fd8c1cd17c435d7567687d207b0" prot="private" virt="virtual"><scope>hal::lpc40::uart</scope><name>driver_configure</name></member>
      <member refid="classhal_1_1lpc40_1_1uart_1a17e27550f052b958818534ba2816829c" prot="private" virt="virtual"><scope>hal::lpc40::uart</scope><name>driver_flush</name></member>
      <member refid="classhal_1_1lpc40_1_1uart_1a5849d5f838fbe95342a0ca07a4512a3d" prot="private" virt="virtual"><scope>hal::lpc40::uart</scope><name>driver_read</name></member>
      <member refid="classhal_1_1lpc40_1_1uart_1acc1da0163d969a9df2146d2b1068932d" prot="private" virt="virtual"><scope>hal::lpc40::uart</scope><name>driver_write</name></member>
      <member refid="classhal_1_1serial_1a830bae7d2f8b360f8744213a5a88b166" prot="public" virt="non-virtual"><scope>hal::lpc40::uart</scope><name>flush</name></member>
      <member refid="classhal_1_1lpc40_1_1uart_1a66b027b8c615f2239e0c67c173e4c744" prot="public" virt="non-virtual"><scope>hal::lpc40::uart</scope><name>get</name></member>
      <member refid="classhal_1_1lpc40_1_1uart_1a201c2df9c76b37ca95c5316c2c02e7dc" prot="private" virt="non-virtual"><scope>hal::lpc40::uart</scope><name>interrupt_handler</name></member>
      <member refid="classhal_1_1lpc40_1_1uart_1ad8710902e28a509e97029c680d3caead" prot="private" virt="non-virtual"><scope>hal::lpc40::uart</scope><name>m_port</name></member>
      <member refid="classhal_1_1lpc40_1_1uart_1acf352766c51a2eddb54036a72d1d1e70" prot="private" virt="non-virtual"><scope>hal::lpc40::uart</scope><name>m_receive_buffer</name></member>
      <member refid="classhal_1_1lpc40_1_1uart_1a27a4538c38168b1e72029544e6e95f4a" prot="public" virt="non-virtual"><scope>hal::lpc40::uart</scope><name>operator=</name></member>
      <member refid="classhal_1_1lpc40_1_1uart_1a566256a0b61c788f4d11e86b304cc310" prot="public" virt="non-virtual"><scope>hal::lpc40::uart</scope><name>operator=</name></member>
      <member refid="classhal_1_1serial_1a69eaa352ef24788b38d36648a5c3f99f" prot="public" virt="non-virtual"><scope>hal::lpc40::uart</scope><name>read</name></member>
      <member refid="classhal_1_1lpc40_1_1uart_1a2202ec7487e23e77f1544b6f0ef090fd" prot="private" virt="non-virtual"><scope>hal::lpc40::uart</scope><name>setup_receive_interrupt</name></member>
      <member refid="classhal_1_1lpc40_1_1uart_1a518c7b86e438fb92430fae7d691e19cb" prot="public" virt="non-virtual"><scope>hal::lpc40::uart</scope><name>uart</name></member>
      <member refid="classhal_1_1lpc40_1_1uart_1a6657acda515f49dedc9de64d7f11f558" prot="public" virt="non-virtual"><scope>hal::lpc40::uart</scope><name>uart</name></member>
      <member refid="classhal_1_1lpc40_1_1uart_1a075e71f89d287c2236356b5110217448" prot="private" virt="non-virtual"><scope>hal::lpc40::uart</scope><name>uart</name></member>
      <member refid="classhal_1_1serial_1a9a7a63f71b908b9c3cd061c52df55df8" prot="public" virt="non-virtual"><scope>hal::lpc40::uart</scope><name>write</name></member>
      <member refid="classhal_1_1serial_1ada7d8f7769ca8616f01a0d314bd09a52" prot="public" virt="virtual"><scope>hal::lpc40::uart</scope><name>~serial</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
