<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhal_1_1servo" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>hal::servo</compoundname>
    <derivedcompoundref refid="classhal_1_1rc__servo" prot="public" virt="non-virtual">hal::rc_servo</derivedcompoundref>
    <derivedcompoundref refid="classhal_1_1rmd_1_1drc__servo" prot="public" virt="non-virtual">hal::rmd::drc_servo</derivedcompoundref>
    <derivedcompoundref refid="classhal_1_1rmd_1_1mc__x__servo" prot="public" virt="non-virtual">hal::rmd::mc_x_servo</derivedcompoundref>
    <includes refid="servo_8hpp" local="no">servo.hpp</includes>
    <innerclass refid="structhal_1_1servo_1_1position__t" prot="public">hal::servo::position_t</innerclass>
    <innerclass refid="structhal_1_1servo_1_1range__error" prot="public">hal::servo::range_error</innerclass>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhal_1_1servo_1a3d66f0fb413e530eaa08853766874090" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>result&lt; <ref refid="structhal_1_1servo_1_1position__t" kindref="compound">position_t</ref> &gt;</type>
        <definition>result&lt;position_t&gt; hal::servo::position</definition>
        <argsstring>(hal::degrees p_position)</argsstring>
        <name>position</name>
        <param>
          <type><ref refid="namespacehal_1a69b7f93f81eb80e25fbaefa924af5748" kindref="member">hal::degrees</ref></type>
          <declname>p_position</declname>
        </param>
        <briefdescription>
<para>Set the position of the servo&apos;s output shaft. </para>
        </briefdescription>
        <detaileddescription>
<para>Position is the rotational position as a angle in degrees that the caller wants the shaft to rotate to. The allowed range of positions is defined by the servo itself. Many servos have intrinsic limits to their range.</para>
<para>Developers must choose servos that fit the range for their applications. Applications must clearly define the range that they require in order to perform correctly.</para>
<para>The velocity in which the servo shaft moves is not defined by this function but is either intrinsic to the servo or a configuration of the servo.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_position</parametername>
</parameternamelist>
<parameterdescription>
<para>- the position to move the servo shaft in degrees. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result&lt;position_t&gt; - success or failure </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::errc::invalid_argument</parametername>
</parameternamelist>
<parameterdescription>
<para>- when position exceeds the range of the servo. When this error occurs, the guaranteed behavior is that the servo keeps its last set position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="structhal_1_1servo_1_1range__error" kindref="compound">hal::servo::range_error</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>- when position exceeds the range of the servo. Provides details about the min and max range of the servo. When this error occurs, the guaranteed behavior is that the servo keeps its last set position. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/servo.hpp" line="80" column="11" bodyfile="libraries/include/libhal/servo.hpp" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1servo_1a51214959311c016496ee0edf58bff487" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual hal::servo::~servo</definition>
        <argsstring>()=default</argsstring>
        <name>~servo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/servo.hpp" line="85" column="11"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhal_1_1servo_1a9d581ffd1963fd9e4c7a1e7ab0391e8d" prot="private" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>result&lt; <ref refid="structhal_1_1servo_1_1position__t" kindref="compound">position_t</ref> &gt;</type>
        <definition>virtual result&lt;position_t&gt; hal::servo::driver_position</definition>
        <argsstring>(hal::degrees p_position)=0</argsstring>
        <name>driver_position</name>
        <reimplementedby refid="classhal_1_1rmd_1_1drc__servo_1a5ea6200c9e53500b583a04425402fbc9">driver_position</reimplementedby>
        <reimplementedby refid="classhal_1_1rmd_1_1mc__x__servo_1ac4616f8ec6584f3d71df498bfb3c677c">driver_position</reimplementedby>
        <reimplementedby refid="classhal_1_1rc__servo_1a9726713e89bf073ee57ca3951302213a">driver_position</reimplementedby>
        <param>
          <type><ref refid="namespacehal_1a69b7f93f81eb80e25fbaefa924af5748" kindref="member">hal::degrees</ref></type>
          <declname>p_position</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal/servo.hpp" line="88" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Hardware abstraction for a closed loop position controlled rotational actuator. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>hal::rc_servo</label>
        <link refid="classhal_1_1rc__servo"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>hal::servo</label>
        <link refid="classhal_1_1servo"/>
      </node>
      <node id="3">
        <label>hal::rmd::drc_servo</label>
        <link refid="classhal_1_1rmd_1_1drc__servo"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>hal::rmd::mc_x_servo</label>
        <link refid="classhal_1_1rmd_1_1mc__x__servo"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="libraries/include/libhal/servo.hpp" line="26" column="1" bodyfile="libraries/include/libhal/servo.hpp" bodystart="27" bodyend="89"/>
    <listofallmembers>
      <member refid="classhal_1_1servo_1a9d581ffd1963fd9e4c7a1e7ab0391e8d" prot="private" virt="pure-virtual"><scope>hal::servo</scope><name>driver_position</name></member>
      <member refid="classhal_1_1servo_1a3d66f0fb413e530eaa08853766874090" prot="public" virt="non-virtual"><scope>hal::servo</scope><name>position</name></member>
      <member refid="classhal_1_1servo_1a51214959311c016496ee0edf58bff487" prot="public" virt="virtual"><scope>hal::servo</scope><name>~servo</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
