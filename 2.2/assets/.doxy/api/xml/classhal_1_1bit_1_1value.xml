<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhal_1_1bit_1_1value" kind="class" language="C++" prot="public">
    <compoundname>hal::bit::value</compoundname>
    <derivedcompoundref refid="classhal_1_1bit_1_1modify" prot="public" virt="non-virtual">hal::bit::modify&lt; T &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>std::unsigned_integral</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classhal_1_1bit_1_1value_1a8b6a2c6c289452bd8326a44759fa1594" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr std::uint32_t</type>
        <definition>constexpr std::uint32_t hal::bit::value&lt; T &gt;::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <initializer>= sizeof(T) * 8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="243" column="34" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="243" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classhal_1_1bit_1_1value_1ae08a7622c189b16791ce55e6ed17a0c2" prot="protected" static="no" mutable="no">
        <type>T</type>
        <definition>T hal::bit::value&lt; T &gt;::m_value</definition>
        <argsstring></argsstring>
        <name>m_value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="360" column="5" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="360" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhal_1_1bit_1_1value_1abd559de040fde1a2d446877f0da3294f" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hal::bit::value&lt; T &gt;::value</definition>
        <argsstring>(T p_initial_value=0)</argsstring>
        <name>value</name>
        <param>
          <type>T</type>
          <declname>p_initial_value</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="245" column="13" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="245" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1bit_1_1value_1a930d9996ecd973ae92ada5efb4a8de08" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="structhal_1_1bit_1_1mask" kindref="compound">mask</ref></type>
            <declname>field</declname>
            <defname>field</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto &amp;</type>
        <definition>constexpr auto&amp; hal::bit::value&lt; T &gt;::set</definition>
        <argsstring>()</argsstring>
        <name>set</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="251" column="18" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="251" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1bit_1_1value_1a2b62478da6d4a0298a607734e534d887" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto &amp;</type>
        <definition>constexpr auto&amp; hal::bit::value&lt; T &gt;::set</definition>
        <argsstring>(mask p_field)</argsstring>
        <name>set</name>
        <param>
          <type><ref refid="structhal_1_1bit_1_1mask" kindref="compound">mask</ref></type>
          <declname>p_field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="262" column="18" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="262" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1bit_1_1value_1acad10313da8842379dc1a4b93305f68d" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="structhal_1_1bit_1_1mask" kindref="compound">mask</ref></type>
            <declname>field</declname>
            <defname>field</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto &amp;</type>
        <definition>constexpr auto&amp; hal::bit::value&lt; T &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="272" column="18" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="272" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1bit_1_1value_1ac8f1c8cc21a133c6d460151eee1faae2" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto &amp;</type>
        <definition>constexpr auto&amp; hal::bit::value&lt; T &gt;::clear</definition>
        <argsstring>(mask p_field)</argsstring>
        <name>clear</name>
        <param>
          <type><ref refid="structhal_1_1bit_1_1mask" kindref="compound">mask</ref></type>
          <declname>p_field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="284" column="18" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="284" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1bit_1_1value_1aaec471cb791d9988cf7a6bdf81ec6645" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="structhal_1_1bit_1_1mask" kindref="compound">mask</ref></type>
            <declname>field</declname>
            <defname>field</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto &amp;</type>
        <definition>constexpr auto&amp; hal::bit::value&lt; T &gt;::toggle</definition>
        <argsstring>()</argsstring>
        <name>toggle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="295" column="18" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="295" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1bit_1_1value_1a264c380d277335767762057aca84c2bc" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto &amp;</type>
        <definition>constexpr auto&amp; hal::bit::value&lt; T &gt;::toggle</definition>
        <argsstring>(mask p_field)</argsstring>
        <name>toggle</name>
        <param>
          <type><ref refid="structhal_1_1bit_1_1mask" kindref="compound">mask</ref></type>
          <declname>p_field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="307" column="18" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="307" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1bit_1_1value_1a5da8aab7cf54ce5a9395f901d93e7072" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type><ref refid="structhal_1_1bit_1_1mask" kindref="compound">mask</ref></type>
            <declname>field</declname>
            <defname>field</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto &amp;</type>
        <definition>constexpr auto&amp; hal::bit::value&lt; T &gt;::insert</definition>
        <argsstring>(std::unsigned_integral auto p_value)</argsstring>
        <name>insert</name>
        <param>
          <type>std::unsigned_integral auto</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="317" column="18" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="317" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1bit_1_1value_1a02140ca18843c144934de820f23cd700" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr auto &amp;</type>
        <definition>constexpr auto&amp; hal::bit::value&lt; T &gt;::insert</definition>
        <argsstring>(mask p_field, std::unsigned_integral auto p_value)</argsstring>
        <name>insert</name>
        <param>
          <type><ref refid="structhal_1_1bit_1_1mask" kindref="compound">mask</ref></type>
          <declname>p_field</declname>
        </param>
        <param>
          <type>std::unsigned_integral auto</type>
          <declname>p_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="333" column="18" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="333" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1bit_1_1value_1a5a197f52820ff35dd39970aba0b580aa" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>std::integral</type>
            <declname>U</declname>
            <defname>U</defname>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto hal::bit::value&lt; T &gt;::to</definition>
        <argsstring>()</argsstring>
        <name>to</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="349" column="19" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="349" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1bit_1_1value_1a96e362157acb8438c1b354ca73d4880e" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr T</type>
        <definition>constexpr T hal::bit::value&lt; T &gt;::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/bit.hpp" line="354" column="16" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="354" bodyend="357"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>hal::bit::value&lt; T &gt;</label>
        <link refid="classhal_1_1bit_1_1value"/>
      </node>
      <node id="2">
        <label>hal::bit::modify&lt; T &gt;</label>
        <link refid="classhal_1_1bit_1_1modify"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>T</label>
      </node>
      <node id="1">
        <label>hal::bit::value&lt; T &gt;</label>
        <link refid="classhal_1_1bit_1_1value"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_value</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="libraries/include/libhal-util/bit.hpp" line="240" column="1" bodyfile="libraries/include/libhal-util/bit.hpp" bodystart="241" bodyend="361"/>
    <listofallmembers>
      <member refid="classhal_1_1bit_1_1value_1acad10313da8842379dc1a4b93305f68d" prot="public" virt="non-virtual"><scope>hal::bit::value</scope><name>clear</name></member>
      <member refid="classhal_1_1bit_1_1value_1ac8f1c8cc21a133c6d460151eee1faae2" prot="public" virt="non-virtual"><scope>hal::bit::value</scope><name>clear</name></member>
      <member refid="classhal_1_1bit_1_1value_1a96e362157acb8438c1b354ca73d4880e" prot="public" virt="non-virtual"><scope>hal::bit::value</scope><name>get</name></member>
      <member refid="classhal_1_1bit_1_1value_1a5da8aab7cf54ce5a9395f901d93e7072" prot="public" virt="non-virtual"><scope>hal::bit::value</scope><name>insert</name></member>
      <member refid="classhal_1_1bit_1_1value_1a02140ca18843c144934de820f23cd700" prot="public" virt="non-virtual"><scope>hal::bit::value</scope><name>insert</name></member>
      <member refid="classhal_1_1bit_1_1value_1ae08a7622c189b16791ce55e6ed17a0c2" prot="protected" virt="non-virtual"><scope>hal::bit::value</scope><name>m_value</name></member>
      <member refid="classhal_1_1bit_1_1value_1a930d9996ecd973ae92ada5efb4a8de08" prot="public" virt="non-virtual"><scope>hal::bit::value</scope><name>set</name></member>
      <member refid="classhal_1_1bit_1_1value_1a2b62478da6d4a0298a607734e534d887" prot="public" virt="non-virtual"><scope>hal::bit::value</scope><name>set</name></member>
      <member refid="classhal_1_1bit_1_1value_1a5a197f52820ff35dd39970aba0b580aa" prot="public" virt="non-virtual"><scope>hal::bit::value</scope><name>to</name></member>
      <member refid="classhal_1_1bit_1_1value_1aaec471cb791d9988cf7a6bdf81ec6645" prot="public" virt="non-virtual"><scope>hal::bit::value</scope><name>toggle</name></member>
      <member refid="classhal_1_1bit_1_1value_1a264c380d277335767762057aca84c2bc" prot="public" virt="non-virtual"><scope>hal::bit::value</scope><name>toggle</name></member>
      <member refid="classhal_1_1bit_1_1value_1abd559de040fde1a2d446877f0da3294f" prot="public" virt="non-virtual"><scope>hal::bit::value</scope><name>value</name></member>
      <member refid="classhal_1_1bit_1_1value_1a8b6a2c6c289452bd8326a44759fa1594" prot="public" virt="non-virtual"><scope>hal::bit::value</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
