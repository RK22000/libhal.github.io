<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhal_1_1rmd_1_1mc__x" kind="class" language="C++" prot="public">
    <compoundname>hal::rmd::mc_x</compoundname>
    <includes refid="mc__x_8hpp" local="no">mc_x.hpp</includes>
    <innerclass refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t" prot="public">hal::rmd::mc_x::feedback_t</innerclass>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="classhal_1_1rmd_1_1mc__x_1a034cd99ca06a227704fc40009d72882f" prot="public" static="no" strong="yes">
        <type>hal::byte</type>
        <name>read</name>
        <enumvalue id="classhal_1_1rmd_1_1mc__x_1a034cd99ca06a227704fc40009d72882fa3c857b542aed85edfa62b5993ebc4e81" prot="public">
          <name>multi_turns_angle</name>
          <initializer>= 0x92</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhal_1_1rmd_1_1mc__x_1a034cd99ca06a227704fc40009d72882fad9981bf708d5b5a37e0c4c0154e809dd" prot="public">
          <name>status_1_and_error_flags</name>
          <initializer>= 0x9A</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhal_1_1rmd_1_1mc__x_1a034cd99ca06a227704fc40009d72882fa980f145982bb1436447679df03b0e438" prot="public">
          <name>status_2</name>
          <initializer>= 0x9C</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Commands that can be issued to a RMD-X motor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="37" column="3" bodyfile="libraries/include/libhal-rmd/mc_x.hpp" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="enum" id="classhal_1_1rmd_1_1mc__x_1ac33b00e888f281950188389e878660bb" prot="public" static="no" strong="yes">
        <type>hal::byte</type>
        <name>actuate</name>
        <enumvalue id="classhal_1_1rmd_1_1mc__x_1ac33b00e888f281950188389e878660bbae9ee2651c12f09e358eb1da8545952a7" prot="public">
          <name>torque</name>
          <initializer>= 0xA1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhal_1_1rmd_1_1mc__x_1ac33b00e888f281950188389e878660bbace4ef3ec98443ed10da505114b58f153" prot="public">
          <name>speed</name>
          <initializer>= 0xA2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhal_1_1rmd_1_1mc__x_1ac33b00e888f281950188389e878660bba4757fe07fd492a8be0ea6a760d683d6e" prot="public">
          <name>position</name>
          <initializer>= 0xA5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Commands for actuate the motor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="45" column="3" bodyfile="libraries/include/libhal-rmd/mc_x.hpp" bodystart="46" bodyend="50"/>
      </memberdef>
      <memberdef kind="enum" id="classhal_1_1rmd_1_1mc__x_1a91cf7f5ed54f8a97f9decf8931e61c0d" prot="public" static="no" strong="yes">
        <type>hal::byte</type>
        <name>write</name>
        <briefdescription>
<para>Commands for updating motor configuration data. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="53" column="3" bodyfile="libraries/include/libhal-rmd/mc_x.hpp" bodystart="54" bodyend="56"/>
      </memberdef>
      <memberdef kind="enum" id="classhal_1_1rmd_1_1mc__x_1a8261bc62791c5bfbb098e83bc0824f9a" prot="public" static="no" strong="yes">
        <type>hal::byte</type>
        <name>system</name>
        <enumvalue id="classhal_1_1rmd_1_1mc__x_1a8261bc62791c5bfbb098e83bc0824f9aa3262d48df5d75e3452f0f16b313b7808" prot="public">
          <name>off</name>
          <initializer>= 0x80</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classhal_1_1rmd_1_1mc__x_1a8261bc62791c5bfbb098e83bc0824f9aaef399b2d446bb37b7c32ad2cc1b6045b" prot="public">
          <name>stop</name>
          <initializer>= 0x81</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Commands for controlling the motor as a whole. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="59" column="3" bodyfile="libraries/include/libhal-rmd/mc_x.hpp" bodystart="60" bodyend="63"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classhal_1_1rmd_1_1mc__x_1aad1af49df48f347d3652f7e3eaf4dd46" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct</type>
        <definition>friend struct response_waiter</definition>
        <argsstring></argsstring>
        <name>response_waiter</name>
        <param>
          <type>response_waiter</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="201" column="3" bodyfile="libraries/include/libhal-rmd/mc_x.hpp" bodystart="201" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhal_1_1rmd_1_1mc__x_1afcec7845a85745a83012172c49e3973b" prot="private" static="no" mutable="no">
        <type><ref refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t" kindref="compound">feedback_t</ref></type>
        <definition>feedback_t hal::rmd::mc_x::m_feedback</definition>
        <argsstring></argsstring>
        <name>m_feedback</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="203" column="14" bodyfile="libraries/include/libhal-rmd/mc_x.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1rmd_1_1mc__x_1aa0dc78ccf19e177c91327152565d7c47" prot="private" static="no" mutable="no">
        <type><ref refid="classhal_1_1steady__clock" kindref="compound">hal::steady_clock</ref> *</type>
        <definition>hal::steady_clock* hal::rmd::mc_x::m_clock</definition>
        <argsstring></argsstring>
        <name>m_clock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="204" column="21" bodyfile="libraries/include/libhal-rmd/mc_x.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1rmd_1_1mc__x_1a6172bd86f0f526506476c7abf6ed63a2" prot="private" static="no" mutable="no">
        <type><ref refid="classhal_1_1can__router" kindref="compound">hal::can_router</ref> *</type>
        <definition>hal::can_router* hal::rmd::mc_x::m_router</definition>
        <argsstring></argsstring>
        <name>m_router</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="205" column="19" bodyfile="libraries/include/libhal-rmd/mc_x.hpp" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1rmd_1_1mc__x_1a74aec5429738614ff18cf5571736b987" prot="private" static="no" mutable="no">
        <type>hal::can_router::route_item</type>
        <definition>hal::can_router::route_item hal::rmd::mc_x::m_route_item</definition>
        <argsstring></argsstring>
        <name>m_route_item</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="206" column="31" bodyfile="libraries/include/libhal-rmd/mc_x.hpp" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1rmd_1_1mc__x_1aa5f3a6ec11bd69a2f904faf84a93ec82" prot="private" static="no" mutable="no">
        <type>float</type>
        <definition>float hal::rmd::mc_x::m_gear_ratio</definition>
        <argsstring></argsstring>
        <name>m_gear_ratio</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="207" column="9" bodyfile="libraries/include/libhal-rmd/mc_x.hpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1rmd_1_1mc__x_1a10643c0ae87cbac5b782da2d848f71ef" prot="private" static="no" mutable="no">
        <type><ref refid="classhal_1_1can_1ae85571b4f7aac93fca8503aafcb32a47" kindref="member">can::id_t</ref></type>
        <definition>can::id_t hal::rmd::mc_x::m_device_id</definition>
        <argsstring></argsstring>
        <name>m_device_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="208" column="13" bodyfile="libraries/include/libhal-rmd/mc_x.hpp" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1rmd_1_1mc__x_1aede4533f7d2dee966eeb693b35fb3bbe" prot="private" static="no" mutable="no">
        <type>hal::time_duration</type>
        <definition>hal::time_duration hal::rmd::mc_x::m_max_response_time</definition>
        <argsstring></argsstring>
        <name>m_max_response_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="209" column="22" bodyfile="libraries/include/libhal-rmd/mc_x.hpp" bodystart="209" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classhal_1_1rmd_1_1mc__x_1a21abbeb8b13b84b8eb2ba55b5587f7e3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>result&lt; <ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref> &gt;</type>
        <definition>static result&lt;mc_x&gt; hal::rmd::mc_x::create</definition>
        <argsstring>(hal::can_router &amp;p_router, hal::steady_clock &amp;p_clock, float p_gear_ratio, can::id_t device_id, hal::time_duration p_max_response_time=std::chrono::milliseconds(10))</argsstring>
        <name>create</name>
        <param>
          <type><ref refid="classhal_1_1can__router" kindref="compound">hal::can_router</ref> &amp;</type>
          <declname>p_router</declname>
        </param>
        <param>
          <type><ref refid="classhal_1_1steady__clock" kindref="compound">hal::steady_clock</ref> &amp;</type>
          <declname>p_clock</declname>
        </param>
        <param>
          <type>float</type>
          <declname>p_gear_ratio</declname>
        </param>
        <param>
          <type><ref refid="classhal_1_1can_1ae85571b4f7aac93fca8503aafcb32a47" kindref="member">can::id_t</ref></type>
          <declname>device_id</declname>
        </param>
        <param>
          <type>hal::time_duration</type>
          <declname>p_max_response_time</declname>
          <defval>std::chrono::milliseconds(10)</defval>
        </param>
        <briefdescription>
<para>Create a new <ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref> device driver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_router</parametername>
</parameternamelist>
<parameterdescription>
<para>- can router to use </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_clock</parametername>
</parameternamelist>
<parameterdescription>
<para>- clocked used to determine timeouts </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_gear_ratio</parametername>
</parameternamelist>
<parameterdescription>
<para>- gear ratio of the motor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>device_id</parametername>
</parameternamelist>
<parameterdescription>
<para>- The CAN ID of the motor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_max_response_time</parametername>
</parameternamelist>
<parameterdescription>
<para>- maximum amount of time to wait for a response from the motor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result&lt;mc_x&gt; - the <ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref> driver or an error (no errors are currently generated from this function) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="117" column="18"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhal_1_1rmd_1_1mc__x_1aa024139908e3c5c7b82b41e88020e15e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hal::rmd::mc_x::mc_x</definition>
        <argsstring>(mc_x &amp;p_other)=delete</argsstring>
        <name>mc_x</name>
        <param>
          <type><ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref> &amp;</type>
          <declname>p_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="124" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1rmd_1_1mc__x_1aebad70524fdc229219124f787b99e3ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref> &amp;</type>
        <definition>mc_x&amp; hal::rmd::mc_x::operator=</definition>
        <argsstring>(mc_x &amp;p_other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref> &amp;</type>
          <declname>p_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="125" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1rmd_1_1mc__x_1a3fe6c41af37887f7d4e5fe527542f6be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hal::rmd::mc_x::mc_x</definition>
        <argsstring>(mc_x &amp;&amp;p_other)</argsstring>
        <name>mc_x</name>
        <param>
          <type><ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref> &amp;&amp;</type>
          <declname>p_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="126" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1rmd_1_1mc__x_1aa4b569263491afca203cd060d87808a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref> &amp;</type>
        <definition>mc_x&amp; hal::rmd::mc_x::operator=</definition>
        <argsstring>(mc_x &amp;&amp;p_other)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classhal_1_1rmd_1_1mc__x" kindref="compound">mc_x</ref> &amp;&amp;</type>
          <declname>p_other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="127" column="8"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1rmd_1_1mc__x_1ae20843a615f0f606dc6b02188e5ea49b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t" kindref="compound">feedback_t</ref> &amp;</type>
        <definition>const feedback_t&amp; hal::rmd::mc_x::feedback</definition>
        <argsstring>() const</argsstring>
        <name>feedback</name>
        <briefdescription>
<para>Get feedback about the motor. </para>
        </briefdescription>
        <detaileddescription>
<para>This object contains cached data from each response returned from the motor. It is updated when any of the control or feedback APIs are called. This object will not update without one of those APIs being called.</para>
<para><simplesect kind="return"><para>const <ref refid="structhal_1_1rmd_1_1mc__x_1_1feedback__t" kindref="compound">feedback_t</ref>&amp; - information about the motor </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::errc::timed_out</parametername>
</parameternamelist>
<parameterdescription>
<para>- if a response is not returned within the max response time set at creation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="140" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1rmd_1_1mc__x_1a59dd3fd0131e0ee1dc9f40c4b02156ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>status</type>
        <definition>status hal::rmd::mc_x::feedback_request</definition>
        <argsstring>(read p_command)</argsstring>
        <name>feedback_request</name>
        <param>
          <type><ref refid="classhal_1_1rmd_1_1mc__x_1a034cd99ca06a227704fc40009d72882f" kindref="member">read</ref></type>
          <declname>p_command</declname>
        </param>
        <briefdescription>
<para>Request feedback from the motor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_command</parametername>
</parameternamelist>
<parameterdescription>
<para>- the request to command the motor to respond with </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status - success or failure </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::errc::timed_out</parametername>
</parameternamelist>
<parameterdescription>
<para>- if a response is not returned within the max response time set at creation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="150" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1rmd_1_1mc__x_1ae358be8a12c5202e2f8c60eab6deefa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>status</type>
        <definition>status hal::rmd::mc_x::velocity_control</definition>
        <argsstring>(rpm p_speed)</argsstring>
        <name>velocity_control</name>
        <param>
          <type>rpm</type>
          <declname>p_speed</declname>
        </param>
        <briefdescription>
<para>Rotate motor shaft at the designated speed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_speed</parametername>
</parameternamelist>
<parameterdescription>
<para>- speed in rpm to move the motor shaft at. Positive values rotate the motor shaft clockwise, negative values rotate the motor shaft counter-clockwise assuming you are looking directly at the motor shaft. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status - success or failure </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::errc::timed_out</parametername>
</parameternamelist>
<parameterdescription>
<para>- if a response is not returned within the max response time set at creation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="162" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1rmd_1_1mc__x_1ad07c5eb423626c143aa9a3fcf11ec29e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>status</type>
        <definition>status hal::rmd::mc_x::position_control</definition>
        <argsstring>(degrees p_angle, rpm speed)</argsstring>
        <name>position_control</name>
        <param>
          <type>degrees</type>
          <declname>p_angle</declname>
        </param>
        <param>
          <type>rpm</type>
          <declname>speed</declname>
        </param>
        <briefdescription>
<para>Move motor shaft to a specific angle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_angle</parametername>
</parameternamelist>
<parameterdescription>
<para>- angle position in degrees to move to </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>- speed in rpm&apos;s </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status - success or failure </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::errc::timed_out</parametername>
</parameternamelist>
<parameterdescription>
<para>- if a response is not returned within the max response time set at creation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="173" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1rmd_1_1mc__x_1a18a257ff8ad6487b15b02f4ce755f154" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>status</type>
        <definition>status hal::rmd::mc_x::system_control</definition>
        <argsstring>(system p_system_command)</argsstring>
        <name>system_control</name>
        <param>
          <type><ref refid="classhal_1_1rmd_1_1mc__x_1a8261bc62791c5bfbb098e83bc0824f9a" kindref="member">system</ref></type>
          <declname>p_system_command</declname>
        </param>
        <briefdescription>
<para>Send system control commands to the device. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_system_command</parametername>
</parameternamelist>
<parameterdescription>
<para>- system control command to send to the device </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>status - success or failure status </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::errc::timed_out</parametername>
</parameternamelist>
<parameterdescription>
<para>- if a response is not returned within the max response time set at creation. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="183" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1rmd_1_1mc__x_1a6d069a733714652f0c32e8de3fb45ede" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void hal::rmd::mc_x::operator()</definition>
        <argsstring>(const can::message_t &amp;p_message)</argsstring>
        <name>operator()</name>
        <param>
          <type>const <ref refid="structhal_1_1can_1_1message__t" kindref="compound">can::message_t</ref> &amp;</type>
          <declname>p_message</declname>
        </param>
        <briefdescription>
<para>Handle messages from the can bus with this devices ID. </para>
        </briefdescription>
        <detaileddescription>
<para>Meant mostly for testing purposes.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_message</parametername>
</parameternamelist>
<parameterdescription>
<para>- message received from the bus </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="192" column="8"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhal_1_1rmd_1_1mc__x_1a898018d95d1deb30af5e3dff9f722fe9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hal::rmd::mc_x::mc_x</definition>
        <argsstring>(hal::can_router &amp;p_router, hal::steady_clock &amp;p_clock, float p_gear_ratio, can::id_t p_device_id, hal::time_duration p_max_response_time)</argsstring>
        <name>mc_x</name>
        <param>
          <type><ref refid="classhal_1_1can__router" kindref="compound">hal::can_router</ref> &amp;</type>
          <declname>p_router</declname>
        </param>
        <param>
          <type><ref refid="classhal_1_1steady__clock" kindref="compound">hal::steady_clock</ref> &amp;</type>
          <declname>p_clock</declname>
        </param>
        <param>
          <type>float</type>
          <declname>p_gear_ratio</declname>
        </param>
        <param>
          <type><ref refid="classhal_1_1can_1ae85571b4f7aac93fca8503aafcb32a47" kindref="member">can::id_t</ref></type>
          <declname>p_device_id</declname>
        </param>
        <param>
          <type>hal::time_duration</type>
          <declname>p_max_response_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-rmd/mc_x.hpp" line="195" column="3"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Driver for RMD series motors equip with the MC-X motor driver. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/include/libhal-rmd/mc_x.hpp" line="33" column="1" bodyfile="libraries/include/libhal-rmd/mc_x.hpp" bodystart="34" bodyend="210"/>
    <listofallmembers>
      <member refid="classhal_1_1rmd_1_1mc__x_1ac33b00e888f281950188389e878660bb" prot="public" virt="non-virtual"><scope>hal::rmd::mc_x</scope><name>actuate</name></member>
      <member refid="classhal_1_1rmd_1_1mc__x_1a21abbeb8b13b84b8eb2ba55b5587f7e3" prot="public" virt="non-virtual"><scope>hal::rmd::mc_x</scope><name>create</name></member>
      <member refid="classhal_1_1rmd_1_1mc__x_1ae20843a615f0f606dc6b02188e5ea49b" prot="public" virt="non-virtual"><scope>hal::rmd::mc_x</scope><name>feedback</name></member>
      <member refid="classhal_1_1rmd_1_1mc__x_1a59dd3fd0131e0ee1dc9f40c4b02156ef" prot="public" virt="non-virtual"><scope>hal::rmd::mc_x</scope><name>feedback_request</name></member>
      <member refid="classhal_1_1rmd_1_1mc__x_1aa0dc78ccf19e177c91327152565d7c47" prot="private" virt="non-virtual"><scope>hal::rmd::mc_x</scope><name>m_clock</name></member>
      <member refid="classhal_1_1rmd_1_1mc__x_1a10643c0ae87cbac5b782da2d848f71ef" prot="private" virt="non-virtual"><scope>hal::rmd::mc_x</scope><name>m_device_id</name></member>
      <member refid="classhal_1_1rmd_1_1mc__x_1afcec7845a85745a83012172c49e3973b" prot="private" virt="non-virtual"><scope>hal::rmd::mc_x</scope><name>m_feedback</name></member>
      <member refid="classhal_1_1rmd_1_1mc__x_1aa5f3a6ec11bd69a2f904faf84a93ec82" prot="private" virt="non-virtual"><scope>hal::rmd::mc_x</scope><name>m_gear_ratio</name></member>
      <member refid="classhal_1_1rmd_1_1mc__x_1aede4533f7d2dee966eeb693b35fb3bbe" prot="private" virt="non-virtual"><scope>hal::rmd::mc_x</scope><name>m_max_response_time</name></member>
      <member refid="classhal_1_1rmd_1_1mc__x_1a74aec5429738614ff18cf5571736b987" prot="private" virt="non-virtual"><scope>hal::rmd::mc_x</scope><name>m_route_item</name></member>
      <member refid="classhal_1_1rmd_1_1mc__x_1a6172bd86f0f526506476c7abf6ed63a2" prot="private" virt="non-virtual"><scope>hal::rmd::mc_x</scope><name>m_router</name></member>
      <member refid="classhal_1_1rmd_1_1mc__x_1aa024139908e3c5c7b82b41e88020e15e" prot="public" virt="non-virtual"><scope>hal::rmd::mc_x</scope><name>mc_x</name></member>
      <member refid="classhal_1_1rmd_1_1mc__x_1a3fe6c41af37887f7d4e5fe527542f6be" prot="public" virt="non-virtual"><scope>hal::rmd::mc_x</scope><name>mc_x</name></member>
      <member refid="classhal_1_1rmd_1_1mc__x_1a898018d95d1deb30af5e3dff9f722fe9" prot="private" virt="non-virtual"><scope>hal::rmd::mc_x</scope><name>mc_x</name></member>
      <member refid="classhal_1_1rmd_1_1mc__x_1a6d069a733714652f0c32e8de3fb45ede" prot="public" virt="non-virtual"><scope>hal::rmd::mc_x</scope><name>operator()</name></member>
      <member refid="classhal_1_1rmd_1_1mc__x_1aebad70524fdc229219124f787b99e3ad" prot="public" virt="non-virtual"><scope>hal::rmd::mc_x</scope><name>operator=</name></member>
      <member refid="classhal_1_1rmd_1_1mc__x_1aa4b569263491afca203cd060d87808a8" prot="public" virt="non-virtual"><scope>hal::rmd::mc_x</scope><name>operator=</name></member>
      <member refid="classhal_1_1rmd_1_1mc__x_1ad07c5eb423626c143aa9a3fcf11ec29e" prot="public" virt="non-virtual"><scope>hal::rmd::mc_x</scope><name>position_control</name></member>
      <member refid="classhal_1_1rmd_1_1mc__x_1a034cd99ca06a227704fc40009d72882f" prot="public" virt="non-virtual"><scope>hal::rmd::mc_x</scope><name>read</name></member>
      <member refid="classhal_1_1rmd_1_1mc__x_1aad1af49df48f347d3652f7e3eaf4dd46" prot="private" virt="non-virtual"><scope>hal::rmd::mc_x</scope><name>response_waiter</name></member>
      <member refid="classhal_1_1rmd_1_1mc__x_1a8261bc62791c5bfbb098e83bc0824f9a" prot="public" virt="non-virtual"><scope>hal::rmd::mc_x</scope><name>system</name></member>
      <member refid="classhal_1_1rmd_1_1mc__x_1a18a257ff8ad6487b15b02f4ce755f154" prot="public" virt="non-virtual"><scope>hal::rmd::mc_x</scope><name>system_control</name></member>
      <member refid="classhal_1_1rmd_1_1mc__x_1ae358be8a12c5202e2f8c60eab6deefa6" prot="public" virt="non-virtual"><scope>hal::rmd::mc_x</scope><name>velocity_control</name></member>
      <member refid="classhal_1_1rmd_1_1mc__x_1a91cf7f5ed54f8a97f9decf8931e61c0d" prot="public" virt="non-virtual"><scope>hal::rmd::mc_x</scope><name>write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
