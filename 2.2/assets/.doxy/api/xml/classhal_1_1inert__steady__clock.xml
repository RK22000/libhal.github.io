<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhal_1_1inert__steady__clock" kind="class" language="C++" prot="public">
    <compoundname>hal::inert_steady_clock</compoundname>
    <basecompoundref refid="classhal_1_1steady__clock" prot="public" virt="non-virtual">hal::steady_clock</basecompoundref>
    <includes refid="inert__steady__clock_8hpp" local="no">inert_steady_clock.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhal_1_1inert__steady__clock_1ac470a9579c3c7615c31049ec692ee6c0" prot="private" static="no" mutable="no">
        <type><ref refid="structhal_1_1steady__clock_1_1frequency__t" kindref="compound">frequency_t</ref></type>
        <definition>frequency_t hal::inert_steady_clock::m_frequency</definition>
        <argsstring></argsstring>
        <name>m_frequency</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-soft/inert_drivers/inert_steady_clock.hpp" line="60" column="15" bodyfile="libraries/include/libhal-soft/inert_drivers/inert_steady_clock.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1inert__steady__clock_1a17cd918350dada8331937512f3b39cd3" prot="private" static="no" mutable="no">
        <type><ref refid="structhal_1_1steady__clock_1_1uptime__t" kindref="compound">uptime_t</ref></type>
        <definition>uptime_t hal::inert_steady_clock::m_uptime</definition>
        <argsstring></argsstring>
        <name>m_uptime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-soft/inert_drivers/inert_steady_clock.hpp" line="61" column="12" bodyfile="libraries/include/libhal-soft/inert_drivers/inert_steady_clock.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classhal_1_1inert__steady__clock_1af710dd3738585b834c05fd3d7b579482" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>result&lt; <ref refid="classhal_1_1inert__steady__clock" kindref="compound">inert_steady_clock</ref> &gt;</type>
        <definition>static result&lt;inert_steady_clock&gt; hal::inert_steady_clock::create</definition>
        <argsstring>(frequency_t p_frequency, uptime_t p_uptime)</argsstring>
        <name>create</name>
        <param>
          <type><ref refid="structhal_1_1steady__clock_1_1frequency__t" kindref="compound">frequency_t</ref></type>
          <declname>p_frequency</declname>
        </param>
        <param>
          <type><ref refid="structhal_1_1steady__clock_1_1uptime__t" kindref="compound">uptime_t</ref></type>
          <declname>p_uptime</declname>
        </param>
        <briefdescription>
<para>Factory function to create <ref refid="classhal_1_1inert__steady__clock" kindref="compound">inert_steady_clock</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_frequency</parametername>
</parameternamelist>
<parameterdescription>
<para>- frequency_t object to return when <ref refid="classhal_1_1steady__clock_1a2bb1983d9fa94b9fe5bdb8159de03220" kindref="member">frequency()</ref> is called </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_uptime</parametername>
</parameternamelist>
<parameterdescription>
<para>- uptime_t object with the starting value that will be returned when <ref refid="classhal_1_1steady__clock_1ae36599416bdd64434e56b2ff6a2c2262" kindref="member">uptime()</ref> is called. The uptime will increment by 1 each time <ref refid="classhal_1_1steady__clock_1ae36599416bdd64434e56b2ff6a2c2262" kindref="member">uptime()</ref> is called. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result&lt;inert_steady_clock&gt; - Constructed <ref refid="classhal_1_1inert__steady__clock" kindref="compound">inert_steady_clock</ref> object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-soft/inert_drivers/inert_steady_clock.hpp" line="37" column="17" bodyfile="libraries/include/libhal-soft/inert_drivers/inert_steady_clock.hpp" bodystart="37" bodyend="41"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classhal_1_1inert__steady__clock_1a2f12a46500198ab92e543d5d088e9daa" prot="private" static="no" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr</type>
        <definition>constexpr hal::inert_steady_clock::inert_steady_clock</definition>
        <argsstring>(frequency_t p_frequency, uptime_t p_uptime)</argsstring>
        <name>inert_steady_clock</name>
        <param>
          <type><ref refid="structhal_1_1steady__clock_1_1frequency__t" kindref="compound">frequency_t</ref></type>
          <declname>p_frequency</declname>
        </param>
        <param>
          <type><ref refid="structhal_1_1steady__clock_1_1uptime__t" kindref="compound">uptime_t</ref></type>
          <declname>p_uptime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-soft/inert_drivers/inert_steady_clock.hpp" line="44" column="13" bodyfile="libraries/include/libhal-soft/inert_drivers/inert_steady_clock.hpp" bodystart="44" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1inert__steady__clock_1a34538275c689754ba7fa830044b86f28" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="structhal_1_1steady__clock_1_1frequency__t" kindref="compound">frequency_t</ref></type>
        <definition>frequency_t hal::inert_steady_clock::driver_frequency</definition>
        <argsstring>()</argsstring>
        <name>driver_frequency</name>
        <reimplements refid="classhal_1_1steady__clock_1af69e8bc7e978529720cb18149241ba85">driver_frequency</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-soft/inert_drivers/inert_steady_clock.hpp" line="49" column="15" bodyfile="libraries/include/libhal-soft/inert_drivers/inert_steady_clock.hpp" bodystart="49" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1inert__steady__clock_1a26a6f7a94a6f303e06e7c42b7ca21a24" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="structhal_1_1steady__clock_1_1uptime__t" kindref="compound">uptime_t</ref></type>
        <definition>uptime_t hal::inert_steady_clock::driver_uptime</definition>
        <argsstring>()</argsstring>
        <name>driver_uptime</name>
        <reimplements refid="classhal_1_1steady__clock_1aa15e00cbbe00e98015aa86dbe016f812">driver_uptime</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-soft/inert_drivers/inert_steady_clock.hpp" line="54" column="12" bodyfile="libraries/include/libhal-soft/inert_drivers/inert_steady_clock.hpp" bodystart="54" bodyend="58"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Inert implementation of steady clock mechanism. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>hal::inert_steady_clock</label>
        <link refid="classhal_1_1inert__steady__clock"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hal::steady_clock</label>
        <link refid="classhal_1_1steady__clock"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>hal::inert_steady_clock</label>
        <link refid="classhal_1_1inert__steady__clock"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>hal::steady_clock</label>
        <link refid="classhal_1_1steady__clock"/>
      </node>
    </collaborationgraph>
    <location file="libraries/include/libhal-soft/inert_drivers/inert_steady_clock.hpp" line="24" column="1" bodyfile="libraries/include/libhal-soft/inert_drivers/inert_steady_clock.hpp" bodystart="25" bodyend="62"/>
    <listofallmembers>
      <member refid="classhal_1_1inert__steady__clock_1af710dd3738585b834c05fd3d7b579482" prot="public" virt="non-virtual"><scope>hal::inert_steady_clock</scope><name>create</name></member>
      <member refid="classhal_1_1inert__steady__clock_1a34538275c689754ba7fa830044b86f28" prot="private" virt="virtual"><scope>hal::inert_steady_clock</scope><name>driver_frequency</name></member>
      <member refid="classhal_1_1inert__steady__clock_1a26a6f7a94a6f303e06e7c42b7ca21a24" prot="private" virt="virtual"><scope>hal::inert_steady_clock</scope><name>driver_uptime</name></member>
      <member refid="classhal_1_1steady__clock_1a2bb1983d9fa94b9fe5bdb8159de03220" prot="public" virt="non-virtual"><scope>hal::inert_steady_clock</scope><name>frequency</name></member>
      <member refid="classhal_1_1inert__steady__clock_1a2f12a46500198ab92e543d5d088e9daa" prot="private" virt="non-virtual"><scope>hal::inert_steady_clock</scope><name>inert_steady_clock</name></member>
      <member refid="classhal_1_1inert__steady__clock_1ac470a9579c3c7615c31049ec692ee6c0" prot="private" virt="non-virtual"><scope>hal::inert_steady_clock</scope><name>m_frequency</name></member>
      <member refid="classhal_1_1inert__steady__clock_1a17cd918350dada8331937512f3b39cd3" prot="private" virt="non-virtual"><scope>hal::inert_steady_clock</scope><name>m_uptime</name></member>
      <member refid="classhal_1_1steady__clock_1ae36599416bdd64434e56b2ff6a2c2262" prot="public" virt="non-virtual"><scope>hal::inert_steady_clock</scope><name>uptime</name></member>
      <member refid="classhal_1_1steady__clock_1a8c1bf5a5f874b6971cd84e213afe6818" prot="public" virt="virtual"><scope>hal::inert_steady_clock</scope><name>~steady_clock</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
