<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classhal_1_1read__uint32" kind="class" language="C++" prot="public">
    <compoundname>hal::read_uint32</compoundname>
    <includes refid="serial__coroutines_8hpp" local="no">serial_coroutines.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classhal_1_1read__uint32_1a84f54cbcf953b8d2125ad399783f8a72" prot="private" static="no" mutable="no">
        <type><ref refid="classhal_1_1serial" kindref="compound">serial</ref> *</type>
        <definition>serial* hal::read_uint32::m_serial</definition>
        <argsstring></argsstring>
        <name>m_serial</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/serial_coroutines.hpp" line="336" column="10" bodyfile="libraries/include/libhal-util/serial_coroutines.hpp" bodystart="336" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1read__uint32_1a339504a48f426d1a9c99d9d68df4ff59" prot="private" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t hal::read_uint32::m_read_limit</definition>
        <argsstring></argsstring>
        <name>m_read_limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/serial_coroutines.hpp" line="337" column="10" bodyfile="libraries/include/libhal-util/serial_coroutines.hpp" bodystart="337" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1read__uint32_1aa15b88a704fc3bf91fb7da79482e3430" prot="private" static="no" mutable="no">
        <type>std::uint32_t</type>
        <definition>std::uint32_t hal::read_uint32::m_integer_value</definition>
        <argsstring></argsstring>
        <name>m_integer_value</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/serial_coroutines.hpp" line="338" column="17" bodyfile="libraries/include/libhal-util/serial_coroutines.hpp" bodystart="338" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1read__uint32_1aa2dcda16e4a5f5d52bf071518fd14bf3" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hal::read_uint32::m_found_digit</definition>
        <argsstring></argsstring>
        <name>m_found_digit</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/serial_coroutines.hpp" line="339" column="8" bodyfile="libraries/include/libhal-util/serial_coroutines.hpp" bodystart="339" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classhal_1_1read__uint32_1a1790212b5bec5b1356c5ac57d8899d8a" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool hal::read_uint32::m_finished</definition>
        <argsstring></argsstring>
        <name>m_finished</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/serial_coroutines.hpp" line="340" column="8" bodyfile="libraries/include/libhal-util/serial_coroutines.hpp" bodystart="340" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classhal_1_1read__uint32_1acc3c1598e7cd20832a76fc130fe7f32e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>hal::read_uint32::read_uint32</definition>
        <argsstring>(serial &amp;p_serial, size_t p_read_limit=32)</argsstring>
        <name>read_uint32</name>
        <param>
          <type><ref refid="classhal_1_1serial" kindref="compound">serial</ref> &amp;</type>
          <declname>p_serial</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>p_read_limit</declname>
          <defval>32</defval>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classhal_1_1read__uint32" kindref="compound">read_uint32</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p_serial</parametername>
</parameternamelist>
<parameterdescription>
<para>- serial port to skip through </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_read_limit</parametername>
</parameternamelist>
<parameterdescription>
<para>- the maximum number read attempts from the port before returning. A value 0 will result in no reads from the serial port. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/serial_coroutines.hpp" line="277" column="3" bodyfile="libraries/include/libhal-util/serial_coroutines.hpp" bodystart="277" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1read__uint32_1a3f76c03812a29aba5f9e81258f6de739" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>result&lt; <ref refid="libhal_2timeout_8hpp_1aadfba20b87ce09f21cc88f7c49e1bd60" kindref="member">work_state</ref> &gt;</type>
        <definition>result&lt;work_state&gt; hal::read_uint32::operator()</definition>
        <argsstring>()</argsstring>
        <name>operator()</name>
        <briefdescription>
<para>parse serial data and convert to an integer </para>
        </briefdescription>
        <detaileddescription>
<para>This function will return if an integer ws found or no more bytes in the serial port.</para>
<para>Call this function again to resume reading from the port.</para>
<para><simplesect kind="return"><para>result&lt;work_state&gt; - work_state::in_progress - if an integer hasn&apos;t been found </para>
</simplesect>
<simplesect kind="return"><para>result&lt;work_state&gt; - work_state::finished - integer has been found and a non-integer byte has also been found. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/serial_coroutines.hpp" line="296" column="10" bodyfile="libraries/include/libhal-util/serial_coroutines.hpp" bodystart="296" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="classhal_1_1read__uint32_1a8942693327c3c259bd225b5cca156d3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::optional&lt; uint32_t &gt;</type>
        <definition>std::optional&lt;uint32_t&gt; hal::read_uint32::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::optional&lt;uint32_t&gt; - integer if the parsing is finished or std::nullopt </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="libraries/include/libhal-util/serial_coroutines.hpp" line="327" column="17" bodyfile="libraries/include/libhal-util/serial_coroutines.hpp" bodystart="327" bodyend="333"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Read bytes from serial port and convert to integer. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="libraries/include/libhal-util/serial_coroutines.hpp" line="267" column="1" bodyfile="libraries/include/libhal-util/serial_coroutines.hpp" bodystart="268" bodyend="341"/>
    <listofallmembers>
      <member refid="classhal_1_1read__uint32_1a8942693327c3c259bd225b5cca156d3a" prot="public" virt="non-virtual"><scope>hal::read_uint32</scope><name>get</name></member>
      <member refid="classhal_1_1read__uint32_1a1790212b5bec5b1356c5ac57d8899d8a" prot="private" virt="non-virtual"><scope>hal::read_uint32</scope><name>m_finished</name></member>
      <member refid="classhal_1_1read__uint32_1aa2dcda16e4a5f5d52bf071518fd14bf3" prot="private" virt="non-virtual"><scope>hal::read_uint32</scope><name>m_found_digit</name></member>
      <member refid="classhal_1_1read__uint32_1aa15b88a704fc3bf91fb7da79482e3430" prot="private" virt="non-virtual"><scope>hal::read_uint32</scope><name>m_integer_value</name></member>
      <member refid="classhal_1_1read__uint32_1a339504a48f426d1a9c99d9d68df4ff59" prot="private" virt="non-virtual"><scope>hal::read_uint32</scope><name>m_read_limit</name></member>
      <member refid="classhal_1_1read__uint32_1a84f54cbcf953b8d2125ad399783f8a72" prot="private" virt="non-virtual"><scope>hal::read_uint32</scope><name>m_serial</name></member>
      <member refid="classhal_1_1read__uint32_1a3f76c03812a29aba5f9e81258f6de739" prot="public" virt="non-virtual"><scope>hal::read_uint32</scope><name>operator()</name></member>
      <member refid="classhal_1_1read__uint32_1acc3c1598e7cd20832a76fc130fe7f32e" prot="public" virt="non-virtual"><scope>hal::read_uint32</scope><name>read_uint32</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
