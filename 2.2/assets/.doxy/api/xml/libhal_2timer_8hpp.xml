<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="libhal_2timer_8hpp" kind="file" language="C++">
    <compoundname>timer.hpp</compoundname>
    <includes local="no">chrono</includes>
    <includes refid="error_8hpp" local="yes">error.hpp</includes>
    <includes refid="functional_8hpp" local="yes">functional.hpp</includes>
    <includes refid="libhal_2units_8hpp" local="yes">units.hpp</includes>
    <includedby refid="systick__timer_8hpp" local="no">libraries/include/libhal-armcortex/systick_timer.hpp</includedby>
    <includedby refid="libhal-mock_2timer_8hpp" local="no">libraries/include/libhal-mock/timer.hpp</includedby>
    <includedby refid="inert__timer_8hpp" local="no">libraries/include/libhal-soft/inert_drivers/inert_timer.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>libraries/include/libhal/timer.hpp</label>
        <link refid="libhal_2timer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>system_error</label>
      </node>
      <node id="7">
        <label>cstdint</label>
      </node>
      <node id="9">
        <label>tl/function_ref.hpp</label>
      </node>
      <node id="8">
        <label>third_party/inplace_function.hpp</label>
      </node>
      <node id="6">
        <label>functional.hpp</label>
        <link refid="functional_8hpp_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>units.hpp</label>
        <link refid="libhal_2units_8hpp_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>boost/leaf.hpp</label>
      </node>
      <node id="3">
        <label>error.hpp</label>
        <link refid="error_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>chrono</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>libraries/include/libhal/timer.hpp</label>
        <link refid="libhal_2timer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>libraries/include/libhal-mock/timer.hpp</label>
        <link refid="libhal-mock_2timer_8hpp_source"/>
      </node>
      <node id="2">
        <label>libraries/include/libhal-armcortex/systick_timer.hpp</label>
        <link refid="systick__timer_8hpp_source"/>
      </node>
      <node id="4">
        <label>libraries/include/libhal-soft/inert_drivers/inert_timer.hpp</label>
        <link refid="inert__timer_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classhal_1_1timer" prot="public">hal::timer</innerclass>
    <innerclass refid="structhal_1_1timer_1_1out__of__bounds__error" prot="public">hal::timer::out_of_bounds_error</innerclass>
    <innerclass refid="structhal_1_1timer_1_1is__running__t" prot="public">hal::timer::is_running_t</innerclass>
    <innerclass refid="structhal_1_1timer_1_1cancel__t" prot="public">hal::timer::cancel_t</innerclass>
    <innerclass refid="structhal_1_1timer_1_1schedule__t" prot="public">hal::timer::schedule_t</innerclass>
    <innernamespace refid="namespacehal">hal</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2023<sp/>Google<sp/>LLC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;error.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;functional.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;units.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacehal" kindref="compound">hal</ref><sp/>{</highlight></codeline>
<codeline lineno="37" refid="classhal_1_1timer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classhal_1_1timer" kindref="compound">timer</ref></highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47" refid="structhal_1_1timer_1_1out__of__bounds__error" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhal_1_1timer_1_1out__of__bounds__error" kindref="compound">out_of_bounds_error</ref></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="50" refid="structhal_1_1timer_1_1out__of__bounds__error_1ab0517dc528b50b365f77ae8b8a275afc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::chrono::nanoseconds<sp/><ref refid="structhal_1_1timer_1_1out__of__bounds__error_1ab0517dc528b50b365f77ae8b8a275afc" kindref="member">tick_period</ref>;</highlight></codeline>
<codeline lineno="52" refid="structhal_1_1timer_1_1out__of__bounds__error_1a90823e73f8b44ecf857cedf4eb32e7bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::chrono::nanoseconds<sp/><ref refid="structhal_1_1timer_1_1out__of__bounds__error_1a90823e73f8b44ecf857cedf4eb32e7bd" kindref="member">maximum</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="structhal_1_1timer_1_1is__running__t" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhal_1_1timer_1_1is__running__t" kindref="compound">is_running_t</ref></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="69" refid="structhal_1_1timer_1_1is__running__t_1a58a259f12080616918069c312d9befd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structhal_1_1timer_1_1is__running__t_1a58a259f12080616918069c312d9befd1" kindref="member">is_running</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="structhal_1_1timer_1_1cancel__t" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhal_1_1timer_1_1cancel__t" kindref="compound">cancel_t</ref></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>{};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="structhal_1_1timer_1_1schedule__t" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structhal_1_1timer_1_1schedule__t" kindref="compound">schedule_t</ref></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>{};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="classhal_1_1timer_1aa31f569c3165567f24920a06736d57ba" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>result&lt;is_running_t&gt;<sp/><ref refid="classhal_1_1timer_1aa31f569c3165567f24920a06736d57ba" kindref="member">is_running</ref>()</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>driver_is_running();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="classhal_1_1timer_1a51c60a0ecd9c3e4b0871af671bdeac3e" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>result&lt;cancel_t&gt;<sp/><ref refid="classhal_1_1timer_1a51c60a0ecd9c3e4b0871af671bdeac3e" kindref="member">cancel</ref>()</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>driver_cancel();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="classhal_1_1timer_1a992234ed828ee9fac8b06ae4d0b8f83c" refkind="member"><highlight class="normal"><sp/><sp/>[[nodiscard]]<sp/>result&lt;schedule_t&gt;<sp/><ref refid="classhal_1_1timer_1a992234ed828ee9fac8b06ae4d0b8f83c" kindref="member">schedule</ref>(</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehal_1a6051b44bfb2759cbcdba16019f3f1550" kindref="member">hal::callback</ref>&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)&gt;<sp/>p_callback,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehal_1a858b08a6e4e3eb5752d8e0daaad5ed00" kindref="member">hal::time_duration</ref><sp/>p_delay)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>driver_schedule(p_callback,<sp/>p_delay);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classhal_1_1timer" kindref="compound">timer</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>result&lt;is_running_t&gt;<sp/>driver_is_running()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>result&lt;cancel_t&gt;<sp/>driver_cancel()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>result&lt;schedule_t&gt;<sp/>driver_schedule(</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehal_1a6051b44bfb2759cbcdba16019f3f1550" kindref="member">hal::callback</ref>&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)&gt;<sp/>p_callback,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacehal_1a858b08a6e4e3eb5752d8e0daaad5ed00" kindref="member">hal::time_duration</ref><sp/>p_delay)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">};</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>hal</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="libraries/include/libhal/timer.hpp"/>
  </compounddef>
</doxygen>
